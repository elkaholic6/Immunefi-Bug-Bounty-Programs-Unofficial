{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "mtpelerin",
      "slug": "mtpelerin",
      "project": "Mt Pelerin",
      "maxBounty": 5000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6tsDyr3ikdFL8rLa53IcOZ/e249b3d566eee170e2b73a37d6666f2f/Mtpelerin-logo.png",
      "launchDate": "2021-02-08T00:00-07:00",
      "updatedDate": "2023-10-20T14:32:24.746Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $1,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "critical",
          "payout": "USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "high",
          "payout": "USD $1,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "6VgT62FAIZIoiuZ0gIRD1t",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/access/Operator.sol",
          "description": "Operator.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "4cuGzIaPzDGZHx80cir32",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/access/Roles.sol",
          "description": "Roles.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "4UeW4FpLHQPxJexCfXXatb",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/operating/ComplianceRegistry.sol",
          "description": "ComplianceRegistry.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "7Hm7x1dCdQABc4N8YwvWH0",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/operating/PriceOracle.sol",
          "description": "PriceOracle.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "6zeeupgzRQu136U55bGVm8",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/operating/Processor.sol",
          "description": "Processor.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "WskxgDVQBjP38SHu70644",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/operating/RuleEngine.sol",
          "description": "RuleEngine.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "3oIlXIpoXJPGHjjL86F5B6",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/AddressThresholdLockRule.sol",
          "description": "AddressThresholdLockRule.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "AOsbwM5d5yQJZy01JJipk",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/GlobalFreezeRule.sol",
          "description": "GlobalFreezeRule.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "1RUPFMhzvVcFkzoFCtoEfD",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/HardTransferLimitRule.sol",
          "description": "HardTransferLimitRule.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "7zVNOOeY7cJkx5Vh3Sod9Y",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/MaxTransferRule.sol",
          "description": "MaxTransferRule.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "3TqTOUYxZVbxaVPqpgvsaX",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/MinTransferRule.sol",
          "description": "MinTransferRule.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "7MTff8UxhMnGuGEdXGKRqV",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/SoftTransferLimitRule.sol",
          "description": "SoftTransferLimitRule.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "6XbxjHg07hErtMFY5QnKI5",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/UserAttributeValidToRule.sol",
          "description": "UserAttributeValidToRule.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "4mJWbeVVF1b5eNq20MK8dq",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/UserFreezeRule.sol",
          "description": "UserFreezeRule.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "6An7SLCJw7nHUsAu1gRg5I",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/UserKycThresholdBothRule.sol",
          "description": "UserKycThresholdBothRule.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "6fMifOxgZm8RE4F34N1POh",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/UserKycThresholdFromRule.sol",
          "description": "UserKycThresholdFromRule.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "3t69M0o6tDXMVagXQi9YfZ",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/UserKycThresholdToRule.sol",
          "description": "UserKycThresholdToRule.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "1SEDEZ0qv1lkCgKlxt7P79",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/UserValidRule.sol",
          "description": "UserValidRule.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "6Iy1Hw3zVCglBGhAQEJL31",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/YesNoRule.sol",
          "description": "YesNoRule.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "3erYW9ykamK8lIRoIpFdU0",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/YesNoUpdateRule.sol",
          "description": "YesNoUpdateRule.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "1muiIqmc8buNPEaNKI3rsW",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/sale/TokenSale.sol",
          "description": "TokenSale.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "2pw0y7pNc9c1DqjL033bM5",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/token/BondBridgeToken.sol",
          "description": "BondBridgeToken.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "2w40zhhEiB5zXAMuFXbQHF",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/token/BridgeToken.sol",
          "description": "BridgeToken.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "3LPq7vtWVf0aelBR0AXPq1",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/token/CoinBridgeToken.sol",
          "description": "CoinBridgeToken.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "4eA1oqITUyQGuKHIvlKhxC",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/token/ShareBridgeToken.sol",
          "description": "ShareBridgeToken.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "5IyKgwlj83wmBQ20JJAnbq",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/token/abstract/BridgeERC20.sol",
          "description": "BridgeERC20.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "2xzQTvmerVfIyVi7sXAzZU",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/token/abstract/SeizableBridgeERC20.sol",
          "description": "SeizableBridgeERC20.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "bwIamkHUjewMqWgbmTUyY",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/utils/TokenDispenserQueue.sol",
          "description": "TokenDispenserQueue.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "4sAOjes3KTpWUD4WS2wON3",
          "type": "smart_contract",
          "url": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/voting/ShareholderMeeting.sol",
          "description": "ShareholderMeeting.sol",
          "isPrimacyOfImpact": null
        },
        {
          "id": "7tSPWLnWUI1lYT5atyLgnR",
          "type": "websites_and_applications",
          "url": "https://apps.apple.com/us/app/bridge-wallet/id1481859680",
          "description": null,
          "isPrimacyOfImpact": null
        },
        {
          "id": "6Nk5fl1fBgH4T1VUcqNPM2",
          "type": "websites_and_applications",
          "url": "https://play.google.com/store/apps/details?id=com.mtpelerin.bridge",
          "description": null,
          "isPrimacyOfImpact": null
        },
        {
          "id": "1mvZtrB5vQGuHbaHXLCVY2",
          "type": "websites_and_applications",
          "url": "https://www.mtpelerin.com",
          "description": null,
          "isPrimacyOfImpact": null
        }
      ],
      "impacts": [
        {
          "id": "3GiSULiaqsFHpUE8GgLAdB",
          "title": "Loss of user funds staked (principal) by freezing or theft",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2Myed5avlFS2UvisNpNLeG",
          "title": "Data theft",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "2iVOGiO4FdXp1qnoOmmgrE",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6iy4oLOwy0lLW5apSGQyIs",
          "title": "Freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "4aSo6YYo6CgQCfaI28hviE",
          "title": "Temporary freezing of funds for any amount of time",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "GLRHZlpvbcNiTHgPz4f1V",
          "title": "Data deletion",
          "type": "websites_and_applications",
          "severity": "high"
        }
      ],
      "programOverview": "Mt Pelerin is a Swiss fintech company specialized in solutions to bridge the\ncrypto economy with traditional banking and finance. Today it offers two key\nproducts: Bridge Protocol, an open-source ERC20 asset tokenization platform\nwith related tech, financial, legal and compliance services, as well as Bridge\nWallet, a non-custodial Bitcoin and Ethereum mobile wallet with live\ncrypto-fiat on/off-ramp.\n\nThe bug bounty program is focused around its smart contracts, mobile apps and\nwebsite, and is mostly aimed at addressing serious security issues directly\naffecting fund safety and user data protection.",
      "prioritizedVulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types as long as they result in an impact listed in the Impacts in Scope section:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - Including user authentication errors\n- Solidity/EVM details not considered\n  - Including integer over-/under-flow\n  - Including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - Including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - Including flash loan attacks\n- Congestion and scalability\n  - Including running out of gas\n  - Including block stuffing\n  - Including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces\n\n**Websites and Apps**\n\n- Remote Code Execution\n- Trusting trust/dependency vulnerabilities\n- Vertical Privilege Escalation\n- XML External Entities Injection\n- SQL Injection\n- LFI/RFI\n- Horizontal Privilege Escalation\n- Stored XSS\n- Reflective XSS with impact\n- CSRF\n- CSRF with impact\n- Direct object reference\n- Internal SSRF\n- Session fixation\n- Insecure Deserialization\n- Direct object reference\n- Path Traversal\n- DOM XSS\n- SSL misconfigurations\n- SSL/TLS issues (weak crypto, improper setup)\n- URL redirect\n- Clickjacking\n- Misleading Unicode text (e.g. using right to left override characters)\n- Coercing the application to display/return specific text to other users",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAdditionally, all bug reports without proof of concept exploits with\ndemonstrated impact, as well as recommendations for new features, are not\naccepted.\n\nPayouts are handled by **Mt Pelerin** directly and are estimated in\n**USD**. However, payouts are done in **ETH, BTC, USDT, USDC, or DAI**.",
      "outOfScopeAndRules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n**Smart Contracts**\n\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**Websites and Apps**\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Mobile app vulnerabilities that would require root access to the device\n  - Mobile app vulnerabilities that would require physical  access to the device for more that 1 hourContent spoofing / Text injection issues\n  - Self-XSS\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security\n  flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, and most stack\n  traces\n- Vulnerabilities used to enumerate or confirm the existence of users or\n  tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more\n  severe vulnerability)\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Attacks requiring privileged access from within the organization\n- Requests for new features\n- Bugs without proof-of-concept exploits showing impact\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": null,
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "CEX",
          "Wallet"
        ],
        "projectType": [
          "Exchange"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "language": null
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $5,000"
          },
          {
            "level": "High",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "USD $5,000"
          },
          {
            "level": "High",
            "payout": "USD $1,000"
          }
        ]
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Mt Pelerin is a Swiss fintech company specialized in solutions to bridge the\\ncrypto economy with traditional banking and finance. Today it offers two key\\nproducts: Bridge Protocol, an open-source ERC20 asset tokenization platform\\nwith related tech, financial, legal and compliance services, as well as Bridge\\nWallet, a non-custodial Bitcoin and Ethereum mobile wallet with live\\ncrypto-fiat on/off-ramp.\"), mdx(\"p\", null, \"The bug bounty program is focused around its smart contracts, mobile apps and\\nwebsite, and is mostly aimed at addressing serious security issues directly\\naffecting fund safety and user data protection.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Mt Pelerin is a Swiss fintech company specialized in solutions to bridge the\ncrypto economy with traditional banking and finance. Today it offers two key\nproducts: Bridge Protocol, an open-source ERC20 asset tokenization platform\nwith related tech, financial, legal and compliance services, as well as Bridge\nWallet, a non-custodial Bitcoin and Ethereum mobile wallet with live\ncrypto-fiat on/off-ramp.</p><p>The bug bounty program is focused around its smart contracts, mobile apps and\nwebsite, and is mostly aimed at addressing serious security issues directly\naffecting fund safety and user data protection.</p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are especially interested in receiving and rewarding vulnerabilities of the following types as long as they result in an impact listed in the Impacts in Scope section:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts/Blockchain:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Re-entrancy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Logic errors\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Including user authentication errors\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Solidity/EVM details not considered\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Including integer over-/under-flow\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Including unhandled exceptions\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusting trust/dependency vulnerabilities\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Including composability vulnerabilities\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Oracle failure/manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Novel governance attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Economic/financial attacks\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Including flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Congestion and scalability\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Including running out of gas\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Including block stuffing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Including susceptibility to frontrunning\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Consensus failures\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cryptography problems\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Signature malleability\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to replay attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak randomness\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak encryption\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to block timestamp manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing access controls / unprotected internal or debugging interfaces\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Remote Code Execution\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusting trust/dependency vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vertical Privilege Escalation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"XML External Entities Injection\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SQL Injection\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFI/RFI\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Horizontal Privilege Escalation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Stored XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reflective XSS with impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct object reference\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Internal SSRF\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Session fixation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Insecure Deserialization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct object reference\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Path Traversal\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DOM XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SSL misconfigurations\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SSL/TLS issues (weak crypto, improper setup)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"URL redirect\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Clickjacking\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Misleading Unicode text (e.g. using right to left override characters)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Coercing the application to display/return specific text to other users\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>We are especially interested in receiving and rewarding vulnerabilities of the following types as long as they result in an impact listed in the Impacts in Scope section:</p><p><strong>Smart Contracts/Blockchain:</strong></p><ul><li>Re-entrancy</li><li>Logic errors<ul><li>Including user authentication errors</li></ul></li><li>Solidity/EVM details not considered<ul><li>Including integer over-/under-flow</li><li>Including unhandled exceptions</li></ul></li><li>Trusting trust/dependency vulnerabilities<ul><li>Including composability vulnerabilities</li></ul></li><li>Oracle failure/manipulation</li><li>Novel governance attacks</li><li>Economic/financial attacks<ul><li>Including flash loan attacks</li></ul></li><li>Congestion and scalability<ul><li>Including running out of gas</li><li>Including block stuffing</li><li>Including susceptibility to frontrunning</li></ul></li><li>Consensus failures</li><li>Cryptography problems<ul><li>Signature malleability</li><li>Susceptibility to replay attacks</li><li>Weak randomness</li><li>Weak encryption</li></ul></li><li>Susceptibility to block timestamp manipulation</li><li>Missing access controls / unprotected internal or debugging interfaces</li></ul><p><strong>Websites and Apps</strong></p><ul><li>Remote Code Execution</li><li>Trusting trust/dependency vulnerabilities</li><li>Vertical Privilege Escalation</li><li>XML External Entities Injection</li><li>SQL Injection</li><li>LFI/RFI</li><li>Horizontal Privilege Escalation</li><li>Stored XSS</li><li>Reflective XSS with impact</li><li>CSRF</li><li>CSRF with impact</li><li>Direct object reference</li><li>Internal SSRF</li><li>Session fixation</li><li>Insecure Deserialization</li><li>Direct object reference</li><li>Path Traversal</li><li>DOM XSS</li><li>SSL misconfigurations</li><li>SSL/TLS issues (weak crypto, improper setup)</li><li>URL redirect</li><li>Clickjacking</li><li>Misleading Unicode text (e.g. using right to left override characters)</li><li>Coercing the application to display/return specific text to other users</li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\"), mdx(\"p\", null, \"Additionally, all bug reports without proof of concept exploits with\\ndemonstrated impact, as well as recommendations for new features, are not\\naccepted.\"), mdx(\"p\", null, \"Payouts are handled by \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Mt Pelerin\"), \" directly and are estimated in\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD\"), \". However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ETH, BTC, USDT, USDC, or DAI\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.</p><p>Additionally, all bug reports without proof of concept exploits with\ndemonstrated impact, as well as recommendations for new features, are not\naccepted.</p><p>Payouts are handled by <strong>Mt Pelerin</strong> directly and are estimated in\n<strong>USD</strong>. However, payouts are done in <strong>ETH, BTC, USDT, USDC, or DAI</strong>.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"The following vulnerabilities are excluded from the rewards for this bug\\nbounty program:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theoretical vulnerabilities without any proof or demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mobile app vulnerabilities that would require root access to the device\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mobile app vulnerabilities that would require physical  access to the device for more that 1 hourContent spoofing / Text injection issues\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Self-XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Captcha bypass using OCR\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with no security impact (logout CSRF, change language, etc.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security\\nflags (such as \\u201Chttponly\\u201D)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Server-side information disclosure such as IPs, server names, and most stack\\ntraces\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities used to enumerate or confirm the existence of users or\\ntenants\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities requiring unlikely user actions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"URL Redirects (unless combined with another vulnerability to produce a more\\nsevere vulnerability)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of SSL/TLS best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DDoS vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring privileged access from within the organization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Requests for new features\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bugs without proof-of-concept exploits showing impact\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"The following activities are prohibited by bug bounty program:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be\\ndone on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees\\nand/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser\\nextensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p><strong>The following vulnerabilities are excluded from the rewards for this bug\nbounty program:</strong></p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li></ul><p><strong>Websites and Apps</strong></p><ul><li>Theoretical vulnerabilities without any proof or demonstration</li><li>Mobile app vulnerabilities that would require root access to the device</li><li>Mobile app vulnerabilities that would require physical  access to the device for more that 1 hourContent spoofing / Text injection issues</li><li>Self-XSS</li><li>Captcha bypass using OCR</li><li>CSRF with no security impact (logout CSRF, change language, etc.)</li><li>Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security\nflags (such as “httponly”)</li><li>Server-side information disclosure such as IPs, server names, and most stack\ntraces</li><li>Vulnerabilities used to enumerate or confirm the existence of users or\ntenants</li><li>Vulnerabilities requiring unlikely user actions</li><li>URL Redirects (unless combined with another vulnerability to produce a more\nsevere vulnerability)</li><li>Lack of SSL/TLS best practices</li><li>DDoS vulnerabilities</li><li>Attacks requiring privileged access from within the organization</li><li>Requests for new features</li><li>Bugs without proof-of-concept exploits showing impact</li></ul><p><strong>The following activities are prohibited by bug bounty program:</strong></p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be\ndone on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees\nand/or customers</li><li>Any testing with third party systems and applications (e.g. browser\nextensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

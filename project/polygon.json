{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "polygon",
      "slug": "polygon",
      "project": "Polygon",
      "maxBounty": 1100000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/8EEzTabH4B0Palx5UgpL8/4d800cd963e02d33e39872b4030e7e2f/Polygon__1_.jpeg",
      "launchDate": "2021-09-13T08:00-05:00",
      "updatedDate": "2023-05-05T04:22:57.892Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "blockchain_dlt",
          "level": "critical",
          "payout": "USD $50,000 up to USD $1,000,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "high",
          "payout": "USD $10,000 up to $50,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $50,000 up to USD $1,000,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $10,000 up to $50,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "J1460FDK1yO1zgq7jRs0b",
          "type": "smart_contract",
          "url": "https://static.matic.network/network/mainnet/v1/index.json",
          "description": null
        },
        {
          "id": "3nyCTsmPCyBJdkP12Qnok3",
          "type": "blockchain_dlt",
          "url": "https://github.com/maticnetwork/heimdall/",
          "description": null
        },
        {
          "id": "1hdxDqdoHx006K87eqp48f",
          "type": "blockchain_dlt",
          "url": "https://github.com/maticnetwork/bor/",
          "description": null
        }
      ],
      "impacts": [
        {
          "id": "6TJ9Fp2cXMC2SQjgwA42z5",
          "title": "Loss of user funds by permanent freezing or direct theft",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6tovvBNzGDKgLJHJT8Ip2q",
          "title": "Loss of governance funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "684qaUuhTh7IkRzbWPYiPu",
          "title": "Network shutdown",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5ILiyGq34SVjqXf2Jzjo6X",
          "title": "Double spend by getting the clients to accept a different chain",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "7IPwmTmtr78WYk05Itienn",
          "title": "Double spend by validating malicious blocks",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5K3lTvCVOrdxwcJdxiXuMu",
          "title": "Tamper/manipulate blockchain history to invalidate transactions",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6MLN7PkJwlAArT0t3hLOay",
          "title": "Cause a user to mint tokens to own account",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "taxjKqJbTJ9GvexnrlY5m",
          "title": "Undermine consensus mechanism to split the chain",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2sKh8Fx9BkzDr53WzM1lEc",
          "title": "Chain halt and shutting down the network (Total network shutdown)",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2MKEZoov2dtIDOPAjS7aOO",
          "title": "Steal tokens from node",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3UOnCqJ2tW6wrZ3wK9PSps",
          "title": "Loss of user funds by permanent freezing or direct theft",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "2KNywsem7BFIwdHTDwK5X8",
          "title": "Loss of governance funds",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "6f2Ntuuits2nWBwPnjqgcM",
          "title": "Network shutdown",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "5gpdrdYRTuEQcoTgRVxbUt",
          "title": "Double spend by getting the clients to accept a different chain",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "4PZg3NlThrhraTv91n8Ofl",
          "title": "Double spend by validating malicious blocks",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "4Ifw17ZTB9fGPRFwBxwZe1",
          "title": "Tamper/manipulate blockchain history to invalidate transactions",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "3hpzQaIWjCmi9IUhdlFzxk",
          "title": "Cause a user to mint tokens to own account",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "1H5AkwHE14R23xgavV6EPU",
          "title": "Undermine consensus mechanism to split the chain",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "3Me7X4PA26aO5itAzwcNh0",
          "title": "Chain halt and shutting down the network (Total network shutdown)",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "27y2xfP6fSHHwYXz5WtTnX",
          "title": "Steal tokens from node",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "Oz9DvWclmdELGxH2gDeJ9",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6xfFAyWqhcp05Zyri6TMHh",
          "title": "Freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6uGWY7j88Hw1RAgnq1Bspg",
          "title": "Temporary freezing of funds for any amount of time",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "1Osj8mBLthkrd8pqXw8GoN",
          "title": "Theft of unclaimed yield",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "1sSFH9dLuyHb5aiuYgEnFX",
          "title": "Freezing of unclaimed yield",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "5QhJZkidCHOEscr9VgjzOk",
          "title": "Temporary freezing of funds for any amount of time",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "11MeMV4bcVDZgwiYkCNGho",
          "title": "Unable to call smart contract",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "6S5S3pHTalCroRnczQYXXT",
          "title": "Smart contract gas drainage",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5w26X8afDCa7LhQyaihYtW",
          "title": "Denial of service attacks",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "36W6PyMbZ2bd15Os35XiL9",
          "title": "Prevent node from accessing the network",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "59CrLktZLejkxbODy5cB1k",
          "title": "Censorship (e.g. on checkpoints)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3aenOl1T8sQxcjilunX2N4",
          "title": "DoS over 30% of validators and does not shut down the network",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "70D42DBBRSSQJMuvStEpJe",
          "title": "Unable to call smart contract",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "1stO99FF97AWrG7MllrwNj",
          "title": "Smart contract gas drainage",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "3sfNSjlJ6QQZtA36xcTzdW",
          "title": "Denial of service attacks",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "2tvJmyQrOrSzuSgvwy8x4i",
          "title": "Prevent node from accessing the network",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "6lmKEtnaAgdY6hkyZxz4XW",
          "title": "Censorship (e.g. on checkpoints)",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "7qtUKlLMBRHaaF1w5TjHxZ",
          "title": "DoS over 30% of validators and does not shut down the network",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "3PNoFtZRUvCx9mOHvk225",
          "title": "Smart contract fails to deliver promised returns",
          "type": "smart_contract",
          "severity": "low"
        },
        {
          "id": "2ITOaRu9AySyQ05RvwPlpm",
          "title": "Checkpoint manipulation",
          "type": "smart_contract",
          "severity": "low"
        },
        {
          "id": "7zo9IR89DpH1qm65Egtkoy",
          "title": "DoS under 30% of validators and does not shut down the network",
          "type": "smart_contract",
          "severity": "low"
        },
        {
          "id": "4XDAjE3euNIKJ5fW4aIc46",
          "title": "Smart contract fails to deliver promised returns",
          "type": "blockchain_dlt",
          "severity": "low"
        },
        {
          "id": "6ybyVsVFfdUm1DvkISTloO",
          "title": "Checkpoint manipulation",
          "type": "blockchain_dlt",
          "severity": "low"
        },
        {
          "id": "81UlOd5RYNKgtseIKByZa",
          "title": "DoS under 30% of validators and does not shut down the network",
          "type": "blockchain_dlt",
          "severity": "low"
        }
      ],
      "programOverview": "Polygon is a Layer 2 scaling solution that achieves scale by utilizing sidechains for off-chain computation and a decentralized network of Proof-of-Stake (PoS) validators.\n\nPolygon strives to solve the scalability and usability issues while not compromising on decentralization and leveraging the existing developer community and ecosystem. It aims at improving existing platforms by providing scalability and superior user experience to dApps and user functionalities.\n\nIt is a scaling solution for public blockchains. Polygon PoS supports all the existing Ethereum tooling along with faster and cheaper transactions.\nFor more information about Polygon Labs and Polygon protocols, please visit [https://polygon.technology/](https://polygon.technology/). \n\n__For Whitehats__: It is highly recommended that you review the details of this program in full. Although many Bug Bounty programs have standard terms and conditions, each also has their own unique details that are critical to your success.  \n\nPrior to submitting a report please review the Immunefi [Bug Report Template and Best Practices](https://immunefisupport.zendesk.com/hc/en-us/articles/12435277406481-Bug-Report-Template). \n",
      "prioritizedVulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
      "rewardsBody": "__Reward Distribution__\n\nPlease review how rewards are distributed based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/). This is a simplified 5-level scale system with separate scales for Smart Contracts and Websites/Apps.\n\nRewards for critical blockchain/DLT and smart contract bug reports will be further capped at 10% of direct funds at risk if the bug discovered is exploited. However, there is a minimum reward of __USD 50 000__.\n\nHigh blockchain/DLT and smart contract vulnerabilities rewards for the project bug bounty program are scaled based on an internally established team criteria, taking into account the exploitability of the bug, the impact it causes, and the likelihood of the vulnerability presenting itself, which is especially factored in with bug reports requiring multiple conditions to be met that are currently not in-place. However, there is a minimum reward of USD 10 000 for High severity level and will be further capped at up to 100% of the funds affected. Rewards will be provided at the determined fair value by the team depending on these conditions, assuming that the bug report is in-scope of the bug bounty program.\n\n__Payouts and Payout Requirements__\n\nPayouts are handled by the Polygon Labs team directly and are denominated in USD. However, payouts are done in USDC. Polygon Labs commits to honoring payouts according to the terms set out in this program at the time of report submission, and to treat this program as the agreement and source of truth concerning bug reports and responsible disclosures. \n\nThis bug bounty program is only open to individuals who reside outside of the countries that are restricted by OFAC and by UNSC resolutions. If the individual is a US person, tax information may be required in order to properly issue a 1099.\n\nFor the purposes of determining report validity, this is a Primacy of Impact program. \n\nLearn more about report validity best practices here: [Best Practice - Primacy of Impact vs Primacy of Rules](https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact). \n\n__KYC Requirements__\n\nPolygon Labs does have a Know Your Customer (KYC) requirement for bug bounty payouts. \n\n| __KYC Info Required__     |\n| ---------- |\n| Wallet Address       |\n| Passport (for Critical payouts)       |\n| Place of residence (for Critical payouts)       |\n\nKYC information is only required on confirmation of the validity of a bug report which Polygon Labs determines in its sole discretion. \n",
      "outOfScopeAndRules": "The following impacts and attack vectors are excluded from rewards by default for all Immunefi bug bounty programs: \n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist), except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\nBroken link hijacking is out of scope\n\n__Smart Contracts and Blockchain/DLT__\n - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n  - Attacks using vulnerable, old or deprecated libraries, that are not exploitable\n\n__Prohibited Activities__\n\nThe following activities are prohibited by this bug bounty program. Violation of these rules can result in a temporary suspension or permanent ban from the Immunefi platform at the sole discretion of the Immunefi team, which may also result in: 1) the forfeiture and loss of access to all bug submissions, and 2) zero payout. \n\nPlease note that Immunefi has no tolerance for spam/low-quality/incomplete bug reports, “beg bounty” behavior, and misrepresentation of assets and severity. Immunefi exists to protect the global crypto community, not facilitate grift.\n\n__Prohibited:__ \n\n  - Any testing with mainnet or public testnet deployed code; all testing should be done on private testnets\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty\n  - [Any other actions prohibited by the Immunefi Rules](https://immunefi.com/rules/). These rules are subject to change at any time.  \n",
      "assetsBodyV2": "The list of all deployed contracts can be found at: [https://static.matic.network/network/mainnet/v1/index.json](https://static.matic.network/network/mainnet/v1/index.json)\n\nImpacts only apply to assets in active use by the project like contracts on mainnet or web/app assets used in production. Any impact that applies to assets not in active use, like test or mock files, are out-of-scope of the bug bounty program unless explicitly mentioned as in-scope. In the case of Smart Contracts, please always make sure the code has been deployed and present in the JSON file on the first row.\n\n__Blockchain/DLT__\n\n  - __Blockchain/DLT - PoC__, Blockchain/DLT bug reports are to include a runnable Proof of Concept (PoC) in order to prove impact.  \n  - For more information on PoCs please visit: [Proof of Concept (PoC) Guidelines and Rules](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules)\n\n  - __Smart Contracts - PoC__, Smart Contract bug reports are to include a runnable Proof of Concept (PoC) in order to prove impact.  \n  - For more information on PoCs please visit: [Proof of Concept (PoC) Guidelines and Rules](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules)\n\n__Dev Environment and Documentation__ \n\nPolygon Labs has included dev documentation and/or instructions to help in reviewing code and looking for bugs:\n\n| __Dev or Staging Environment Links__     |\n| ---------- |\n| [https://wiki.polygon.technology/docs/zkEVM/develop/](https://wiki.polygon.technology/docs/zkEVM/develop/)        |\n",
      "impactsBody": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table. The final classification however takes into consideration the likelihood of the impact being achieved based on the table below. When submitting a bug report, select the original assigned impact level, but please be aware that its severity level may be reassigned based on the likelihood according to this table.         \n\n| Impact \\ Likelihood     | Critical     | High     | Medium     | Low     | Informational     |\n| ---------- | ---------- | ---------- | ---------- | ---------- | ---------- |\n| Critical       | Critical       | Critical       | High       | Medium       | Informational       |\n| High       | High       | High       | High       | Medium       | Informational       |\n| Medium       | Medium       | Medium       | Medium       | Low       | Informational       |\n| Low       | Medium/Low       | Medium       | Low       | Low       | Informational       |\n| None       | Informational       | Informational       | Informational       | Informational       | Informational       |\n\nIn addition to Immunefi’s Vulnerability Severity Classification System, Polygon classifies vulnerabilities using the Common Vulnerability Scoring System (CVSS). In case of discrepancy, final determination is done by Polygon.\n\n__Impacts to other assets__ \n\nHackers are encouraged to submit issues outside of those outlined Impacts and Assets in Scope. \n\nIf Whitehats can demonstrate a critical impact of code in production for an asset not in scope, Polygon Labs encourages you to submit your bug report using the “primacy of impact exception” asset as outlined below.\n",
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "L2"
        ],
        "projectType": [
          "Blockchain"
        ],
        "ecosystem": [
          "ETH",
          "Polygon"
        ],
        "programType": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Blockchain/DLT"
        ],
        "blockchain_rewards": [
          {
            "level": "Critical",
            "payout": "USD $50,000 up to USD $1,000,000"
          },
          {
            "level": "High",
            "payout": "USD $10,000 up to $50,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $50,000 up to USD $1,000,000"
          },
          {
            "level": "High",
            "payout": "USD $10,000 up to $50,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Polygon is a Layer 2 scaling solution that achieves scale by utilizing sidechains for off-chain computation and a decentralized network of Proof-of-Stake (PoS) validators.\"), mdx(\"p\", null, \"Polygon strives to solve the scalability and usability issues while not compromising on decentralization and leveraging the existing developer community and ecosystem. It aims at improving existing platforms by providing scalability and superior user experience to dApps and user functionalities.\"), mdx(\"p\", null, \"It is a scaling solution for public blockchains. Polygon PoS supports all the existing Ethereum tooling along with faster and cheaper transactions.\\nFor more information about Polygon Labs and Polygon protocols, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://polygon.technology/\"\n  }, \"https://polygon.technology/\"), \". \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"For Whitehats\"), \": It is highly recommended that you review the details of this program in full. Although many Bug Bounty programs have standard terms and conditions, each also has their own unique details that are critical to your success.  \"), mdx(\"p\", null, \"Prior to submitting a report please review the Immunefi \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/12435277406481-Bug-Report-Template\"\n  }, \"Bug Report Template and Best Practices\"), \". \"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Polygon is a Layer 2 scaling solution that achieves scale by utilizing sidechains for off-chain computation and a decentralized network of Proof-of-Stake (PoS) validators.</p><p>Polygon strives to solve the scalability and usability issues while not compromising on decentralization and leveraging the existing developer community and ecosystem. It aims at improving existing platforms by providing scalability and superior user experience to dApps and user functionalities.</p><p>It is a scaling solution for public blockchains. Polygon PoS supports all the existing Ethereum tooling along with faster and cheaper transactions.\nFor more information about Polygon Labs and Polygon protocols, please visit <a href=\"https://polygon.technology/\">https://polygon.technology/</a>. </p><p><strong>For Whitehats</strong>: It is highly recommended that you review the details of this program in full. Although many Bug Bounty programs have standard terms and conditions, each also has their own unique details that are critical to your success.  </p><p>Prior to submitting a report please review the Immunefi <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/12435277406481-Bug-Report-Template\">Bug Report Template and Best Practices</a>. </p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are especially interested in receiving and rewarding vulnerabilities of the following types:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\"), \" \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Re-entrancy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Logic errors\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including user authentication errors\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Solidity/EVM details not considered\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including integer over-/under-flow\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including rounding errors\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including unhandled exceptions\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusting trust/dependency vulnerabilities\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including composability vulnerabilities\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Oracle failure/manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Novel governance attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Economic/financial attacks\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Congestion and scalability\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including running out of gas\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including block stuffing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including susceptibility to frontrunning\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Consensus failures\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cryptography problems\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Signature malleability\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to replay attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak randomness\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak encryption\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to block timestamp manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing access controls / unprotected internal or debugging interfaces\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Remote Code Execution\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusting trust/dependency vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vertical Privilege Escalation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"XML External Entities Injection\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SQL Injection\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFI/RFI\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Horizontal Privilege Escalation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Stored XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reflective XSS with impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct object reference\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Internal SSRF\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Session fixation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Insecure Deserialization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DOM XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SSL misconfigurations\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SSL/TLS issues (weak crypto, improper setup)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"URL redirect\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Clickjacking (must be accompanied with PoC)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Misleading Unicode text (e.g. using right to left override characters)\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>We are especially interested in receiving and rewarding vulnerabilities of the following types:</p><p><strong>Smart Contracts and Blockchain</strong> </p><ul><li>Re-entrancy</li><li>Logic errors<ul><li>including user authentication errors</li></ul></li><li>Solidity/EVM details not considered<ul><li>including integer over-/under-flow</li><li>including rounding errors</li><li>including unhandled exceptions</li></ul></li><li>Trusting trust/dependency vulnerabilities<ul><li>including composability vulnerabilities</li></ul></li><li>Oracle failure/manipulation</li><li>Novel governance attacks</li><li>Economic/financial attacks<ul><li>including flash loan attacks</li></ul></li><li>Congestion and scalability<ul><li>including running out of gas</li><li>including block stuffing</li><li>including susceptibility to frontrunning</li></ul></li><li>Consensus failures</li><li>Cryptography problems<ul><li>Signature malleability</li><li>Susceptibility to replay attacks</li><li>Weak randomness</li><li>Weak encryption</li></ul></li><li>Susceptibility to block timestamp manipulation</li><li>Missing access controls / unprotected internal or debugging interfaces</li></ul><p><strong>Websites and Apps</strong></p><ul><li>Remote Code Execution</li><li>Trusting trust/dependency vulnerabilities</li><li>Vertical Privilege Escalation</li><li>XML External Entities Injection</li><li>SQL Injection</li><li>LFI/RFI</li><li>Horizontal Privilege Escalation</li><li>Stored XSS</li><li>Reflective XSS with impact</li><li>CSRF with impact</li><li>Direct object reference</li><li>Internal SSRF</li><li>Session fixation</li><li>Insecure Deserialization</li><li>DOM XSS</li><li>SSL misconfigurations</li><li>SSL/TLS issues (weak crypto, improper setup)</li><li>URL redirect</li><li>Clickjacking (must be accompanied with PoC)</li><li>Misleading Unicode text (e.g. using right to left override characters)</li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Reward Distribution\")), mdx(\"p\", null, \"Please review how rewards are distributed based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale system with separate scales for Smart Contracts and Websites/Apps.\"), mdx(\"p\", null, \"Rewards for critical blockchain/DLT and smart contract bug reports will be further capped at 10% of direct funds at risk if the bug discovered is exploited. However, there is a minimum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 50 000\"), \".\"), mdx(\"p\", null, \"High blockchain/DLT and smart contract vulnerabilities rewards for the project bug bounty program are scaled based on an internally established team criteria, taking into account the exploitability of the bug, the impact it causes, and the likelihood of the vulnerability presenting itself, which is especially factored in with bug reports requiring multiple conditions to be met that are currently not in-place. However, there is a minimum reward of USD 10 000 for High severity level and will be further capped at up to 100% of the funds affected. Rewards will be provided at the determined fair value by the team depending on these conditions, assuming that the bug report is in-scope of the bug bounty program.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Payouts and Payout Requirements\")), mdx(\"p\", null, \"Payouts are handled by the Polygon Labs team directly and are denominated in USD. However, payouts are done in USDC. Polygon Labs commits to honoring payouts according to the terms set out in this program at the time of report submission, and to treat this program as the agreement and source of truth concerning bug reports and responsible disclosures. \"), mdx(\"p\", null, \"This bug bounty program is only open to individuals who reside outside of the countries that are restricted by OFAC and by UNSC resolutions. If the individual is a US person, tax information may be required in order to properly issue a 1099.\"), mdx(\"p\", null, \"For the purposes of determining report validity, this is a Primacy of Impact program. \"), mdx(\"p\", null, \"Learn more about report validity best practices here: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact\"\n  }, \"Best Practice - Primacy of Impact vs Primacy of Rules\"), \". \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"KYC Requirements\")), mdx(\"p\", null, \"Polygon Labs does have a Know Your Customer (KYC) requirement for bug bounty payouts. \"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"th\"\n  }, \"KYC Info Required\")))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Wallet Address\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Passport (for Critical payouts)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Place of residence (for Critical payouts)\")))), mdx(\"p\", null, \"KYC information is only required on confirmation of the validity of a bug report which Polygon Labs determines in its sole discretion. \"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p><strong>Reward Distribution</strong></p><p>Please review how rewards are distributed based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale system with separate scales for Smart Contracts and Websites/Apps.</p><p>Rewards for critical blockchain/DLT and smart contract bug reports will be further capped at 10% of direct funds at risk if the bug discovered is exploited. However, there is a minimum reward of <strong>USD 50 000</strong>.</p><p>High blockchain/DLT and smart contract vulnerabilities rewards for the project bug bounty program are scaled based on an internally established team criteria, taking into account the exploitability of the bug, the impact it causes, and the likelihood of the vulnerability presenting itself, which is especially factored in with bug reports requiring multiple conditions to be met that are currently not in-place. However, there is a minimum reward of USD 10 000 for High severity level and will be further capped at up to 100% of the funds affected. Rewards will be provided at the determined fair value by the team depending on these conditions, assuming that the bug report is in-scope of the bug bounty program.</p><p><strong>Payouts and Payout Requirements</strong></p><p>Payouts are handled by the Polygon Labs team directly and are denominated in USD. However, payouts are done in USDC. Polygon Labs commits to honoring payouts according to the terms set out in this program at the time of report submission, and to treat this program as the agreement and source of truth concerning bug reports and responsible disclosures. </p><p>This bug bounty program is only open to individuals who reside outside of the countries that are restricted by OFAC and by UNSC resolutions. If the individual is a US person, tax information may be required in order to properly issue a 1099.</p><p>For the purposes of determining report validity, this is a Primacy of Impact program. </p><p>Learn more about report validity best practices here: <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact\">Best Practice - Primacy of Impact vs Primacy of Rules</a>. </p><p><strong>KYC Requirements</strong></p><p>Polygon Labs does have a Know Your Customer (KYC) requirement for bug bounty payouts. </p><table><thead><tr><th><strong>KYC Info Required</strong></th></tr></thead><tbody><tr><td>Wallet Address</td></tr><tr><td>Passport (for Critical payouts)</td></tr><tr><td>Place of residence (for Critical payouts)</td></tr></tbody></table><p>KYC information is only required on confirmation of the validity of a bug report which Polygon Labs determines in its sole discretion. </p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following impacts and attack vectors are excluded from rewards by default for all Immunefi bug bounty programs: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist), except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\\nBroken link hijacking is out of scope\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain/DLT\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks using vulnerable, old or deprecated libraries, that are not exploitable\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Prohibited Activities\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program. Violation of these rules can result in a temporary suspension or permanent ban from the Immunefi platform at the sole discretion of the Immunefi team, which may also result in: 1) the forfeiture and loss of access to all bug submissions, and 2) zero payout. \"), mdx(\"p\", null, \"Please note that Immunefi has no tolerance for spam/low-quality/incomplete bug reports, \\u201Cbeg bounty\\u201D behavior, and misrepresentation of assets and severity. Immunefi exists to protect the global crypto community, not facilitate grift.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Prohibited:\"), \" \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet deployed code; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://immunefi.com/rules/\"\n  }, \"Any other actions prohibited by the Immunefi Rules\"), \". These rules are subject to change at any time.  \")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following impacts and attack vectors are excluded from rewards by default for all Immunefi bug bounty programs: </p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist), except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\nBroken link hijacking is out of scope</li></ul><p><strong>Smart Contracts and Blockchain/DLT</strong></p><ul><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li><li>Attacks using vulnerable, old or deprecated libraries, that are not exploitable</li></ul><p><strong>Prohibited Activities</strong></p><p>The following activities are prohibited by this bug bounty program. Violation of these rules can result in a temporary suspension or permanent ban from the Immunefi platform at the sole discretion of the Immunefi team, which may also result in: 1) the forfeiture and loss of access to all bug submissions, and 2) zero payout. </p><p>Please note that Immunefi has no tolerance for spam/low-quality/incomplete bug reports, “beg bounty” behavior, and misrepresentation of assets and severity. Immunefi exists to protect the global crypto community, not facilitate grift.</p><p><strong>Prohibited:</strong> </p><ul><li>Any testing with mainnet or public testnet deployed code; all testing should be done on private testnets</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li><li><a href=\"https://immunefi.com/rules/\">Any other actions prohibited by the Immunefi Rules</a>. These rules are subject to change at any time.  </li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The list of all deployed contracts can be found at: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://static.matic.network/network/mainnet/v1/index.json\"\n  }, \"https://static.matic.network/network/mainnet/v1/index.json\")), mdx(\"p\", null, \"Impacts only apply to assets in active use by the project like contracts on mainnet or web/app assets used in production. Any impact that applies to assets not in active use, like test or mock files, are out-of-scope of the bug bounty program unless explicitly mentioned as in-scope. In the case of Smart Contracts, please always make sure the code has been deployed and present in the JSON file on the first row.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Blockchain/DLT\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Blockchain/DLT - PoC\"), \", Blockchain/DLT bug reports are to include a runnable Proof of Concept (PoC) in order to prove impact.  \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"For more information on PoCs please visit: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\"\n  }, \"Proof of Concept (PoC) Guidelines and Rules\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts - PoC\"), \", Smart Contract bug reports are to include a runnable Proof of Concept (PoC) in order to prove impact.  \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"For more information on PoCs please visit: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\"\n  }, \"Proof of Concept (PoC) Guidelines and Rules\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Dev Environment and Documentation\"), \" \"), mdx(\"p\", null, \"Polygon Labs has included dev documentation and/or instructions to help in reviewing code and looking for bugs:\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"th\"\n  }, \"Dev or Staging Environment Links\")))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://wiki.polygon.technology/docs/zkEVM/develop/\"\n  }, \"https://wiki.polygon.technology/docs/zkEVM/develop/\"))))));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The list of all deployed contracts can be found at: <a href=\"https://static.matic.network/network/mainnet/v1/index.json\">https://static.matic.network/network/mainnet/v1/index.json</a></p><p>Impacts only apply to assets in active use by the project like contracts on mainnet or web/app assets used in production. Any impact that applies to assets not in active use, like test or mock files, are out-of-scope of the bug bounty program unless explicitly mentioned as in-scope. In the case of Smart Contracts, please always make sure the code has been deployed and present in the JSON file on the first row.</p><p><strong>Blockchain/DLT</strong></p><ul><li><p><strong>Blockchain/DLT - PoC</strong>, Blockchain/DLT bug reports are to include a runnable Proof of Concept (PoC) in order to prove impact.  </p></li><li><p>For more information on PoCs please visit: <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\">Proof of Concept (PoC) Guidelines and Rules</a></p></li><li><p><strong>Smart Contracts - PoC</strong>, Smart Contract bug reports are to include a runnable Proof of Concept (PoC) in order to prove impact.  </p></li><li><p>For more information on PoCs please visit: <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\">Proof of Concept (PoC) Guidelines and Rules</a></p></li></ul><p><strong>Dev Environment and Documentation</strong> </p><p>Polygon Labs has included dev documentation and/or instructions to help in reviewing code and looking for bugs:</p><table><thead><tr><th><strong>Dev or Staging Environment Links</strong></th></tr></thead><tbody><tr><td><a href=\"https://wiki.polygon.technology/docs/zkEVM/develop/\">https://wiki.polygon.technology/docs/zkEVM/develop/</a></td></tr></tbody></table>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table. The final classification however takes into consideration the likelihood of the impact being achieved based on the table below. When submitting a bug report, select the original assigned impact level, but please be aware that its severity level may be reassigned based on the likelihood according to this table.         \"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Impact \\\\ Likelihood\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Critical\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"High\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Medium\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Low\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Critical\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Critical\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Critical\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"High\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Medium\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"High\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"High\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"High\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"High\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Medium\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Medium\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Medium\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Medium\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Medium\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Low\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Low\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Medium/Low\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Medium\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Low\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Low\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"None\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\")))), mdx(\"p\", null, \"In addition to Immunefi\\u2019s Vulnerability Severity Classification System, Polygon classifies vulnerabilities using the Common Vulnerability Scoring System (CVSS). In case of discrepancy, final determination is done by Polygon.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Impacts to other assets\"), \" \"), mdx(\"p\", null, \"Hackers are encouraged to submit issues outside of those outlined Impacts and Assets in Scope. \"), mdx(\"p\", null, \"If Whitehats can demonstrate a critical impact of code in production for an asset not in scope, Polygon Labs encourages you to submit your bug report using the \\u201Cprimacy of impact exception\\u201D asset as outlined below.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table. The final classification however takes into consideration the likelihood of the impact being achieved based on the table below. When submitting a bug report, select the original assigned impact level, but please be aware that its severity level may be reassigned based on the likelihood according to this table.         </p><table><thead><tr><th>Impact \\ Likelihood</th><th>Critical</th><th>High</th><th>Medium</th><th>Low</th><th>Informational</th></tr></thead><tbody><tr><td>Critical</td><td>Critical</td><td>Critical</td><td>High</td><td>Medium</td><td>Informational</td></tr><tr><td>High</td><td>High</td><td>High</td><td>High</td><td>Medium</td><td>Informational</td></tr><tr><td>Medium</td><td>Medium</td><td>Medium</td><td>Medium</td><td>Low</td><td>Informational</td></tr><tr><td>Low</td><td>Medium/Low</td><td>Medium</td><td>Low</td><td>Low</td><td>Informational</td></tr><tr><td>None</td><td>Informational</td><td>Informational</td><td>Informational</td><td>Informational</td><td>Informational</td></tr></tbody></table><p>In addition to Immunefi’s Vulnerability Severity Classification System, Polygon classifies vulnerabilities using the Common Vulnerability Scoring System (CVSS). In case of discrepancy, final determination is done by Polygon.</p><p><strong>Impacts to other assets</strong> </p><p>Hackers are encouraged to submit issues outside of those outlined Impacts and Assets in Scope. </p><p>If Whitehats can demonstrate a critical impact of code in production for an asset not in scope, Polygon Labs encourages you to submit your bug report using the “primacy of impact exception” asset as outlined below.</p>",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

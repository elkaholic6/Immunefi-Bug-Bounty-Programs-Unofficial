{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "polygon",
      "slug": "polygon",
      "project": "Polygon",
      "maxBounty": 1100000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/8EEzTabH4B0Palx5UgpL8/4d800cd963e02d33e39872b4030e7e2f/Polygon__1_.jpeg",
      "launchDate": "2021-09-13T08:00-05:00",
      "updatedDate": "2023-02-02T04:20:25.009Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "blockchain_dlt",
          "level": "critical",
          "payout": "Up to USD $1,100,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "high",
          "payout": "USD $10,000 to USD $50,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to USD $1,100,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $10,000 to USD $50,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "J1460FDK1yO1zgq7jRs0b",
          "type": "smart_contract",
          "url": "https://static.matic.network/network/mainnet/v1/index.json",
          "description": null
        },
        {
          "id": "3nyCTsmPCyBJdkP12Qnok3",
          "type": "blockchain_dlt",
          "url": "https://github.com/maticnetwork/heimdall/",
          "description": null
        },
        {
          "id": "1hdxDqdoHx006K87eqp48f",
          "type": "blockchain_dlt",
          "url": "https://github.com/maticnetwork/bor/",
          "description": null
        }
      ],
      "impacts": [
        {
          "id": "6TJ9Fp2cXMC2SQjgwA42z5",
          "title": "Loss of user funds by permanent freezing or direct theft",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6tovvBNzGDKgLJHJT8Ip2q",
          "title": "Loss of governance funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "684qaUuhTh7IkRzbWPYiPu",
          "title": "Network shutdown",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5ILiyGq34SVjqXf2Jzjo6X",
          "title": "Double spend by getting the clients to accept a different chain",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "7IPwmTmtr78WYk05Itienn",
          "title": "Double spend by validating malicious blocks",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5K3lTvCVOrdxwcJdxiXuMu",
          "title": "Tamper/manipulate blockchain history to invalidate transactions",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6MLN7PkJwlAArT0t3hLOay",
          "title": "Cause a user to mint tokens to own account",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "taxjKqJbTJ9GvexnrlY5m",
          "title": "Undermine consensus mechanism to split the chain",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2sKh8Fx9BkzDr53WzM1lEc",
          "title": "Chain halt and shutting down the network (Total network shutdown)",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2MKEZoov2dtIDOPAjS7aOO",
          "title": "Steal tokens from node",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3UOnCqJ2tW6wrZ3wK9PSps",
          "title": "Loss of user funds by permanent freezing or direct theft",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "2KNywsem7BFIwdHTDwK5X8",
          "title": "Loss of governance funds",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "6f2Ntuuits2nWBwPnjqgcM",
          "title": "Network shutdown",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "5gpdrdYRTuEQcoTgRVxbUt",
          "title": "Double spend by getting the clients to accept a different chain",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "4PZg3NlThrhraTv91n8Ofl",
          "title": "Double spend by validating malicious blocks",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "4Ifw17ZTB9fGPRFwBxwZe1",
          "title": "Tamper/manipulate blockchain history to invalidate transactions",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "3hpzQaIWjCmi9IUhdlFzxk",
          "title": "Cause a user to mint tokens to own account",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "1H5AkwHE14R23xgavV6EPU",
          "title": "Undermine consensus mechanism to split the chain",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "3Me7X4PA26aO5itAzwcNh0",
          "title": "Chain halt and shutting down the network (Total network shutdown)",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "27y2xfP6fSHHwYXz5WtTnX",
          "title": "Steal tokens from node",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "Oz9DvWclmdELGxH2gDeJ9",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6xfFAyWqhcp05Zyri6TMHh",
          "title": "Freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6uGWY7j88Hw1RAgnq1Bspg",
          "title": "Temporary freezing of funds for any amount of time",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "1Osj8mBLthkrd8pqXw8GoN",
          "title": "Theft of unclaimed yield",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "1sSFH9dLuyHb5aiuYgEnFX",
          "title": "Freezing of unclaimed yield",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "5QhJZkidCHOEscr9VgjzOk",
          "title": "Temporary freezing of funds for any amount of time",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "11MeMV4bcVDZgwiYkCNGho",
          "title": "Unable to call smart contract",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "6S5S3pHTalCroRnczQYXXT",
          "title": "Smart contract gas drainage",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5w26X8afDCa7LhQyaihYtW",
          "title": "Denial of service attacks",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "36W6PyMbZ2bd15Os35XiL9",
          "title": "Prevent node from accessing the network",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "59CrLktZLejkxbODy5cB1k",
          "title": "Censorship (e.g. on checkpoints)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3aenOl1T8sQxcjilunX2N4",
          "title": "DoS over 30% of validators and does not shut down the network",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "70D42DBBRSSQJMuvStEpJe",
          "title": "Unable to call smart contract",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "1stO99FF97AWrG7MllrwNj",
          "title": "Smart contract gas drainage",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "3sfNSjlJ6QQZtA36xcTzdW",
          "title": "Denial of service attacks",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "2tvJmyQrOrSzuSgvwy8x4i",
          "title": "Prevent node from accessing the network",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "6lmKEtnaAgdY6hkyZxz4XW",
          "title": "Censorship (e.g. on checkpoints)",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "7qtUKlLMBRHaaF1w5TjHxZ",
          "title": "DoS over 30% of validators and does not shut down the network",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "3PNoFtZRUvCx9mOHvk225",
          "title": "Smart contract fails to deliver promised returns",
          "type": "smart_contract",
          "severity": "low"
        },
        {
          "id": "2ITOaRu9AySyQ05RvwPlpm",
          "title": "Checkpoint manipulation",
          "type": "smart_contract",
          "severity": "low"
        },
        {
          "id": "7zo9IR89DpH1qm65Egtkoy",
          "title": "DoS under 30% of validators and does not shut down the network",
          "type": "smart_contract",
          "severity": "low"
        },
        {
          "id": "4XDAjE3euNIKJ5fW4aIc46",
          "title": "Smart contract fails to deliver promised returns",
          "type": "blockchain_dlt",
          "severity": "low"
        },
        {
          "id": "6ybyVsVFfdUm1DvkISTloO",
          "title": "Checkpoint manipulation",
          "type": "blockchain_dlt",
          "severity": "low"
        },
        {
          "id": "81UlOd5RYNKgtseIKByZa",
          "title": "DoS under 30% of validators and does not shut down the network",
          "type": "blockchain_dlt",
          "severity": "low"
        }
      ],
      "programOverview": "Polygon provides the core components and tools to join the new, borderless economy and society. Polygon is a decentralised Ethereum scaling platform that enables developers to build scalable user-friendly dApps with low transaction fees without ever sacrificing on security.\n\nFor more information about Polygon, please visit [https://polygon.technology/](https://polygon.technology/). \n\nThis bug bounty program is focused on their smart contracts and blockchain, with the intent  of preventing the following impacts:\n\n  - Loss of user funds by permanent freezing or direct theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of time\n  - Unable to call smart contract\n  - Network shutdown\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Checkpoint manipulation\n  - Protection of Delegated and Staked Amount on Smart Contract\n  - Securing Bridge Transfers (Minting, Withdrawal)\n  - Double spend by getting the clients to accept a different chain\n  - Double spend by validating malicious blocks\n  - Tamper/manipulate blockchain history to invalidate transactions\n  - Cause a user to mint tokens to own account\n  - Undermine consensus mechanism to split the chain\n  - Censorship (e.g. on checkpoints)\n  - Steal tokens from node\n  - Prevent node from accessing the network\n  - Abuse bugs in the economic system to defraud other participants (e.g. avoid transaction fees to full nodes)\n  - Denial of service attacks\n  - Chain halt and shutting down the network ",
      "prioritizedVulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System v2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. However, please refer to the Impacts in Scope section for a more accurate classification of impacts as well as the impacts that are accepted within the program.\n\nA PoC and a suggestion for a fix is required for all bug reports. A high-quality suggestion for a fix may come with a bonus from the Polygon team.\n\nAll bug reports must include the following information in order to be considered for a reward:\n\nSummary:\n  - add summary of the vulnerability\n\nSteps To Reproduce:\n  - add details for how we can reproduce the issue\n\n  1.  add step\n  1.  add step\n  1.  add step\n\nSupporting Material/References:\n - list any additional material (e.g. screenshots, logs, etc.)\n    - attachment / reference\n\nBug reports containing the following will not be eligible for a reward with this bug bounty program:\n\n  - Previously known vulnerabilities (resolved or not) on the Ethereum network (and any other fork of these).\n  - Previously known vulnerabilities in Tendermint and or/any other fork of these.\n  - Previously known vulnerabilities in cosmos-sdk and or/any other fork of these.\n  - Previously known vulnerable libraries without a working Proof of Concept.\n  - Attacks requiring MITM or physical access to a user's device.\n  - Public Zero-day vulnerabilities that have had an official patch for less than 1 month will be awarded on a case by case basis.\n\nCritical Smart Contract bug reports are further capped at 10% of economic damage, which primarily takes into consideration the funds at risk but may include branding and PR aspects at the discretion of the team. However, they have a minimum reward of __USD 50 000__. \n\nPayouts are handled by the __Polygon__ team directly and are denominated in USD. However, payouts are done in __MATIC__. The Polygon team may, at its discretion, allow for other options to be done.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain / DLT__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization Risks\n",
      "assetsBodyV2": "The list of all deployed contracts can be found at: [https://static.matic.network/network/mainnet/v1/index.json](https://static.matic.network/network/mainnet/v1/index.json)\n\nOnly those in the Assets that are actually live and in-use are considered as in-scope of the bug bounty program. In the case of Smart Contracts, please always make sure the code has been deployed and present in the JSON file on the first row.\n",
      "impactsBody": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table. The final classification however takes into consideration the likelihood of the impact being achieved based on the table below. When submitting a bug report, select the original assigned impact level, but please be aware that its severity level may be reassigned based on the likelihood according to this table.                        \n\n| Impact \\ Likelihood     | Critical     | High     | Medium     | Low     | Informational     |\n| ---------- | ---------- | ---------- | ---------- | ---------- | ---------- |\n| Critical       | Critical       | Critical       | High       | Medium       | Informational       |\n| High       | High       | High       | High       | Medium       | Informational       |\n| Medium       | Medium       | Medium       | Medium       | Low       | Informational       |\n| Low       | Medium/Low       | Medium       | Low       | Low       | Informational       |\n| None       | Informational       | Informational       | Informational       | Informational       | Informational       |\n\nIn addition to Immunefi’s Vulnerability Severity Classification System, Polygon classifies vulnerabilities using the Common Vulnerability Scoring System (CVSS). In case of discrepancy, final determination is done by Polygon.",
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "L2"
        ],
        "projectType": [
          "Blockchain"
        ],
        "ecosystem": [
          "ETH",
          "Polygon"
        ],
        "programType": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Blockchain/DLT"
        ],
        "blockchain_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $1,100,000"
          },
          {
            "level": "High",
            "payout": "USD $10,000 to USD $50,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $1,100,000"
          },
          {
            "level": "High",
            "payout": "USD $10,000 to USD $50,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Polygon provides the core components and tools to join the new, borderless economy and society. Polygon is a decentralised Ethereum scaling platform that enables developers to build scalable user-friendly dApps with low transaction fees without ever sacrificing on security.\"), mdx(\"p\", null, \"For more information about Polygon, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://polygon.technology/\"\n  }, \"https://polygon.technology/\"), \". \"), mdx(\"p\", null, \"This bug bounty program is focused on their smart contracts and blockchain, with the intent  of preventing the following impacts:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of user funds by permanent freezing or direct theft\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of governance funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Freezing of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Temporary freezing of funds for any amount of time\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unable to call smart contract\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Network shutdown\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract gas drainage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract fails to deliver promised returns\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Checkpoint manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Protection of Delegated and Staked Amount on Smart Contract\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Securing Bridge Transfers (Minting, Withdrawal)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Double spend by getting the clients to accept a different chain\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Double spend by validating malicious blocks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tamper/manipulate blockchain history to invalidate transactions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cause a user to mint tokens to own account\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Undermine consensus mechanism to split the chain\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Censorship (e.g. on checkpoints)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Steal tokens from node\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Prevent node from accessing the network\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Abuse bugs in the economic system to defraud other participants (e.g. avoid transaction fees to full nodes)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Chain halt and shutting down the network \")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Polygon provides the core components and tools to join the new, borderless economy and society. Polygon is a decentralised Ethereum scaling platform that enables developers to build scalable user-friendly dApps with low transaction fees without ever sacrificing on security.</p><p>For more information about Polygon, please visit <a href=\"https://polygon.technology/\">https://polygon.technology/</a>. </p><p>This bug bounty program is focused on their smart contracts and blockchain, with the intent  of preventing the following impacts:</p><ul><li>Loss of user funds by permanent freezing or direct theft</li><li>Loss of governance funds</li><li>Theft of unclaimed yield</li><li>Freezing of unclaimed yield</li><li>Temporary freezing of funds for any amount of time</li><li>Unable to call smart contract</li><li>Network shutdown</li><li>Smart contract gas drainage</li><li>Smart contract fails to deliver promised returns</li><li>Checkpoint manipulation</li><li>Protection of Delegated and Staked Amount on Smart Contract</li><li>Securing Bridge Transfers (Minting, Withdrawal)</li><li>Double spend by getting the clients to accept a different chain</li><li>Double spend by validating malicious blocks</li><li>Tamper/manipulate blockchain history to invalidate transactions</li><li>Cause a user to mint tokens to own account</li><li>Undermine consensus mechanism to split the chain</li><li>Censorship (e.g. on checkpoints)</li><li>Steal tokens from node</li><li>Prevent node from accessing the network</li><li>Abuse bugs in the economic system to defraud other participants (e.g. avoid transaction fees to full nodes)</li><li>Denial of service attacks</li><li>Chain halt and shutting down the network </li></ul>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are especially interested in receiving and rewarding vulnerabilities of the following types:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\"), \" \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Re-entrancy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Logic errors\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including user authentication errors\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Solidity/EVM details not considered\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including integer over-/under-flow\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including rounding errors\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including unhandled exceptions\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusting trust/dependency vulnerabilities\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including composability vulnerabilities\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Oracle failure/manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Novel governance attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Economic/financial attacks\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Congestion and scalability\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including running out of gas\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including block stuffing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including susceptibility to frontrunning\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Consensus failures\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cryptography problems\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Signature malleability\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to replay attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak randomness\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak encryption\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to block timestamp manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing access controls / unprotected internal or debugging interfaces\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Remote Code Execution\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusting trust/dependency vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vertical Privilege Escalation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"XML External Entities Injection\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SQL Injection\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFI/RFI\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Horizontal Privilege Escalation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Stored XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reflective XSS with impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct object reference\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Internal SSRF\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Session fixation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Insecure Deserialization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DOM XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SSL misconfigurations\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SSL/TLS issues (weak crypto, improper setup)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"URL redirect\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Clickjacking (must be accompanied with PoC)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Misleading Unicode text (e.g. using right to left override characters)\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>We are especially interested in receiving and rewarding vulnerabilities of the following types:</p><p><strong>Smart Contracts and Blockchain</strong> </p><ul><li>Re-entrancy</li><li>Logic errors<ul><li>including user authentication errors</li></ul></li><li>Solidity/EVM details not considered<ul><li>including integer over-/under-flow</li><li>including rounding errors</li><li>including unhandled exceptions</li></ul></li><li>Trusting trust/dependency vulnerabilities<ul><li>including composability vulnerabilities</li></ul></li><li>Oracle failure/manipulation</li><li>Novel governance attacks</li><li>Economic/financial attacks<ul><li>including flash loan attacks</li></ul></li><li>Congestion and scalability<ul><li>including running out of gas</li><li>including block stuffing</li><li>including susceptibility to frontrunning</li></ul></li><li>Consensus failures</li><li>Cryptography problems<ul><li>Signature malleability</li><li>Susceptibility to replay attacks</li><li>Weak randomness</li><li>Weak encryption</li></ul></li><li>Susceptibility to block timestamp manipulation</li><li>Missing access controls / unprotected internal or debugging interfaces</li></ul><p><strong>Websites and Apps</strong></p><ul><li>Remote Code Execution</li><li>Trusting trust/dependency vulnerabilities</li><li>Vertical Privilege Escalation</li><li>XML External Entities Injection</li><li>SQL Injection</li><li>LFI/RFI</li><li>Horizontal Privilege Escalation</li><li>Stored XSS</li><li>Reflective XSS with impact</li><li>CSRF with impact</li><li>Direct object reference</li><li>Internal SSRF</li><li>Session fixation</li><li>Insecure Deserialization</li><li>DOM XSS</li><li>SSL misconfigurations</li><li>SSL/TLS issues (weak crypto, improper setup)</li><li>URL redirect</li><li>Clickjacking (must be accompanied with PoC)</li><li>Misleading Unicode text (e.g. using right to left override characters)</li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/\"\n  }, \"Immunefi Vulnerability Severity Classification System v2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. However, please refer to the Impacts in Scope section for a more accurate classification of impacts as well as the impacts that are accepted within the program.\"), mdx(\"p\", null, \"A PoC and a suggestion for a fix is required for all bug reports. A high-quality suggestion for a fix may come with a bonus from the Polygon team.\"), mdx(\"p\", null, \"All bug reports must include the following information in order to be considered for a reward:\"), mdx(\"p\", null, \"Summary:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"add summary of the vulnerability\")), mdx(\"p\", null, \"Steps To Reproduce:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"add details for how we can reproduce the issue\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"add step\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"add step\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"add step\")), mdx(\"p\", null, \"Supporting Material/References:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"list any additional material (e.g. screenshots, logs, etc.)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"attachment / reference\")))), mdx(\"p\", null, \"Bug reports containing the following will not be eligible for a reward with this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Previously known vulnerabilities (resolved or not) on the Ethereum network (and any other fork of these).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Previously known vulnerabilities in Tendermint and or/any other fork of these.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Previously known vulnerabilities in cosmos-sdk and or/any other fork of these.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Previously known vulnerable libraries without a working Proof of Concept.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring MITM or physical access to a user's device.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public Zero-day vulnerabilities that have had an official patch for less than 1 month will be awarded on a case by case basis.\")), mdx(\"p\", null, \"Critical Smart Contract bug reports are further capped at 10% of economic damage, which primarily takes into consideration the funds at risk but may include branding and PR aspects at the discretion of the team. However, they have a minimum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 50 000\"), \". \"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Polygon\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"MATIC\"), \". The Polygon team may, at its discretion, allow for other options to be done.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/\">Immunefi Vulnerability Severity Classification System v2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. However, please refer to the Impacts in Scope section for a more accurate classification of impacts as well as the impacts that are accepted within the program.</p><p>A PoC and a suggestion for a fix is required for all bug reports. A high-quality suggestion for a fix may come with a bonus from the Polygon team.</p><p>All bug reports must include the following information in order to be considered for a reward:</p><p>Summary:</p><ul><li>add summary of the vulnerability</li></ul><p>Steps To Reproduce:</p><ul><li>add details for how we can reproduce the issue</li></ul><ol><li>add step</li><li>add step</li><li>add step</li></ol><p>Supporting Material/References:</p><ul><li>list any additional material (e.g. screenshots, logs, etc.)<ul><li>attachment / reference</li></ul></li></ul><p>Bug reports containing the following will not be eligible for a reward with this bug bounty program:</p><ul><li>Previously known vulnerabilities (resolved or not) on the Ethereum network (and any other fork of these).</li><li>Previously known vulnerabilities in Tendermint and or/any other fork of these.</li><li>Previously known vulnerabilities in cosmos-sdk and or/any other fork of these.</li><li>Previously known vulnerable libraries without a working Proof of Concept.</li><li>Attacks requiring MITM or physical access to a user&#x27;s device.</li><li>Public Zero-day vulnerabilities that have had an official patch for less than 1 month will be awarded on a case by case basis.</li></ul><p>Critical Smart Contract bug reports are further capped at 10% of economic damage, which primarily takes into consideration the funds at risk but may include branding and PR aspects at the discretion of the team. However, they have a minimum reward of <strong>USD 50 000</strong>. </p><p>Payouts are handled by the <strong>Polygon</strong> team directly and are denominated in USD. However, payouts are done in <strong>MATIC</strong>. The Polygon team may, at its discretion, allow for other options to be done.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain / DLT\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization Risks\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain / DLT</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization Risks</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The list of all deployed contracts can be found at: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://static.matic.network/network/mainnet/v1/index.json\"\n  }, \"https://static.matic.network/network/mainnet/v1/index.json\")), mdx(\"p\", null, \"Only those in the Assets that are actually live and in-use are considered as in-scope of the bug bounty program. In the case of Smart Contracts, please always make sure the code has been deployed and present in the JSON file on the first row.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The list of all deployed contracts can be found at: <a href=\"https://static.matic.network/network/mainnet/v1/index.json\">https://static.matic.network/network/mainnet/v1/index.json</a></p><p>Only those in the Assets that are actually live and in-use are considered as in-scope of the bug bounty program. In the case of Smart Contracts, please always make sure the code has been deployed and present in the JSON file on the first row.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table. The final classification however takes into consideration the likelihood of the impact being achieved based on the table below. When submitting a bug report, select the original assigned impact level, but please be aware that its severity level may be reassigned based on the likelihood according to this table.                        \"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Impact \\\\ Likelihood\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Critical\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"High\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Medium\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Low\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Critical\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Critical\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Critical\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"High\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Medium\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"High\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"High\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"High\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"High\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Medium\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Medium\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Medium\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Medium\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Medium\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Low\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Low\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Medium/Low\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Medium\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Low\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Low\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"None\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\")))), mdx(\"p\", null, \"In addition to Immunefi\\u2019s Vulnerability Severity Classification System, Polygon classifies vulnerabilities using the Common Vulnerability Scoring System (CVSS). In case of discrepancy, final determination is done by Polygon.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table. The final classification however takes into consideration the likelihood of the impact being achieved based on the table below. When submitting a bug report, select the original assigned impact level, but please be aware that its severity level may be reassigned based on the likelihood according to this table.                        </p><table><thead><tr><th>Impact \\ Likelihood</th><th>Critical</th><th>High</th><th>Medium</th><th>Low</th><th>Informational</th></tr></thead><tbody><tr><td>Critical</td><td>Critical</td><td>Critical</td><td>High</td><td>Medium</td><td>Informational</td></tr><tr><td>High</td><td>High</td><td>High</td><td>High</td><td>Medium</td><td>Informational</td></tr><tr><td>Medium</td><td>Medium</td><td>Medium</td><td>Medium</td><td>Low</td><td>Informational</td></tr><tr><td>Low</td><td>Medium/Low</td><td>Medium</td><td>Low</td><td>Low</td><td>Informational</td></tr><tr><td>None</td><td>Informational</td><td>Informational</td><td>Informational</td><td>Informational</td><td>Informational</td></tr></tbody></table><p>In addition to Immunefi’s Vulnerability Severity Classification System, Polygon classifies vulnerabilities using the Common Vulnerability Scoring System (CVSS). In case of discrepancy, final determination is done by Polygon.</p>",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

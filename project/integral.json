{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "integral",
      "slug": "integral",
      "project": "Integral",
      "maxBounty": 50000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5dHTFAc230t6p8vYxgilO2/38e96d7cbe65593285dfec560c736985/Integral-logo.jpg",
      "launchDate": "2021-04-15T00:00-07:00",
      "updatedDate": "2023-07-06T19:07:15.755Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to USD $50,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $10,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "none",
          "payout": "USD $0",
          "pocRequired": false
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "3gAtKN2SvFH8yF0jEzkFFE",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xD502F487e1841Fdc805130e13eae80c61186Bc98",
          "description": "IntegralToken"
        },
        {
          "id": "5RGbshAbio0sWkmrHv5tbX",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xc8805cebd927941a3b26e2edced20d666fb118ba",
          "description": "TimeRelease"
        },
        {
          "id": "2IjYr8NQUzmeM2AzTRLnEg",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x36bD665392236b20bd42e161f02Bf0ae1d9441Ff",
          "description": "Integral Staking  (6 Months)"
        },
        {
          "id": "3OvEtzIKuIUq0Pv3w3UdrE",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xFFc0EAC1a1aE79C697607229Aca43Ef422625a40",
          "description": "Integral Staking (3 Years)"
        },
        {
          "id": "4Vac69v0V9U78DB3JCxC69",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xC480b33eE5229DE3FbDFAD1D2DCD3F3BAD0C56c6",
          "description": "SIZE Factory"
        },
        {
          "id": "hz5AKhh9wVAck7vrAUAXK",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xbdbcdfbca3b6eb90f251b41806a40569c6eb18cd",
          "description": "SIZE Delay"
        },
        {
          "id": "dH0Y40F8XDRhqztVePbXn",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x7b96662d4dbbf6894a888ba53afbe2f98359c973",
          "description": "SIZE (Arbitrum) Delay"
        },
        {
          "id": "7dA7nLFsFs0gRXmoSLnHX3",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x2fe16Dd18bba26e457B7dD2080d5674312b026a2",
          "description": "SIZE Pair (WETH-USDC)"
        },
        {
          "id": "S2lRWQ8oQhpWudD6WcDyb",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x43f0E5f2304F261DfA5359a0b74Ff030E498D904",
          "description": "SIZE Pair WETH-CVX"
        },
        {
          "id": "5RIcLhxrNI9IOH6HNt5TW8",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xD66f214fB49f81Ac5610e0339A351D7e1c67c35e",
          "description": "Smart Contract - SIZE Pair (WETH-SUSHI)"
        },
        {
          "id": "7ett3AvnsQjvnAQZ310uYK",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xD4d2140eD70DCF8794A986F0CFD07560ee738C71",
          "description": "SIZE Pair (WETH- stETH)"
        },
        {
          "id": "1x0hyjm4NQWaQ0oFONovpN",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x4bca34ad27df83566016b55c60dd80a9eb14913b",
          "description": "SIZE (Arbitrum) Pair (USDC-WETH)"
        },
        {
          "id": "1k6Mco0hGpHxbXTaZJ1sVo",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x33B1ee377D97Ef58B5cba81e69aFdb2a4008dBB2",
          "description": "Merkle Time Release (1)"
        },
        {
          "id": "7EhlbclFkNbpGTO7N1Tj0z",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x6A16630e78f95eEBB11a74dE0bA1503B9D0984d0",
          "description": "Merkle Time Release (2)"
        },
        {
          "id": "3lVW8XIteClisVVKjD3T0b",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xd25c6DA73ADBbB68508778621621568E07a1f284",
          "description": "Merkle Time Release (3)"
        },
        {
          "id": "3aBCxHOCFS5d4QsijkrzxF",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x2c66Ea3f4D8D056A20FFa14fCFC7956BBEfeB5FD",
          "description": "Merkle Time Release (4)"
        },
        {
          "id": "3stlBjsfx6dAW0bYzP26CA",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x1c857a1e3a9687dd788A1B3921de34210708991E",
          "description": "Merkle Time Release (5)"
        },
        {
          "id": "eUgkRzDLF0yLbimLGSOCt",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x5ADbc8e7458f5ba581BD8d3F4eC46Cd765a6706b",
          "description": "Merkle Time Release (6)"
        },
        {
          "id": "2lxnnGsfjCAUktsG5bTplE",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x851456EBEE49c8A2A4dd66Fe3D19c431Dd8F56AE",
          "description": "Merkle Time Release (7)"
        },
        {
          "id": "4tYkg8zQk1RR2SnbBpvSLy",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xe96f5A2680981AEc61C4980F2F7B9ad666698e61",
          "description": "Merkle Time Release (8)"
        },
        {
          "id": "5olJR31EADMx9ffPvyuRz",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x048f0e7ea2CFD522a4a058D1b1bDd574A0486c46",
          "description": "SIZE Pair (WETH-USDT)"
        },
        {
          "id": "4xuDbiHjKHDJf3sLF21vYC",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x37f6df71b40c50b2038329cabf5fda3682df1ebf",
          "description": " SIZE Pair (WETH-WBTC)"
        },
        {
          "id": "NTSAI81uu6YO3iKmnsVhr",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x6ec472b613012a492693697FA551420E60567eA7",
          "description": "SIZE Pair (USDC-USDT)"
        }
      ],
      "impacts": [
        {
          "id": "2hV2N3v7iNyUZEC8meApB6",
          "title": "Any governance voting result manipulation",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1k32WI3ZnmrnGg5k6Oj49B",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "pQ5rhrj2h9m09yxUe3G02",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "648wa5EvgPWj7FQMBYYLex",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "4173UaYLTPwDJtrIjwm0y6",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6OeWNqvUuQYFXBk0i5QUvJ",
          "title": "Temporary freezing of funds",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "ejha3CidGAnO1bUjBbWp2",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5bpYik3Rfk0KVGOqIRp080",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "7alS8jaZrpVyL195Xnh2lE",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3rn5DhexsiJK49zCdQ9Pxo",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "2hztknqPWG45Wu5vIYIFya",
          "title": "Any other minor smart contract vulnerabilities not mentioned above",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "At Integral we build on-chain trading products and tools to rival those of centralized exchanges. Our mission is to serve DeFi users who care about self-custody, decentralization, security, and financial usability. Integral SIZE is a TWAP based DEX with zero price impact swaps on Ethereum. In addition, traders enjoy a MEV-resistant and low-fee trading experience. Further information about Integral can be found here [https://docs.integral.link](https://docs.integral.link).\n\nThe bug bounty program is focused around its smart contracts and is mostly concerned with:\n\n  - Direct theft of any user funds from smart contracts, whether at-rest or in-motion\n  - Loss of user funds through freezing, theft, manipulation of the pools, or denial of service to smart contracts.\n",
      "prioritizedVulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on\nthe [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. All bug reports without a PoC will not be accepted under this bug bounty program.\n\nThe final reward for critical bounty payouts is capped at 10% of economic damage up to USD 50 000, primarily based on the funds at risk, at the discretion of the team. However, the minimum reward is USD 10 000.\n\nThe following scenarios are not eligible for a reward:\n  - Exploits that require access to the admin keys\n  - Cases involving risks of losses to the pools in case the assets in the pools decrease in price\n  - Cases involving risks of impermanent losses in the pools\n  - Exploits or arbitrages which are not economically practical to execute\n  - Exploits or arbitrages which rely on predicting future price movements\n  - Cases involving price manipulation on other exchanges or external price oracles\n  - Cases involving dynamic pool ratios due to the nature of the design\n  - Exploits due to issues with hosting providers which cannot be fixed by changing any configuration on our side will be given an Informational classification or lower, these exploits should be reported using the bug bounty program of the hosting providers instead\n\nPayouts are handled by the Integral team directly and are denominated in USD. However, payouts are done in DAI, USDT, USDC, ETH, or ITGR, at the discretion of the team.\n",
      "outOfScopeAndRules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Incorrect data supplied by third party oracles\n- Manipulation and flash loan attacks on third-party oracles \n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n\n__Eligibility__\n\nTo be eligible for a reward under this Program, you must:\n  - Be the first to disclose the unique vulnerability in compliance with the disclosure requirements above.\n  - Provide sufficient information to enable our team to reproduce and fix the vulnerability.\n  - Not engage in any unlawful conduct when disclosing the bug including through threats, demands, or any other coercive tactics.\n  - Make a good faith effort to avoid privacy violations, destruction of data, interruption or degradation of Integral.\n  - Submit only one vulnerability per submission, unless you need to chain vulnerabilities to provide impact regarding any of the vulnerabilities.\n  - Not submit a vulnerability caused by an underlying issue that is the same as an issue on which a reward has been paid under this Program.\n  - Be at least 18 years of age.\n  - Not be subject to US, UK, and EU  sanctions or reside in a US, UK, or EU-embargoed country.\n  - Comply with all the eligibility and disclosure requirements of the Program.\n  - The vulnerability must not already be a known by the Integral team.\n",
      "assetsBodyV2": null,
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "AMM",
          "DEX"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $50,000"
          },
          {
            "level": "High",
            "payout": "USD $10,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          },
          {
            "level": "Informational",
            "payout": "USD $0"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"At Integral we build on-chain trading products and tools to rival those of centralized exchanges. Our mission is to serve DeFi users who care about self-custody, decentralization, security, and financial usability. Integral SIZE is a TWAP based DEX with zero price impact swaps on Ethereum. In addition, traders enjoy a MEV-resistant and low-fee trading experience. Further information about Integral can be found here \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.integral.link\"\n  }, \"https://docs.integral.link\"), \".\"), mdx(\"p\", null, \"The bug bounty program is focused around its smart contracts and is mostly concerned with:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct theft of any user funds from smart contracts, whether at-rest or in-motion\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of user funds through freezing, theft, manipulation of the pools, or denial of service to smart contracts.\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>At Integral we build on-chain trading products and tools to rival those of centralized exchanges. Our mission is to serve DeFi users who care about self-custody, decentralization, security, and financial usability. Integral SIZE is a TWAP based DEX with zero price impact swaps on Ethereum. In addition, traders enjoy a MEV-resistant and low-fee trading experience. Further information about Integral can be found here <a href=\"https://docs.integral.link\">https://docs.integral.link</a>.</p><p>The bug bounty program is focused around its smart contracts and is mostly concerned with:</p><ul><li>Direct theft of any user funds from smart contracts, whether at-rest or in-motion</li><li>Loss of user funds through freezing, theft, manipulation of the pools, or denial of service to smart contracts.</li></ul>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are especially interested in receiving and rewarding vulnerabilities of the\\nfollowing types:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts/Blockchain:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Re-entrancy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Logic errors\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including user authentication errors\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Solidity/EVM details not considered\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including integer over-/under-flow\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including unhandled exceptions\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusting trust/dependency vulnerabilities\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including composability vulnerabilities\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Oracle failure/manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Novel governance attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Economic/financial attacks\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Congestion and scalability\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including running out of gas\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including block stuffing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including susceptibility to frontrunning\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Consensus failures\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cryptography problems\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Signature malleability\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to replay attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak randomness\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak encryption\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to block timestamp manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing access controls / unprotected internal or debugging interfaces\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:</p><p><strong>Smart Contracts/Blockchain:</strong></p><ul><li>Re-entrancy</li><li>Logic errors<ul><li>including user authentication errors</li></ul></li><li>Solidity/EVM details not considered<ul><li>including integer over-/under-flow</li><li>including unhandled exceptions</li></ul></li><li>Trusting trust/dependency vulnerabilities<ul><li>including composability vulnerabilities</li></ul></li><li>Oracle failure/manipulation</li><li>Novel governance attacks</li><li>Economic/financial attacks<ul><li>including flash loan attacks</li></ul></li><li>Congestion and scalability<ul><li>including running out of gas</li><li>including block stuffing</li><li>including susceptibility to frontrunning</li></ul></li><li>Consensus failures</li><li>Cryptography problems<ul><li>Signature malleability</li><li>Susceptibility to replay attacks</li><li>Weak randomness</li><li>Weak encryption</li></ul></li><li>Susceptibility to block timestamp manipulation</li><li>Missing access controls / unprotected internal or debugging interfaces</li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on\\nthe \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\"), mdx(\"p\", null, \"All bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. All bug reports without a PoC will not be accepted under this bug bounty program.\"), mdx(\"p\", null, \"The final reward for critical bounty payouts is capped at 10% of economic damage up to USD 50 000, primarily based on the funds at risk, at the discretion of the team. However, the minimum reward is USD 10 000.\"), mdx(\"p\", null, \"The following scenarios are not eligible for a reward:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Exploits that require access to the admin keys\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cases involving risks of losses to the pools in case the assets in the pools decrease in price\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cases involving risks of impermanent losses in the pools\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Exploits or arbitrages which are not economically practical to execute\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Exploits or arbitrages which rely on predicting future price movements\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cases involving price manipulation on other exchanges or external price oracles\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cases involving dynamic pool ratios due to the nature of the design\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Exploits due to issues with hosting providers which cannot be fixed by changing any configuration on our side will be given an Informational classification or lower, these exploits should be reported using the bug bounty program of the hosting providers instead\")), mdx(\"p\", null, \"Payouts are handled by the Integral team directly and are denominated in USD. However, payouts are done in DAI, USDT, USDC, ETH, or ITGR, at the discretion of the team.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on\nthe <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.</p><p>All bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. All bug reports without a PoC will not be accepted under this bug bounty program.</p><p>The final reward for critical bounty payouts is capped at 10% of economic damage up to USD 50 000, primarily based on the funds at risk, at the discretion of the team. However, the minimum reward is USD 10 000.</p><p>The following scenarios are not eligible for a reward:</p><ul><li>Exploits that require access to the admin keys</li><li>Cases involving risks of losses to the pools in case the assets in the pools decrease in price</li><li>Cases involving risks of impermanent losses in the pools</li><li>Exploits or arbitrages which are not economically practical to execute</li><li>Exploits or arbitrages which rely on predicting future price movements</li><li>Cases involving price manipulation on other exchanges or external price oracles</li><li>Cases involving dynamic pool ratios due to the nature of the design</li><li>Exploits due to issues with hosting providers which cannot be fixed by changing any configuration on our side will be given an Informational classification or lower, these exploits should be reported using the bug bounty program of the hosting providers instead</li></ul><p>Payouts are handled by the Integral team directly and are denominated in USD. However, payouts are done in DAI, USDT, USDC, ETH, or ITGR, at the discretion of the team.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"The following vulnerabilities are excluded from the rewards for this bug\\nbounty program:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Manipulation and flash loan attacks on third-party oracles \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"The following activities are prohibited by bug bounty program:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be\\ndone on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees\\nand/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser\\nextensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Eligibility\")), mdx(\"p\", null, \"To be eligible for a reward under this Program, you must:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Be the first to disclose the unique vulnerability in compliance with the disclosure requirements above.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Provide sufficient information to enable our team to reproduce and fix the vulnerability.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not engage in any unlawful conduct when disclosing the bug including through threats, demands, or any other coercive tactics.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Make a good faith effort to avoid privacy violations, destruction of data, interruption or degradation of Integral.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Submit only one vulnerability per submission, unless you need to chain vulnerabilities to provide impact regarding any of the vulnerabilities.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not submit a vulnerability caused by an underlying issue that is the same as an issue on which a reward has been paid under this Program.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Be at least 18 years of age.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not be subject to US, UK, and EU  sanctions or reside in a US, UK, or EU-embargoed country.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Comply with all the eligibility and disclosure requirements of the Program.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The vulnerability must not already be a known by the Integral team.\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p><strong>The following vulnerabilities are excluded from the rewards for this bug\nbounty program:</strong></p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li><li>Incorrect data supplied by third party oracles</li><li>Manipulation and flash loan attacks on third-party oracles </li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li></ul><p><strong>The following activities are prohibited by bug bounty program:</strong></p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be\ndone on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees\nand/or customers</li><li>Any testing with third party systems and applications (e.g. browser\nextensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul><p><strong>Eligibility</strong></p><p>To be eligible for a reward under this Program, you must:</p><ul><li>Be the first to disclose the unique vulnerability in compliance with the disclosure requirements above.</li><li>Provide sufficient information to enable our team to reproduce and fix the vulnerability.</li><li>Not engage in any unlawful conduct when disclosing the bug including through threats, demands, or any other coercive tactics.</li><li>Make a good faith effort to avoid privacy violations, destruction of data, interruption or degradation of Integral.</li><li>Submit only one vulnerability per submission, unless you need to chain vulnerabilities to provide impact regarding any of the vulnerabilities.</li><li>Not submit a vulnerability caused by an underlying issue that is the same as an issue on which a reward has been paid under this Program.</li><li>Be at least 18 years of age.</li><li>Not be subject to US, UK, and EU  sanctions or reside in a US, UK, or EU-embargoed country.</li><li>Comply with all the eligibility and disclosure requirements of the Program.</li><li>The vulnerability must not already be a known by the Integral team.</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

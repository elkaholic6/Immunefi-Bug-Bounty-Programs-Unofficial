{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "makerdao",
      "slug": "makerdao",
      "project": "MakerDAO",
      "maxBounty": 10000000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5vcEkB0bOqaDEGqlxLIXAM/f4e37545855fec510df9a033ebd78fbf/Mark_Maker.png",
      "launchDate": "2022-02-10T01:00-06:00",
      "updatedDate": "2023-01-09T12:53:25.062Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to USD $10,000,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "Up to USD $100,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "critical",
          "payout": "Up to USD $100,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "high",
          "payout": "USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "medium",
          "payout": "USD $2,500",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "2kCFFozzMVPDeP2r7Je2mj",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss/blob/master/src/dai.sol",
          "description": "MCD_DAI"
        },
        {
          "id": "3HLitoZoT2E4bd2d0E0hhF",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss/blob/master/src/spot.sol",
          "description": "MCD_SPOT"
        },
        {
          "id": "5J4ijBifjUyiuRRmKNFuVn",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss/blob/master/src/pot.sol",
          "description": "MCD_POT"
        },
        {
          "id": "4gxDlrdwY0tEexEsvJgdk",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss/blob/master/src/end.sol",
          "description": "MCD_END"
        },
        {
          "id": "53v85jYCi8GaYiIwt1uDX1",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss/blob/master/src/flap.sol",
          "description": "MCD_FLAP"
        },
        {
          "id": "1xjxGZ2NBtsJPIB2fhT8ox",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss/blob/master/src/flop.sol",
          "description": "MCD_FLOP"
        },
        {
          "id": "3yYYS6cTkRLG7hfJm7LkdV",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss/blob/master/src/vow.sol",
          "description": "MCD_VOW"
        },
        {
          "id": "1wAjMecZZukUKNbYfris3L",
          "type": "smart_contract",
          "url": "https://github.com/dapphub/ds-weth/blob/master/src/weth9.sol",
          "description": "MCD_ETH"
        },
        {
          "id": "2ApBAFBY5xyPWP8oZ4vk56",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss/blob/master/src/vat.sol",
          "description": "MCD_VAT"
        },
        {
          "id": "e2CXPLOgneQjjWfyo6dXu",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss/blob/master/src/jug.sol",
          "description": "MCD_JUG"
        },
        {
          "id": "7ew3hNzx4F5ACqxPT3xN9k",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/median/blob/master/src/median.sol",
          "description": "Medians"
        },
        {
          "id": "oB7zwBB2WqyW50VGOwb0m",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/osm/blob/master/src/osm.sol",
          "description": "OSM"
        },
        {
          "id": "1w5K5tdY9UV54l9ib5he1J",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/osm/blob/master/src/value.sol",
          "description": "Value (OSM)"
        },
        {
          "id": "8CHcGrEq6Taezsc0mFP4O",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-cdp-manager/blob/master/src/DssCdpManager.sol",
          "description": "DssCdpManager"
        },
        {
          "id": "1E5ilKCGBtCwicyVMkJe6s",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-cdp-manager/blob/master/src/GetCdps.sol",
          "description": "GetCdps"
        },
        {
          "id": "5oL4iWJU4mNFfUmXBwOWGc",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-proxy-actions/blob/master/src/DssProxyActions.sol",
          "description": "DssProxyActions"
        },
        {
          "id": "3C28zGMqHrjK7bQkdcf4dz",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-auto-line/blob/master/src/DssAutoLine.sol",
          "description": "DssAutoLine"
        },
        {
          "id": "3orm6ZkmFs0LGLiihPM2vm",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/clipper-mom/blob/master/src/ClipperMom.sol",
          "description": "Clipper Mom"
        },
        {
          "id": "1gskBpLbVZGqSc6X59tAFB",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-vest/blob/master/src/DssVest.sol",
          "description": "DssVest"
        },
        {
          "id": "KK8eOxOp2mBXXhIiUGjHK",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-exec-lib/blob/master/src/CollateralOpts.sol",
          "description": "CollateralOpts"
        },
        {
          "id": "128qKTDF86cYImgFENjIlC",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-exec-lib/blob/master/src/DssAction.sol",
          "description": "DssAction"
        },
        {
          "id": "27BkshirpHE6OMEzFw2XWf",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-exec-lib/blob/master/src/DssExec.sol",
          "description": "DssExec"
        },
        {
          "id": "5jwiK6QTM1OjthoqyjOpFj",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-exec-lib/blob/master/src/DssExecLib.sol",
          "description": "DssExecLib"
        },
        {
          "id": "PquA7RkPYKtEv8LbizHtf",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/exchange-callees/blob/master/src/OasisDexCallee.sol",
          "description": "OasisDexCallee"
        },
        {
          "id": "sv1SjYqY0FsSJKoe7g9Fk",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/exchange-callees/blob/master/src/UniswapV2Callee.sol",
          "description": "UniswapV2Callee"
        },
        {
          "id": "8rnUA5AStFvBGmEyt58vF",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/exchange-callees/blob/master/src/UniswapV2LpTokenCallee.sol",
          "description": "UniswapV2LpTokenCallee"
        },
        {
          "id": "3HqllBzIcjk2C8y7QxWBR6",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/exchange-callees/blob/master/src/UniswapV3Callee.sol",
          "description": "UniswapV3Callee"
        },
        {
          "id": "42ay6JUlYHCjjqNgilTCz5",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/exchange-callees/blob/master/src/WstETHCurveUniv3Callee.sol",
          "description": "WstETHCurveUniv3Callee"
        },
        {
          "id": "6zJIeIwSvHbC1FD8vhZfXF",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/ilk-registry/blob/master/src/IlkRegistry.sol",
          "description": "Ilk Registry"
        },
        {
          "id": "PJQn3Ugynj9B3x2hMZnth",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/ERC/GemAbstract.sol",
          "description": "Gem Abstract"
        },
        {
          "id": "5ZNQgSUYDMmmmPSGBT4dcb",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dapp/DSAuthorityAbstract.sol",
          "description": "DS Authority Abstract"
        },
        {
          "id": "1m9aBFMVBpfQoKpIoyHv3X",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dapp/DSChiefAbstract.sol",
          "description": "DS Chief Abstract"
        },
        {
          "id": "4F46besNhxzrCjSQqkwSBa",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dapp/DSPauseAbstract.sol",
          "description": "DS Pause Abstract"
        },
        {
          "id": "4BHDGZf8ap2rm2lYihCkQc",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dapp/DSPauseProxyAbstract.sol",
          "description": "DS Pause Proxy Abstract"
        },
        {
          "id": "4T2cISxlooCRWnWRdFdy6C",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dapp/DSRolesAbstract.sol",
          "description": "DS Roles Abstract"
        },
        {
          "id": "1lmbbTeOQU3Of9HnEbrOva",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dapp/DSRuneAbstract.sol",
          "description": "DS Rune Abstract"
        },
        {
          "id": "1LHGljRMOAVmYvnnAc12TI",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dapp/DSSpellAbstract.sol",
          "description": "DS Spell Abstract"
        },
        {
          "id": "4BlMCLpu3fbHqwt4evoYtV",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dapp/DSThingAbstract.sol",
          "description": "DS Thing Abstract"
        },
        {
          "id": "4d245mb4IUGZtWFtgZzL7H",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dapp/DSTokenAbstract.sol",
          "description": "DS Token Abstract"
        },
        {
          "id": "74EHDNtUPIJ9QQWmM2oFv4",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dapp/DSValueAbstract.sol",
          "description": "DS Value Abstract"
        },
        {
          "id": "PntAcMRTjakS43HyL6pqG",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/AuthGemJoinAbstract.sol",
          "description": "Auth Gem Join Abstract"
        },
        {
          "id": "5ZxnyeeRnD9bjm8bJhRWsE",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/CatAbstract.sol",
          "description": "Cat Abstract"
        },
        {
          "id": "6OrJ5F0HWbhh5cK35HctxO",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/ChainlogAbstract.sol",
          "description": "Chainlog Abstract"
        },
        {
          "id": "7Go8KEom3tAzhMOkIOELl0",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/ClipAbstract.sol",
          "description": "Clip Abstract"
        },
        {
          "id": "Tr38v1jqjya5nflEs2h23",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/ClipperMomAbstract.sol",
          "description": "Clipper Mom Abstract"
        },
        {
          "id": "3FNrgyT7KotlGMVwREyEPq",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/DaiAbstract.sol",
          "description": "Dai Abstract"
        },
        {
          "id": "7I3HiRbYcpjm5G0bXUDtMq",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/DaiJoinAbstract.sol",
          "description": "DaiJoinAbstract"
        },
        {
          "id": "7qVWoxqTTadNOrCK0ipWKX",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/DogAbstract.sol",
          "description": "Dog Abstract"
        },
        {
          "id": "7tKYz4bdwdk5MaRokL9AnY",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/DssAutoLineAbstract.sol",
          "description": "Dss Auto Line Abstract"
        },
        {
          "id": "6POYH7fYk4rJNbP7YKHlIF",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/DssCdpManager.sol",
          "description": "Dss Cdp Manager"
        },
        {
          "id": "4g1LlOQpoi20Ca31xRxw4A",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/ESMAbstract.sol",
          "description": "ESM Abstract"
        },
        {
          "id": "1cUmaKYPOawHgRsmKDwwsP",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/ETHJoinAbstract.sol",
          "description": "ETH Join Abstract"
        },
        {
          "id": "W6LIOIRlefj6Mz26zitRu",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/EndAbstract.sol",
          "description": "End Abstract"
        },
        {
          "id": "18RCBZ3oE0NlLKxJfOwa0t",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/ExponentialDecreaseAbstract.sol",
          "description": "Exponential Decrease Abstract"
        },
        {
          "id": "2jtXBNmhCW1VihjTqutwuK",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/FaucetAbstract.sol",
          "description": "Faucet Abstract"
        },
        {
          "id": "tHQeVVkmZpF5WGO2d5TtV",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/FlapAbstract.sol",
          "description": "Flap Abstract"
        },
        {
          "id": "6HSesu9u1PSFG024xNo8Ir",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/FlashAbstract.sol",
          "description": "Flash Abstract"
        },
        {
          "id": "1quehZDIzcX2c26HHY2pLd",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/FlipAbstract.sol",
          "description": "Flip Abstract"
        },
        {
          "id": "1k1bxqRGo5S5jSxe3ugkJW",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/FlipperMomAbstract.sol",
          "description": "Flipper Mom Abstract"
        },
        {
          "id": "4T88CXw4gNRxd8jWhwcJCA",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/FlopAbstract.sol",
          "description": "Flop Abstract"
        },
        {
          "id": "2YTaSEyNuTug5XAyayYxwe",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/GemJoinAbstract.sol",
          "description": "Gem Join Abstract"
        },
        {
          "id": "Ir4Sd54UJcRbTgjlIF3C4",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/GemJoinImplementationAbstract.sol",
          "description": "Gem Join Implementation Abstract"
        },
        {
          "id": "3skdqB0fKS2j4CbIOG4m5Y",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/GemJoinManagedAbstract.sol",
          "description": "Gem Join Managed Abstract"
        },
        {
          "id": "6rO0cSAILcQV5gD7CUMlfr",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/GetCdpsAbstract.sol",
          "description": "Get Cdps Abstract"
        },
        {
          "id": "305jp8sX6VnxeNDdm76Ot1",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/IlkRegistryAbstract.sol",
          "description": "Ilk Registry Abstract"
        },
        {
          "id": "5n5S3u4JYDZxJC4NWDqhTa",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/JugAbstract.sol",
          "description": "Jug Abstract"
        },
        {
          "id": "4ecnCFM4WiXQ62bMyFVzWp",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/LPOsmAbstract.sol",
          "description": "LPOsm Abstract"
        },
        {
          "id": "7wsbDg2Nvq8dzZWE3Ol3YT",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/LerpAbstract.sol",
          "description": "Lerp Abstract"
        },
        {
          "id": "2ilzFnu8qVVJnvzrmuUin3",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/LerpFactoryAbstract.sol",
          "description": "Lerp Factory Abstract"
        },
        {
          "id": "BsI7XuyZLd1C5Mi05RCUs",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/LinearDecreaseAbstract.sol",
          "description": "Linear Decrease Abstract"
        },
        {
          "id": "5buG3mo5L8YCTqSHfELIKg",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/MKRAbstract.sol",
          "description": "MKR Abstract"
        },
        {
          "id": "5PAp90Xwwb9EsV4P5SWjW2",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/MedianAbstract.sol",
          "description": "Median Abstract"
        },
        {
          "id": "1AGNp44t2rCv1KyMkDwvrw",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/MkrAuthorityAbstract.sol",
          "description": "MKR Authority Abstract"
        },
        {
          "id": "7jWZs8L0ia37WFpEqIpm59",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/OsmAbstract.sol",
          "description": "Osm Abstract"
        },
        {
          "id": "6DnEmW3QmXovPO5ykcb5u9",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/OsmMomAbstract.sol",
          "description": "Osm Mom Abstract"
        },
        {
          "id": "R9z8kHPmX4sNo0TH81TLC",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/PipAbstract.sol",
          "description": "Pip Abstract"
        },
        {
          "id": "6k0aS4XDdsfik2vdwFefy",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/PotAbstract.sol",
          "description": "Pot Abstract"
        },
        {
          "id": "6NRyMZNNMUd6uKH9fxJPbj",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/PotHelper.sol",
          "description": "Pot Helper"
        },
        {
          "id": "7xq4jq6mN7qlWGn6KOVZRq",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/PsmAbstract.sol",
          "description": "Psm Abstract"
        },
        {
          "id": "3E6FQsFFBQlaaeZmwgOZpf",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/SpotAbstract.sol",
          "description": "Spot Abstract"
        },
        {
          "id": "veJuOwCuQOBoDHFbGi41u",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/StairstepExponentialDecreaseAbstract.sol",
          "description": "Stairstep Exponential Decrease Abstract"
        },
        {
          "id": "6l2ZhbPPZbSSbFurdJyhUM",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/VatAbstract.sol",
          "description": "Vat Abstract"
        },
        {
          "id": "5qvLp90KyyFgO4HDP6RBwK",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/VestAbstract.sol",
          "description": "Vest Abstract"
        },
        {
          "id": "2VftUlTWCGMzp1Wrz7AyAk",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/VowAbstract.sol",
          "description": "Vow Abstract"
        },
        {
          "id": "7AranBBEkEwuW9xlSAoJNo",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/sai/GemPitAbstract.sol",
          "description": "Gem Pit Abstract"
        },
        {
          "id": "36CO9wcBdZlGJkf34fsevt",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/sai/SaiMomAbstract.sol",
          "description": "Sai Mom Abstract"
        },
        {
          "id": "1IpTr7KIQvr6Si3CFyyVT6",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/sai/SaiTapAbstract.sol",
          "description": "Sai Tap Abstract"
        },
        {
          "id": "2XCXJsRGdrEwRIzJZSnwzY",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/sai/SaiTokenAbstract.sol",
          "description": "Sai Token Abstract"
        },
        {
          "id": "1hDCAFfNeKZWgytZ9dgg1G",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/sai/SaiTopAbstract.sol",
          "description": "Sai Top Abstract"
        },
        {
          "id": "1WXtGbv8hZ8Wu75BdZt8Hr",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/sai/SaiTubAbstract.sol",
          "description": "Sai Tub Abstract"
        },
        {
          "id": "5dwVJtFNqpn7z46EPsIQ04",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/sai/SaiVoxAbstract.sol",
          "description": "Sai Vox Abstract"
        },
        {
          "id": "5rCEOIifQN1qS2d4vqwQAh",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/utils/WardsAbstract.sol",
          "description": "Wards Abstract"
        },
        {
          "id": "isieC5rute3t4mkSDmb19",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-interfaces/blob/master/src/Interfaces.sol",
          "description": "Interfaces (Abstracts)"
        },
        {
          "id": "6J14UqNUaqtIYhaZb7zvPT",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-vest/blob/master/src/DssVest.sol",
          "description": "Dss Vest"
        },
        {
          "id": "4ErHIpVPumH4qzGqoaNmFG",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-gem-joins/blob/v1.2/src/join-auth.sol",
          "description": "Join Auth"
        },
        {
          "id": "35cIoSTFVNBCGmPF443ORR",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-gem-joins/blob/v1.2/src/join-2.sol",
          "description": "Join 2"
        },
        {
          "id": "4F1RxHYRKCfEpHHwcr224i",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-gem-joins/blob/v1.2/src/join-3.sol",
          "description": "Join 3"
        },
        {
          "id": "3YPomU3962w4EIheseWVNN",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-gem-joins/blob/v1.2/src/join-4.sol",
          "description": "Join 4"
        },
        {
          "id": "1M6DOrazwwqmdS3pYTew6T",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-gem-joins/blob/v1.2/src/join-5.sol",
          "description": "Join 5"
        },
        {
          "id": "1yQfJ3jChc0N3opQ0HfAyC",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-gem-joins/blob/v1.2/src/join-6.sol",
          "description": "Join 6"
        },
        {
          "id": "3uUxn28s6bDrgC0adyHqHp",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-gem-joins/blob/v1.2/src/join-7.sol",
          "description": "Join 7"
        },
        {
          "id": "2uyKP2tFG9jLBVDEAzNBDg",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-gem-joins/blob/v1.2/src/join-8.sol",
          "description": "Join 8"
        },
        {
          "id": "3AId2A6v3edNTfjs6KdVZz",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss/blob/v1.2/src/join.sol",
          "description": "Join"
        },
        {
          "id": "5QTxKZW6KytpiJ5tDsdB07",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss/blob/c8d4c806691dacb903ff281b81f316bea974e4c7/src/abaci.sol",
          "description": "Abaci"
        },
        {
          "id": "7uiTWgJpK2dFLGAiSaJOG5",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-psm/blob/master/src/join-5-auth.sol",
          "description": "Join 5 Auth"
        },
        {
          "id": "5IaBINjOFX0RAtUMSJkKDw",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-psm/blob/master/src/join-8-auth.sol",
          "description": "Join 8 Auth"
        },
        {
          "id": "3txn0Nuh6670tjM52pzoNq",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-psm/blob/master/src/join-auth.sol",
          "description": "Join Auth (Dss PSM)"
        },
        {
          "id": "3DvlwZqNLBTsiEcvVSTMFf",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-psm/blob/master/src/psm.sol",
          "description": "PSM"
        },
        {
          "id": "4nI3pu20oU05iKHeG8fyJF",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/esm/blob/master/src/ESM.sol",
          "description": "ESM"
        },
        {
          "id": "5AUltCFnzQWrbi8eSOiHjB",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss/blob/master/src/end.sol",
          "description": "Dss End"
        },
        {
          "id": "uWIFflU3kl91gx77D0tlz",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss/blob/master/src/dog.sol",
          "description": "Dss Dog"
        },
        {
          "id": "3ronZDMZCiJYYysEaiOkax",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss/blob/master/src/clip.sol",
          "description": "Dss Clip"
        },
        {
          "id": "47YNMt9z3o4FPGj9Km1zN9",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/optimism-dai-bridge/blob/master/contracts/l1/L1DAITokenBridge.sol",
          "description": "L1 DAI Token Bridge (Optimism DAI Bridge)"
        },
        {
          "id": "1rjLCrZW6EVqMYiiYLNw5v",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/optimism-dai-bridge/blob/master/contracts/l1/L1Escrow.sol",
          "description": "L1 Escrow (Optimism DAI Bridge)"
        },
        {
          "id": "1RCONIb0mqV8xKWhPFdNnP",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/optimism-dai-bridge/blob/master/contracts/l1/L1GovernanceRelay.sol",
          "description": "L1 Governance Relay (Optimism DAI Bridge)"
        },
        {
          "id": "3xsDK7Rfe3ymIOn6Yp5nxc",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/optimism-dai-bridge/blob/master/contracts/l2/L2DAITokenBridge.sol",
          "description": "L2 DAI Token Bridge (Optimism DAI Bridge)"
        },
        {
          "id": "3J95qoCBauhtu3uduu7lEA",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/optimism-dai-bridge/blob/master/contracts/l2/L2GovernanceRelay.sol",
          "description": "L2 Governance Relay (Optimism DAI Bridge)"
        },
        {
          "id": "6lS1J6L9kGYiKtHpvITfEb",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/optimism-dai-bridge/blob/master/contracts/l2/dai.sol",
          "description": "DAI (Optimism DAI Bridge)"
        },
        {
          "id": "2pOY78EJhYz2Oin163soVj",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/arbitrum-dai-bridge/blob/master/contracts/l1/L1CrossDomainEnabled.sol",
          "description": "L1 Cross Domain Enabled (Arbitrum DAI Bridge)"
        },
        {
          "id": "2obQSIhKWYH2Ar8uVIz0ik",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/arbitrum-dai-bridge/blob/master/contracts/l1/L1DaiGateway.sol",
          "description": "L1 DAI Gateway (Arbitrum DAI Bridge)"
        },
        {
          "id": "48thP6ObsDChA9De51nX32",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/arbitrum-dai-bridge/blob/master/contracts/l1/L1Escrow.sol",
          "description": "L1 Escrow (Arbitrum DAI Bridge)"
        },
        {
          "id": "2ZQg1wICyl4kC4s7zvC6wa",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/arbitrum-dai-bridge/blob/master/contracts/l1/L1GovernanceRelay.sol",
          "description": "L1 Governance Relay (Arbitrum DAI Bridge)"
        },
        {
          "id": "58Kk2UoheVWaEksaPrW6Ez",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/arbitrum-dai-bridge/blob/master/contracts/l1/L1ITokenGateway.sol",
          "description": "L1 Token Gateway (Arbitrum DAI Bridge)"
        },
        {
          "id": "4U61YRDvACWAhKokhqtbf0",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/arbitrum-dai-bridge/blob/master/contracts/l2/L2CrossDomainEnabled.sol",
          "description": "L2 Cross Domain Enabled (Arbitrum DAI Bridge)"
        },
        {
          "id": "3RXq0dYQlFyj98T9kNe5vP",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/arbitrum-dai-bridge/blob/master/contracts/l2/L2DaiGateway.sol",
          "description": "L2 DAI Gateway (Arbitrum DAI Bridge)"
        },
        {
          "id": "4ACCBfbRuY3BpwrRVuopC9",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/arbitrum-dai-bridge/blob/master/contracts/l2/L2GovernanceRelay.sol",
          "description": "L2 Governance Relay (Arbitrum DAI Bridge)"
        },
        {
          "id": "31yzL0yhdUiC5PISzidXWp",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/arbitrum-dai-bridge/blob/master/contracts/l2/L2ITokenGateway.sol",
          "description": "L2 Token Gateway (Arbitrum DAI Bridge)"
        },
        {
          "id": "61LO9dEYlLZepRLRQo1muf",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/arbitrum-dai-bridge/blob/master/contracts/l2/dai.sol",
          "description": "DAI (Arbitrum DAI Bridge)"
        },
        {
          "id": "3AETksx4FpzDuuHAGAg2tF",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/starknet-dai-bridge/blob/main/contracts/l1/L1DAIBridge.sol",
          "description": "L1DAIBridge (StarkNet)"
        },
        {
          "id": "5OZPkEdJHuN0Sm0J2aIx50",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/starknet-dai-bridge/blob/main/contracts/l1/L1Escrow.sol",
          "description": "L1Escrow (StarkNet)"
        },
        {
          "id": "4Am2PeUQZQvYYqr3uBOFT",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/starknet-dai-bridge/blob/main/contracts/l1/L1EscrowMom.sol",
          "description": "L1EscrowMom (StarkNet)"
        },
        {
          "id": "6SS8Dq8OrN3Lsqwu17Eoz9",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/starknet-dai-bridge/blob/main/contracts/l1/L1GovernanceRelay.sol",
          "description": "L1GovernanceRelay (StarkNet)"
        },
        {
          "id": "55QVLUqtREj4OnVYmcIiAw",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/starknet-dai-bridge/blob/main/contracts/l2/dai.cairo",
          "description": "dai (StarkNet)"
        },
        {
          "id": "6AKd69REJdg8tW6UBZ0LTA",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/starknet-dai-bridge/blob/main/contracts/l2/l2_dai_bridge.cairo",
          "description": "l2_dai_bridge (StarkNet)"
        },
        {
          "id": "7w4SbA1jQ62fPRf5nx7XTB",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/starknet-dai-bridge/blob/main/contracts/l2/l2_governance_relay.cairo",
          "description": " l2_governance_relay (StarkNet)"
        },
        {
          "id": "4d5rGDyHK5WLwQB7CV0ZSj",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/starknet-dai-bridge/blob/main/contracts/l2/registry.cairo",
          "description": "registry (StarkNet)"
        },
        {
          "id": "3wdwXP7MEdP98XHYyKYOIV",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-teleport/blob/master/src/TeleportJoin.sol",
          "description": "Teleport Join"
        },
        {
          "id": "2HAvpmGVlWKEPWzgOm7CGL",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-teleport/blob/master/src/TeleportOracleAuth.sol",
          "description": "Teleport Oracle Auth"
        },
        {
          "id": "5BYfb3YWYtfyid4ItLR4cb",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-teleport/blob/master/src/TeleportConstantFee.sol",
          "description": "Teleport Constant Fee"
        },
        {
          "id": "321HuScsozPqRjKaXj22hd",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-teleport/blob/master/src/TeleportRouter.sol",
          "description": "Teleport Router"
        },
        {
          "id": "5h4CTkGMUz3UeOQ5saG6i9",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-teleport/blob/master/src/relays/BasicRelay.sol",
          "description": "Basic Relay"
        },
        {
          "id": "1DaJg9Eu6zIjY0zhaHg7YN",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-teleport/blob/master/src/utils/EnumerableSet.sol",
          "description": "Enumerable Set"
        },
        {
          "id": "n0FFZZx1QIqq3LvWNiGoJ",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-teleport/blob/master/src/TeleportFees.sol",
          "description": "Teleport Fees"
        },
        {
          "id": "2poGiLj9rWTXuufx8WbuXo",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-teleport/blob/master/src/TeleportGUID.sol",
          "description": "Teleport GUID"
        },
        {
          "id": "2yDnY5r58Er7d85tkzyLZA",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-chain-log/blob/master/src/ChainLog.sol",
          "description": "ChainLog"
        },
        {
          "id": "1cB2G4Db9pHN81FkVCjoBd",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-direct-deposit/blob/master/src/D3MHub.sol",
          "description": "D3MHub"
        },
        {
          "id": "1IeE6DTJ5YCF5y70DDF0kz",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-direct-deposit/blob/master/src/D3MMom.sol",
          "description": "D3MMom"
        },
        {
          "id": "5Vh6vF2uW9yM8xam1vzCdS",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-direct-deposit/blob/master/src/D3MOracle.sol",
          "description": "D3MOracle"
        },
        {
          "id": "59XfDUgbpNh8h9WK31TCoU",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-direct-deposit/blob/master/src/plans/D3MAavePlan.sol",
          "description": "D3MAavePlan"
        },
        {
          "id": "XhnTmqcB9e2YWYNcpZad3",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-direct-deposit/blob/master/src/plans/D3MCompoundPlan.sol",
          "description": "D3MCompoundPlan"
        },
        {
          "id": "1tmSSGRVexpVMv7s7fFKAl",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-direct-deposit/blob/master/src/pools/D3MAavePool.sol",
          "description": "D3MAavePool"
        },
        {
          "id": "6TRDVNVtyUAEfMjc3QeW36",
          "type": "smart_contract",
          "url": "https://github.com/makerdao/dss-direct-deposit/blob/master/src/pools/D3MCompoundPool.sol",
          "description": "D3MCompoundPool"
        },
        {
          "id": "5e7TNPNTnwjfDlmojoHQuW",
          "type": "websites_and_applications",
          "url": "https://vote.makerdao.com/",
          "description": "Governance Voting"
        },
        {
          "id": "6Na0yDXCeV8dJtCAANDnLt",
          "type": "websites_and_applications",
          "url": "https://chainlog.makerdao.com/",
          "description": "Contract addresses"
        }
      ],
      "impacts": [
        {
          "id": "5Q2lw5qcvKW0fQJx8hYwRP",
          "title": "Any governance voting result manipulation",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3Miq7DD0Lu0x02pgZmqjpG",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4X5TSyisOYYuwaRC4Dmj0Q",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4yHYbwLnrFgTM5YDo95iMa",
          "title": "Protocol Insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5K8IFc5KQwiNzNuCDbexe7",
          "title": "Taking Down the application/website",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "2zNWpgrZVRm76xC3THoyYG",
          "title": "Direct theft of user funds",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "FBaal2YDV6IqMLKD0EqCu",
          "title": "Execute arbitrary system commands",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "6xjHOL55xZOdrVNHXgUTgk",
          "title": "Retrieve sensitive data/files from a running server such as /etc/shadow, database passwords, and blockchain keys(this does not include non-sensitive environment variables, open source code, or usernames)",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "1SpxhWLgTa3AfhtNiVozl3",
          "title": "Taking state-modifying authenticated actions (with or without blockchain state interaction) on behalf of other users without any interaction by that user, such as, changing registration information, commenting, voting, making trades, withdrawals, etc.",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "1gVXG6cKarcAgombIRqIjz",
          "title": "Subdomain takeover with already-connected wallet interaction",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "4KoY4HPsSwaHRvvpajsw4u",
          "title": "Malicious interactions with an already-connected wallet such as modifying transaction arguments or parameters, substituting contract addresses, submitting malicious transactions",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "8Xt6zN6r3SOcKIs3UubnH",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "4cLW1cGYPRPRqUpkemFdaY",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "54fQHTpuf4mD9kv4DWkqa5",
          "title": "Temporary freezing of funds for at least five blocks",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "DxByvP4ttK35vthCyQvCi",
          "title": "Injecting/modifying the static content on the target application without Javascript (Persistent) such as HTML injection without Javascript, replacing existing text with arbitrary text, arbitrary file uploads, etc.",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "4j4uSvCUcnhRMF8am9AK2H",
          "title": "Changing sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, such as email or password of the victim, etc.",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "5BtW4wWCDM0JnwZoUIIWOL",
          "title": "Improperly disclosing confidential user information such as email address, phone number, physical address, etc.",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "7rGkD1jo1wdfzXTCidW2CB",
          "title": "Subdomain takeover without already-connected wallet interaction",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "37emf0lO59EZAYuLECtUkS",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "syQl941udvCzWg3v4PfWR",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "56IBcKcPTGOA8dduq7N1dJ",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3Assvvtjl8SEzd9v5FonIR",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "7B1aNM8eHRIFlLPZDvIdlk",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "2k2WALbrqYUR8C0fmQ22wo",
          "title": "Redirecting users to malicious websites (Open Redirect)",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "4f6iFUWbXz5xuZU7EZYOAh",
          "title": "Changing non-sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, such as changing the first/last name of user, or en/disabling notification",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "5FaESfh0PPVIEN19siXIJP",
          "title": "Injecting/modifying the static content on the target application without Javascript (Reflected) such as reflected HTML injection or loading external site data",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "4qDEB1co1jNnDJxI7RQQEt",
          "title": "Smart contract fails to work correctly, but doesn’t lose value",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "MakerDAO is one of the first DeFi protocols in the crypto space that introduced the first crypto-backed stablecoin called Dai (DAI), which is set at a value of 1:1 with the United States Dollar. It is governed by those who hold and/or are delegated MKR, the governance token of the protocol. Since 2021, the project has become more decentralized, with the MakerDAO Foundation being shut down in order to move operations to decentralized business units known as core units. \n\nOne of these core units is the Immunefi Security (IS-001) core unit, a result of two decentralized organizations collaborating together. One mandate of this core unit is to launch a bug bounty program to protect the critical infrastructure of the ecosystem.\n\nFor more information about MakerDAO, please visit [https://makerdao.com/](https://makerdao.com/). For more information about the Immunefi Security core unit (IS-001), please visit [https://immunefi.com/immunefi-security-core-unit-makerdao/](https://immunefi.com/immunefi-security-core-unit-makerdao/).  \n\nThis bug bounty program is governed under the terms set in MIP64. Resolution of payouts may be longer compared to normal timelines due to requiring governance activity. However, proposed amendments are in process to speed up the payment of rewards to bug bounty hunters. \n\nAll Critical and High bug reports will have a postmortem written by the Immunefi Security core unit to be published on the Immunefi Medium blog and distributed on its social media channels after the payout is made and the fixes finalized. The identity of the bug reporter may be included, either with their real name or pseudonymously, if they choose to, or they can choose to remain anonymous.\n\nThis bug bounty program is launched in a roll-out plan towards the end of February 2022 with regular expansions provided until the end of the month. Though further additions may be included after the end of the month, this initial phasing process is to ensure that all infrastructure is working in place.",
      "prioritizedVulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n__Critical__\n  - Any governance voting result manipulation\n  - Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\n  - Permanent freezing of funds\n  - Miner-extractable value (MEV)\n  - Protocol Insolvency\n\n__High__\n  - Theft of unclaimed yield\n  - Permanent freezing of unclaimed yield\n  - Temporary freezing of funds for at least five blocks\n\n__Medium__\n  - Smart contract unable to operate due to lack of token funds \n  - Block stuffing for profit\n  - Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)\n  - Theft of gas\n  - Unbounded gas consumption \n\n__Low__\n  - Smart contract fails to deliver promised returns, but doesn’t lose value\n\n__Web/App__\n\n__Critical__\n\n  - Execute arbitrary system commands\n  - Retrieve sensitive data/files from a running server such as /etc/shadow, database passwords, and blockchain keys(this does not include non-sensitive environment variables, open source code, or usernames)\n  - Taking down the application/website\n  - Taking state-modifying authenticated actions (with or without blockchain state interaction) on behalf of other users without any interaction by that user, such as, changing registration information, commenting, voting, making trades, withdrawals, etc.\n  - Subdomain takeover with already-connected wallet interaction\n  - Direct theft of user funds\n  - Malicious interactions with an already-connected wallet such as modifying transaction arguments or parameters, substituting contract addresses, submitting malicious transactions \n\n__High__\n\n  - Injecting/modifying the static content on the target application without Javascript (Persistent) such as HTML injection without Javascript, replacing existing text with arbitrary text, arbitrary file uploads, etc.\n  - Changing sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, such as email or password of the victim, etc.\n  - Improperly disclosing confidential user information such as email address, phone number, physical address, etc.\n  - Subdomain takeover without already-connected wallet interaction\n\n__Medium__\n  - Changing non-sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, such as changing the first/last name of user, or enabling/disabling notifications\n  - Injecting/modifying the static content on the target application without Javascript (Reflected) such as reflected HTML injection or loading external site data\n  - Redirecting users to malicious websites (Open Redirect)\n",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. \n\nCritical smart contract vulnerabilities are further capped at 10% of economic damage, which primarily takes into consideration the funds at risk. In cases of repeatable attacks, only the first attack is considered unless the smart contract cannot be upgraded or paused. However, there is a minimum reward of __USD 150 000__ for valid Critical smart contract bug reports.\n\nHigh smart contract vulnerabilities will be further capped at up to 100% of the funds affected. In the event of temporary freezing, the reward doubles for every additional 5 blocks that the funds could be temporarily frozen, rounded down to the nearest multiple of 5, up to the hard cap of USD 100 000. This is implemented in order to account for the increased relative impact based on the duration of the freezing of funds.\n\nAll calculations of the amount of funds at risk are done based on the time the bug report is submitted. \n\nAll web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. Smart contracts bug reports are required to include a runnable PoC in order to prove impact. Exceptions may be made in cases where the vulnerability is objectively evident from simply mentioning the vulnerability and where it exists. However, the bug reporter may be required to provide a PoC at any point in time. \n\nCritical website and application bug reports will be rewarded with USD 100,000 only if the impact leads to a direct loss in funds or a manipulation of the votes or the voting result, as well as the modification of its display leading to a misrepresentation of the result or vote. All other impacts that would be classified as Critical would be rewarded USD 50,000.\n\nBug reports from compensated team members of any MakerDAO core unit will not be eligible for a reward. Employees and team members of third-party suppliers to core units that operate in a technical capacity and have assets covered in this bug bounty program will also not be eligible for a reward. All team members of IS-001, and its third-party suppliers, including Immunefi itself and its subsidiaries, are not eligible for a reward.\n\nBug reports from team members and third-party suppliers of businesses and organizations that are not a MakerDAO Core Unit but have assets considered as critical infrastructure covered under the bug bounty program are also not eligible for the bug bounty program.\n\nBug reports covering previously-discovered bugs are not eligible for the program. If a bug report covers a known issue, it may be rejected together with proof of the issue being known before escalation of the bug report. Previous audits of MakerDAO can be found at:\n\n[https://chainsecurity.com/security-audit/maker-protocol-liquidations-2-0/](https://chainsecurity.com/security-audit/maker-protocol-liquidations-2-0/) \n\n[https://chainsecurity.com/security-audit/makerdao-g-uni-lp-oracle/](https://chainsecurity.com/security-audit/makerdao-g-uni-lp-oracle/) (narrowly scoped subsystem)\n\n[https://chainsecurity.com/security-audit/makerdao-direct-deposit-module-d3m/](https://chainsecurity.com/security-audit/makerdao-direct-deposit-module-d3m/)\n\n[https://chainsecurity.com/security-audit/makerdao-optimism-dai-bridge/](https://chainsecurity.com/security-audit/makerdao-optimism-dai-bridge/)\n\n[StarkNet DAI Bridge audit](https://drive.google.com/file/d/1StG_v4qmV6EJjJDD-p7O11Ql3Dmrtfew/view?usp=share_link)\n\n[StarkNet Teleport audit](https://drive.google.com/file/d/1113PnxOz2IjsQih0tMkVW_raWcum0ZgU/view?usp=share_link)\n\n[Direct Deposit V2 audit](https://github.com/makerdao/dss-direct-deposit/blob/master/audits/ChainSecurity_MakerDAO_Direct_Deposit_V2_audit.pdf)\n\nOther audits that currently don’t cover any of the assets listed in the Assets in Scope table and are currently a work in progress can be found, for further reading, at:\n\n[https://chainsecurity.com/security-audit/makerdao-dss-charter-smart-contracts/](https://chainsecurity.com/security-audit/makerdao-dss-charter-smart-contracts/)\n\n[https://chainsecurity.com/wp-content/uploads/2021/12/ChainSecurity_MakerDAO_StarkNet-DAI-Bridge_audit.pdf](https://chainsecurity.com/wp-content/uploads/2021/12/ChainSecurity_MakerDAO_StarkNet-DAI-Bridge_audit.pdf)  \n\nThe following issues are considered known and are not eligible for a reward:\n\nConsidering MCD_ETH - The steward core unit is aware that the balance of the contract may be different than the total amount that is deposited if users send ETH directly to the contract. They do not believe this has a negative impact on the system and so unless a report can show how having a higher balance does have negative consequences we will consider reports on the actual balance being higher than the sum of balanceOf values out of scope.\n\nConsidering all adapters -  The steward core unit is aware that the balance (ETH or token) of the contract may be different than the total amount that is joined through the contract if users send tokens or ETH directly to the contract. They do not believe this has a negative impact on the system and so unless a report can show how having a higher balance does have negative consequences they will consider reports on the actual balance being higher than the sum of tokens 'join'ed out of scope.\n\n__In order to be eligible for a reward, the vulnerability must exist both in the deployed smart contract and the GitHub file in the Assets in Scope table.__ For more information, please check the Assets in Scope section.\n\nPayouts are handled by the __MakerDAO__ governance with coordination by the __Immunefi Security core unit__ and are denominated in USD. However, payouts are done in __DAI__ assuming a full 1:1 ratio with the USD. However, if the price of DAI deviates from the USD value by more than 1%, the amount of DAI will be adjusted.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n  - Vulnerabilities primarily caused by browser/plugin defects\n  - Any vulnerability exploit requiring CSP bypass resulting from a browser bug\n\n__Further Scope Restrictions__\n\n__Attacks Leveraging Other DeFi Protocols__\n\nAttacks in the DeFi space sometimes combine multiple protocols (e.g. utilizing flash loans from a margin protocol or manipulating the spot prices on a DEX). PoCs or descriptions of bug exploits may utilize such mechanisms, either to make an attack more severe than it would be in isolation, or to achieve an attack that would otherwise be impossible or infeasible. However, they will only be considered in-scope so long as all of the following are true:\n\n  - Losses or other negative effects of the attack are inflicted upon Maker ecosystem participants—MKR holders, DAI holders, Vault holders, or Keepers. If the losses or negative effects are inflicted solely upon other (external) protocols, the attack is not in scope for this bounty program (though we would encourage you to responsibly disclose to those protocols).\n  - The losses or other negative effects could be prevented via changes to the MCD smart contracts already included in the bounty scope.\n  - The additional DeFi protocols used exist as smart contracts on the Ethereum mainnet and can reasonably be expected to have enough liquidity in various assets to allow the attack to succeed (when there is insufficient liquidity to achieve the claimed severity level but the attack is still possible, it may still be considered in-scope but with a downgraded severity level). For example: if an attack requires an ETH flash loan, but the amount is larger than all the ETH available for loan across the ecosystem, the attack would be downgraded.\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty\n",
      "assetsBodyV2": "Due to the regularly-updating smart contracts, only the GitHub links are provided. However, to find the most up-to-date deployment addresses, you can refer to [https://chainlog.makerdao.com/](http://chainlog.makerdao.com/). Vulnerabilities that are exploitable in old versions of smart contracts and have since been mitigated (either deliberately or accidentally) in current versions (as demonstrated by the listing at [https://chainlog.makerdao.com/](https://chainlog.makerdao.com/)) are not in-scope for the bug bounty program. In the event that a vulnerability exists on the GitHub file but not on the most recently deployed contract, this may be due to a “dark spell” to fix a vulnerability quietly. If your bug report is rejected as a known issue due to this, details will be provided to you. __This means that in order to be eligible for a reward, the vulnerability needs to exist in both the GitHub file and the respective deployment contract.__\n\n[https://chainlog.makerdao.com/](https://chainlog.makerdao.com/) is designed to be easy to run locally. Hence, taking down the application/website is considered out-of-scope for this website.\n\nAll Medium and High level bug reports are not in-scope for the [https://vote.makerdao.com/](https://vote.makerdao.com/) asset, Only Critical severity reports are in-scope for this asset.\n\nVote comments are stored in a database accessed by [https://vote.makerdao.com/](https://vote.makerdao.com/). The critical functionality of the site (e.g., voting) is in-scope, but non-critical voter comments are out-of-scope.\n\nAssets of MakerDAO can be found at [https://github.com/makerdao](https://github.com/makerdao). If you discover a vulnerability with Critical impact on any deployed smart contract, you may submit it for consideration by the Immunefi Security core unit.\n\nFull documentation can be found at [https://docs.makerdao.com/](https://docs.makerdao.com/) and annotations can be found at [https://docs.makerdao.com/other-documentation/smart-contract-annotations](https://docs.makerdao.com/other-documentation/smart-contract-annotations). A comprehensive guide to the smart contracts can be found at [https://docs.makerdao.com/maker-protocol-101](https://docs.makerdao.com/maker-protocol-101). \n\nFurther information about the Governance Voting asset can be found at:\n\n  - [https://github.com/makerdao/gov-polling-db](https://github.com/makerdao/gov-polling-db)\n  - [https://github.com/makerdao/governance-portal-v2](https://github.com/makerdao/governance-portal-v2) \n  - API documentation: [https://vote.makerdao.com/api-docs](https://vote.makerdao.com/api-docs)\n  - Gov polling db endpoint (can be used to view graphql schema)\n    - prod: [https://polling-db-prod.makerdux.com/api/v1](https://polling-db-prod.makerdux.com/api/v1)\n    - staging: [https://polling-db-staging.makerdux.com/api/v1](https://polling-db-staging.makerdux.com/api/v1)\n\nThe dai.js repo (https://github.com/makerdao/dai.js/ ) is __NOT__ in scope even though it's a dependency of the Governance Portal ([https://vote.makerdao.com/](https://vote.makerdao.com/)).\n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Lending",
          "Staking"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": null
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $10,000,000"
          },
          {
            "level": "High",
            "payout": "Up to USD $100,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $100,000"
          },
          {
            "level": "High",
            "payout": "USD $5,000"
          },
          {
            "level": "Medium",
            "payout": "USD $2,500"
          }
        ]
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"MakerDAO is one of the first DeFi protocols in the crypto space that introduced the first crypto-backed stablecoin called Dai (DAI), which is set at a value of 1:1 with the United States Dollar. It is governed by those who hold and/or are delegated MKR, the governance token of the protocol. Since 2021, the project has become more decentralized, with the MakerDAO Foundation being shut down in order to move operations to decentralized business units known as core units. \"), mdx(\"p\", null, \"One of these core units is the Immunefi Security (IS-001) core unit, a result of two decentralized organizations collaborating together. One mandate of this core unit is to launch a bug bounty program to protect the critical infrastructure of the ecosystem.\"), mdx(\"p\", null, \"For more information about MakerDAO, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://makerdao.com/\"\n  }, \"https://makerdao.com/\"), \". For more information about the Immunefi Security core unit (IS-001), please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-security-core-unit-makerdao/\"\n  }, \"https://immunefi.com/immunefi-security-core-unit-makerdao/\"), \".  \"), mdx(\"p\", null, \"This bug bounty program is governed under the terms set in MIP64. Resolution of payouts may be longer compared to normal timelines due to requiring governance activity. However, proposed amendments are in process to speed up the payment of rewards to bug bounty hunters. \"), mdx(\"p\", null, \"All Critical and High bug reports will have a postmortem written by the Immunefi Security core unit to be published on the Immunefi Medium blog and distributed on its social media channels after the payout is made and the fixes finalized. The identity of the bug reporter may be included, either with their real name or pseudonymously, if they choose to, or they can choose to remain anonymous.\"), mdx(\"p\", null, \"This bug bounty program is launched in a roll-out plan towards the end of February 2022 with regular expansions provided until the end of the month. Though further additions may be included after the end of the month, this initial phasing process is to ensure that all infrastructure is working in place.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>MakerDAO is one of the first DeFi protocols in the crypto space that introduced the first crypto-backed stablecoin called Dai (DAI), which is set at a value of 1:1 with the United States Dollar. It is governed by those who hold and/or are delegated MKR, the governance token of the protocol. Since 2021, the project has become more decentralized, with the MakerDAO Foundation being shut down in order to move operations to decentralized business units known as core units. </p><p>One of these core units is the Immunefi Security (IS-001) core unit, a result of two decentralized organizations collaborating together. One mandate of this core unit is to launch a bug bounty program to protect the critical infrastructure of the ecosystem.</p><p>For more information about MakerDAO, please visit <a href=\"https://makerdao.com/\">https://makerdao.com/</a>. For more information about the Immunefi Security core unit (IS-001), please visit <a href=\"https://immunefi.com/immunefi-security-core-unit-makerdao/\">https://immunefi.com/immunefi-security-core-unit-makerdao/</a>.  </p><p>This bug bounty program is governed under the terms set in MIP64. Resolution of payouts may be longer compared to normal timelines due to requiring governance activity. However, proposed amendments are in process to speed up the payment of rewards to bug bounty hunters. </p><p>All Critical and High bug reports will have a postmortem written by the Immunefi Security core unit to be published on the Immunefi Medium blog and distributed on its social media channels after the payout is made and the fixes finalized. The identity of the bug reporter may be included, either with their real name or pseudonymously, if they choose to, or they can choose to remain anonymous.</p><p>This bug bounty program is launched in a roll-out plan towards the end of February 2022 with regular expansions provided until the end of the month. Though further additions may be included after the end of the month, this initial phasing process is to ensure that all infrastructure is working in place.</p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Impacts in Scope\")), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts/Blockchain\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Critical\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any governance voting result manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Miner-extractable value (MEV)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Protocol Insolvency\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"High\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Temporary freezing of funds for at least five blocks\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Medium\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract unable to operate due to lack of token funds \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Block stuffing for profit\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of gas\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unbounded gas consumption \")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Low\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract fails to deliver promised returns, but doesn\\u2019t lose value\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Web/App\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Critical\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Execute arbitrary system commands\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Retrieve sensitive data/files from a running server such as /etc/shadow, database passwords, and blockchain keys(this does not include non-sensitive environment variables, open source code, or usernames)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Taking down the application/website\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Taking state-modifying authenticated actions (with or without blockchain state interaction) on behalf of other users without any interaction by that user, such as, changing registration information, commenting, voting, making trades, withdrawals, etc.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Subdomain takeover with already-connected wallet interaction\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct theft of user funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Malicious interactions with an already-connected wallet such as modifying transaction arguments or parameters, substituting contract addresses, submitting malicious transactions \")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"High\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Injecting/modifying the static content on the target application without Javascript (Persistent) such as HTML injection without Javascript, replacing existing text with arbitrary text, arbitrary file uploads, etc.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Changing sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, such as email or password of the victim, etc.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Improperly disclosing confidential user information such as email address, phone number, physical address, etc.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Subdomain takeover without already-connected wallet interaction\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Medium\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Changing non-sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, such as changing the first/last name of user, or enabling/disabling notifications\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Injecting/modifying the static content on the target application without Javascript (Reflected) such as reflected HTML injection or loading external site data\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Redirecting users to malicious websites (Open Redirect)\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p><strong>Impacts in Scope</strong></p><p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p><p><strong>Smart Contracts/Blockchain</strong></p><p><strong>Critical</strong></p><ul><li>Any governance voting result manipulation</li><li>Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield</li><li>Permanent freezing of funds</li><li>Miner-extractable value (MEV)</li><li>Protocol Insolvency</li></ul><p><strong>High</strong></p><ul><li>Theft of unclaimed yield</li><li>Permanent freezing of unclaimed yield</li><li>Temporary freezing of funds for at least five blocks</li></ul><p><strong>Medium</strong></p><ul><li>Smart contract unable to operate due to lack of token funds </li><li>Block stuffing for profit</li><li>Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)</li><li>Theft of gas</li><li>Unbounded gas consumption </li></ul><p><strong>Low</strong></p><ul><li>Smart contract fails to deliver promised returns, but doesn’t lose value</li></ul><p><strong>Web/App</strong></p><p><strong>Critical</strong></p><ul><li>Execute arbitrary system commands</li><li>Retrieve sensitive data/files from a running server such as /etc/shadow, database passwords, and blockchain keys(this does not include non-sensitive environment variables, open source code, or usernames)</li><li>Taking down the application/website</li><li>Taking state-modifying authenticated actions (with or without blockchain state interaction) on behalf of other users without any interaction by that user, such as, changing registration information, commenting, voting, making trades, withdrawals, etc.</li><li>Subdomain takeover with already-connected wallet interaction</li><li>Direct theft of user funds</li><li>Malicious interactions with an already-connected wallet such as modifying transaction arguments or parameters, substituting contract addresses, submitting malicious transactions </li></ul><p><strong>High</strong></p><ul><li>Injecting/modifying the static content on the target application without Javascript (Persistent) such as HTML injection without Javascript, replacing existing text with arbitrary text, arbitrary file uploads, etc.</li><li>Changing sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, such as email or password of the victim, etc.</li><li>Improperly disclosing confidential user information such as email address, phone number, physical address, etc.</li><li>Subdomain takeover without already-connected wallet interaction</li></ul><p><strong>Medium</strong></p><ul><li>Changing non-sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, such as changing the first/last name of user, or enabling/disabling notifications</li><li>Injecting/modifying the static content on the target application without Javascript (Reflected) such as reflected HTML injection or loading external site data</li><li>Redirecting users to malicious websites (Open Redirect)</li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. \"), mdx(\"p\", null, \"Critical smart contract vulnerabilities are further capped at 10% of economic damage, which primarily takes into consideration the funds at risk. In cases of repeatable attacks, only the first attack is considered unless the smart contract cannot be upgraded or paused. However, there is a minimum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 150 000\"), \" for valid Critical smart contract bug reports.\"), mdx(\"p\", null, \"High smart contract vulnerabilities will be further capped at up to 100% of the funds affected. In the event of temporary freezing, the reward doubles for every additional 5 blocks that the funds could be temporarily frozen, rounded down to the nearest multiple of 5, up to the hard cap of USD 100 000. This is implemented in order to account for the increased relative impact based on the duration of the freezing of funds.\"), mdx(\"p\", null, \"All calculations of the amount of funds at risk are done based on the time the bug report is submitted. \"), mdx(\"p\", null, \"All web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. Smart contracts bug reports are required to include a runnable PoC in order to prove impact. Exceptions may be made in cases where the vulnerability is objectively evident from simply mentioning the vulnerability and where it exists. However, the bug reporter may be required to provide a PoC at any point in time. \"), mdx(\"p\", null, \"Critical website and application bug reports will be rewarded with USD 100,000 only if the impact leads to a direct loss in funds or a manipulation of the votes or the voting result, as well as the modification of its display leading to a misrepresentation of the result or vote. All other impacts that would be classified as Critical would be rewarded USD 50,000.\"), mdx(\"p\", null, \"Bug reports from compensated team members of any MakerDAO core unit will not be eligible for a reward. Employees and team members of third-party suppliers to core units that operate in a technical capacity and have assets covered in this bug bounty program will also not be eligible for a reward. All team members of IS-001, and its third-party suppliers, including Immunefi itself and its subsidiaries, are not eligible for a reward.\"), mdx(\"p\", null, \"Bug reports from team members and third-party suppliers of businesses and organizations that are not a MakerDAO Core Unit but have assets considered as critical infrastructure covered under the bug bounty program are also not eligible for the bug bounty program.\"), mdx(\"p\", null, \"Bug reports covering previously-discovered bugs are not eligible for the program. If a bug report covers a known issue, it may be rejected together with proof of the issue being known before escalation of the bug report. Previous audits of MakerDAO can be found at:\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://chainsecurity.com/security-audit/maker-protocol-liquidations-2-0/\"\n  }, \"https://chainsecurity.com/security-audit/maker-protocol-liquidations-2-0/\"), \" \"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://chainsecurity.com/security-audit/makerdao-g-uni-lp-oracle/\"\n  }, \"https://chainsecurity.com/security-audit/makerdao-g-uni-lp-oracle/\"), \" (narrowly scoped subsystem)\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://chainsecurity.com/security-audit/makerdao-direct-deposit-module-d3m/\"\n  }, \"https://chainsecurity.com/security-audit/makerdao-direct-deposit-module-d3m/\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://chainsecurity.com/security-audit/makerdao-optimism-dai-bridge/\"\n  }, \"https://chainsecurity.com/security-audit/makerdao-optimism-dai-bridge/\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://drive.google.com/file/d/1StG_v4qmV6EJjJDD-p7O11Ql3Dmrtfew/view?usp=share_link\"\n  }, \"StarkNet DAI Bridge audit\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://drive.google.com/file/d/1113PnxOz2IjsQih0tMkVW_raWcum0ZgU/view?usp=share_link\"\n  }, \"StarkNet Teleport audit\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/makerdao/dss-direct-deposit/blob/master/audits/ChainSecurity_MakerDAO_Direct_Deposit_V2_audit.pdf\"\n  }, \"Direct Deposit V2 audit\")), mdx(\"p\", null, \"Other audits that currently don\\u2019t cover any of the assets listed in the Assets in Scope table and are currently a work in progress can be found, for further reading, at:\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://chainsecurity.com/security-audit/makerdao-dss-charter-smart-contracts/\"\n  }, \"https://chainsecurity.com/security-audit/makerdao-dss-charter-smart-contracts/\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://chainsecurity.com/wp-content/uploads/2021/12/ChainSecurity_MakerDAO_StarkNet-DAI-Bridge_audit.pdf\"\n  }, \"https://chainsecurity.com/wp-content/uploads/2021/12/ChainSecurity_MakerDAO_StarkNet-DAI-Bridge_audit.pdf\"), \"  \"), mdx(\"p\", null, \"The following issues are considered known and are not eligible for a reward:\"), mdx(\"p\", null, \"Considering MCD_ETH - The steward core unit is aware that the balance of the contract may be different than the total amount that is deposited if users send ETH directly to the contract. They do not believe this has a negative impact on the system and so unless a report can show how having a higher balance does have negative consequences we will consider reports on the actual balance being higher than the sum of balanceOf values out of scope.\"), mdx(\"p\", null, \"Considering all adapters -  The steward core unit is aware that the balance (ETH or token) of the contract may be different than the total amount that is joined through the contract if users send tokens or ETH directly to the contract. They do not believe this has a negative impact on the system and so unless a report can show how having a higher balance does have negative consequences they will consider reports on the actual balance being higher than the sum of tokens 'join'ed out of scope.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"In order to be eligible for a reward, the vulnerability must exist both in the deployed smart contract and the GitHub file in the Assets in Scope table.\"), \" For more information, please check the Assets in Scope section.\"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"MakerDAO\"), \" governance with coordination by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Immunefi Security core unit\"), \" and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"DAI\"), \" assuming a full 1:1 ratio with the USD. However, if the price of DAI deviates from the USD value by more than 1%, the amount of DAI will be adjusted.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. </p><p>Critical smart contract vulnerabilities are further capped at 10% of economic damage, which primarily takes into consideration the funds at risk. In cases of repeatable attacks, only the first attack is considered unless the smart contract cannot be upgraded or paused. However, there is a minimum reward of <strong>USD 150 000</strong> for valid Critical smart contract bug reports.</p><p>High smart contract vulnerabilities will be further capped at up to 100% of the funds affected. In the event of temporary freezing, the reward doubles for every additional 5 blocks that the funds could be temporarily frozen, rounded down to the nearest multiple of 5, up to the hard cap of USD 100 000. This is implemented in order to account for the increased relative impact based on the duration of the freezing of funds.</p><p>All calculations of the amount of funds at risk are done based on the time the bug report is submitted. </p><p>All web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. Smart contracts bug reports are required to include a runnable PoC in order to prove impact. Exceptions may be made in cases where the vulnerability is objectively evident from simply mentioning the vulnerability and where it exists. However, the bug reporter may be required to provide a PoC at any point in time. </p><p>Critical website and application bug reports will be rewarded with USD 100,000 only if the impact leads to a direct loss in funds or a manipulation of the votes or the voting result, as well as the modification of its display leading to a misrepresentation of the result or vote. All other impacts that would be classified as Critical would be rewarded USD 50,000.</p><p>Bug reports from compensated team members of any MakerDAO core unit will not be eligible for a reward. Employees and team members of third-party suppliers to core units that operate in a technical capacity and have assets covered in this bug bounty program will also not be eligible for a reward. All team members of IS-001, and its third-party suppliers, including Immunefi itself and its subsidiaries, are not eligible for a reward.</p><p>Bug reports from team members and third-party suppliers of businesses and organizations that are not a MakerDAO Core Unit but have assets considered as critical infrastructure covered under the bug bounty program are also not eligible for the bug bounty program.</p><p>Bug reports covering previously-discovered bugs are not eligible for the program. If a bug report covers a known issue, it may be rejected together with proof of the issue being known before escalation of the bug report. Previous audits of MakerDAO can be found at:</p><p><a href=\"https://chainsecurity.com/security-audit/maker-protocol-liquidations-2-0/\">https://chainsecurity.com/security-audit/maker-protocol-liquidations-2-0/</a> </p><p><a href=\"https://chainsecurity.com/security-audit/makerdao-g-uni-lp-oracle/\">https://chainsecurity.com/security-audit/makerdao-g-uni-lp-oracle/</a> (narrowly scoped subsystem)</p><p><a href=\"https://chainsecurity.com/security-audit/makerdao-direct-deposit-module-d3m/\">https://chainsecurity.com/security-audit/makerdao-direct-deposit-module-d3m/</a></p><p><a href=\"https://chainsecurity.com/security-audit/makerdao-optimism-dai-bridge/\">https://chainsecurity.com/security-audit/makerdao-optimism-dai-bridge/</a></p><p><a href=\"https://drive.google.com/file/d/1StG_v4qmV6EJjJDD-p7O11Ql3Dmrtfew/view?usp=share_link\">StarkNet DAI Bridge audit</a></p><p><a href=\"https://drive.google.com/file/d/1113PnxOz2IjsQih0tMkVW_raWcum0ZgU/view?usp=share_link\">StarkNet Teleport audit</a></p><p><a href=\"https://github.com/makerdao/dss-direct-deposit/blob/master/audits/ChainSecurity_MakerDAO_Direct_Deposit_V2_audit.pdf\">Direct Deposit V2 audit</a></p><p>Other audits that currently don’t cover any of the assets listed in the Assets in Scope table and are currently a work in progress can be found, for further reading, at:</p><p><a href=\"https://chainsecurity.com/security-audit/makerdao-dss-charter-smart-contracts/\">https://chainsecurity.com/security-audit/makerdao-dss-charter-smart-contracts/</a></p><p><a href=\"https://chainsecurity.com/wp-content/uploads/2021/12/ChainSecurity_MakerDAO_StarkNet-DAI-Bridge_audit.pdf\">https://chainsecurity.com/wp-content/uploads/2021/12/ChainSecurity_MakerDAO_StarkNet-DAI-Bridge_audit.pdf</a>  </p><p>The following issues are considered known and are not eligible for a reward:</p><p>Considering MCD_ETH - The steward core unit is aware that the balance of the contract may be different than the total amount that is deposited if users send ETH directly to the contract. They do not believe this has a negative impact on the system and so unless a report can show how having a higher balance does have negative consequences we will consider reports on the actual balance being higher than the sum of balanceOf values out of scope.</p><p>Considering all adapters -  The steward core unit is aware that the balance (ETH or token) of the contract may be different than the total amount that is joined through the contract if users send tokens or ETH directly to the contract. They do not believe this has a negative impact on the system and so unless a report can show how having a higher balance does have negative consequences they will consider reports on the actual balance being higher than the sum of tokens &#x27;join&#x27;ed out of scope.</p><p><strong>In order to be eligible for a reward, the vulnerability must exist both in the deployed smart contract and the GitHub file in the Assets in Scope table.</strong> For more information, please check the Assets in Scope section.</p><p>Payouts are handled by the <strong>MakerDAO</strong> governance with coordination by the <strong>Immunefi Security core unit</strong> and are denominated in USD. However, payouts are done in <strong>DAI</strong> assuming a full 1:1 ratio with the USD. However, if the price of DAI deviates from the USD value by more than 1%, the amount of DAI will be adjusted.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theoretical vulnerabilities without any proof or demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Self-XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Captcha bypass using OCR\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with no security impact (logout CSRF, change language, etc.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as \\u201Chttponly\\u201D)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Server-side information disclosure such as IPs, server names, and most stack traces\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities used to enumerate or confirm the existence of users or tenants\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities requiring unlikely user actions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of SSL/TLS best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DDoS vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring privileged access from within the organization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Feature requests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities primarily caused by browser/plugin defects\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any vulnerability exploit requiring CSP bypass resulting from a browser bug\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Further Scope Restrictions\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Attacks Leveraging Other DeFi Protocols\")), mdx(\"p\", null, \"Attacks in the DeFi space sometimes combine multiple protocols (e.g. utilizing flash loans from a margin protocol or manipulating the spot prices on a DEX). PoCs or descriptions of bug exploits may utilize such mechanisms, either to make an attack more severe than it would be in isolation, or to achieve an attack that would otherwise be impossible or infeasible. However, they will only be considered in-scope so long as all of the following are true:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Losses or other negative effects of the attack are inflicted upon Maker ecosystem participants\\u2014MKR holders, DAI holders, Vault holders, or Keepers. If the losses or negative effects are inflicted solely upon other (external) protocols, the attack is not in scope for this bounty program (though we would encourage you to responsibly disclose to those protocols).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The losses or other negative effects could be prevented via changes to the MCD smart contracts already included in the bounty scope.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The additional DeFi protocols used exist as smart contracts on the Ethereum mainnet and can reasonably be expected to have enough liquidity in various assets to allow the attack to succeed (when there is insufficient liquidity to achieve the claimed severity level but the attack is still possible, it may still be considered in-scope but with a downgraded severity level). For example: if an attack requires an ETH flash loan, but the amount is larger than all the ETH available for loan across the ecosystem, the attack would be downgraded.\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p><strong>Websites and Apps</strong></p><ul><li>Theoretical vulnerabilities without any proof or demonstration</li><li>Self-XSS</li><li>Captcha bypass using OCR</li><li>CSRF with no security impact (logout CSRF, change language, etc.)</li><li>Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)</li><li>Server-side information disclosure such as IPs, server names, and most stack traces</li><li>Vulnerabilities used to enumerate or confirm the existence of users or tenants</li><li>Vulnerabilities requiring unlikely user actions</li><li>URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)</li><li>Lack of SSL/TLS best practices</li><li>DDoS vulnerabilities</li><li>Attacks requiring privileged access from within the organization</li><li>Feature requests</li><li>Best practices</li><li>Vulnerabilities primarily caused by browser/plugin defects</li><li>Any vulnerability exploit requiring CSP bypass resulting from a browser bug</li></ul><p><strong>Further Scope Restrictions</strong></p><p><strong>Attacks Leveraging Other DeFi Protocols</strong></p><p>Attacks in the DeFi space sometimes combine multiple protocols (e.g. utilizing flash loans from a margin protocol or manipulating the spot prices on a DEX). PoCs or descriptions of bug exploits may utilize such mechanisms, either to make an attack more severe than it would be in isolation, or to achieve an attack that would otherwise be impossible or infeasible. However, they will only be considered in-scope so long as all of the following are true:</p><ul><li>Losses or other negative effects of the attack are inflicted upon Maker ecosystem participants—MKR holders, DAI holders, Vault holders, or Keepers. If the losses or negative effects are inflicted solely upon other (external) protocols, the attack is not in scope for this bounty program (though we would encourage you to responsibly disclose to those protocols).</li><li>The losses or other negative effects could be prevented via changes to the MCD smart contracts already included in the bounty scope.</li><li>The additional DeFi protocols used exist as smart contracts on the Ethereum mainnet and can reasonably be expected to have enough liquidity in various assets to allow the attack to succeed (when there is insufficient liquidity to achieve the claimed severity level but the attack is still possible, it may still be considered in-scope but with a downgraded severity level). For example: if an attack requires an ETH flash loan, but the amount is larger than all the ETH available for loan across the ecosystem, the attack would be downgraded.</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Due to the regularly-updating smart contracts, only the GitHub links are provided. However, to find the most up-to-date deployment addresses, you can refer to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://chainlog.makerdao.com/\"\n  }, \"https://chainlog.makerdao.com/\"), \". Vulnerabilities that are exploitable in old versions of smart contracts and have since been mitigated (either deliberately or accidentally) in current versions (as demonstrated by the listing at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://chainlog.makerdao.com/\"\n  }, \"https://chainlog.makerdao.com/\"), \") are not in-scope for the bug bounty program. In the event that a vulnerability exists on the GitHub file but not on the most recently deployed contract, this may be due to a \\u201Cdark spell\\u201D to fix a vulnerability quietly. If your bug report is rejected as a known issue due to this, details will be provided to you. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"This means that in order to be eligible for a reward, the vulnerability needs to exist in both the GitHub file and the respective deployment contract.\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://chainlog.makerdao.com/\"\n  }, \"https://chainlog.makerdao.com/\"), \" is designed to be easy to run locally. Hence, taking down the application/website is considered out-of-scope for this website.\"), mdx(\"p\", null, \"All Medium and High level bug reports are not in-scope for the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://vote.makerdao.com/\"\n  }, \"https://vote.makerdao.com/\"), \" asset, Only Critical severity reports are in-scope for this asset.\"), mdx(\"p\", null, \"Vote comments are stored in a database accessed by \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://vote.makerdao.com/\"\n  }, \"https://vote.makerdao.com/\"), \". The critical functionality of the site (e.g., voting) is in-scope, but non-critical voter comments are out-of-scope.\"), mdx(\"p\", null, \"Assets of MakerDAO can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/makerdao\"\n  }, \"https://github.com/makerdao\"), \". If you discover a vulnerability with Critical impact on any deployed smart contract, you may submit it for consideration by the Immunefi Security core unit.\"), mdx(\"p\", null, \"Full documentation can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.makerdao.com/\"\n  }, \"https://docs.makerdao.com/\"), \" and annotations can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.makerdao.com/other-documentation/smart-contract-annotations\"\n  }, \"https://docs.makerdao.com/other-documentation/smart-contract-annotations\"), \". A comprehensive guide to the smart contracts can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.makerdao.com/maker-protocol-101\"\n  }, \"https://docs.makerdao.com/maker-protocol-101\"), \". \"), mdx(\"p\", null, \"Further information about the Governance Voting asset can be found at:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/makerdao/gov-polling-db\"\n  }, \"https://github.com/makerdao/gov-polling-db\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/makerdao/governance-portal-v2\"\n  }, \"https://github.com/makerdao/governance-portal-v2\"), \" \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"API documentation: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://vote.makerdao.com/api-docs\"\n  }, \"https://vote.makerdao.com/api-docs\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Gov polling db endpoint (can be used to view graphql schema)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"prod: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://polling-db-prod.makerdux.com/api/v1\"\n  }, \"https://polling-db-prod.makerdux.com/api/v1\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"staging: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://polling-db-staging.makerdux.com/api/v1\"\n  }, \"https://polling-db-staging.makerdux.com/api/v1\"))))), mdx(\"p\", null, \"The dai.js repo (\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/makerdao/dai.js/\"\n  }, \"https://github.com/makerdao/dai.js/\"), \" ) is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NOT\"), \" in scope even though it's a dependency of the Governance Portal (\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://vote.makerdao.com/\"\n  }, \"https://vote.makerdao.com/\"), \").\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Due to the regularly-updating smart contracts, only the GitHub links are provided. However, to find the most up-to-date deployment addresses, you can refer to <a href=\"http://chainlog.makerdao.com/\">https://chainlog.makerdao.com/</a>. Vulnerabilities that are exploitable in old versions of smart contracts and have since been mitigated (either deliberately or accidentally) in current versions (as demonstrated by the listing at <a href=\"https://chainlog.makerdao.com/\">https://chainlog.makerdao.com/</a>) are not in-scope for the bug bounty program. In the event that a vulnerability exists on the GitHub file but not on the most recently deployed contract, this may be due to a “dark spell” to fix a vulnerability quietly. If your bug report is rejected as a known issue due to this, details will be provided to you. <strong>This means that in order to be eligible for a reward, the vulnerability needs to exist in both the GitHub file and the respective deployment contract.</strong></p><p><a href=\"https://chainlog.makerdao.com/\">https://chainlog.makerdao.com/</a> is designed to be easy to run locally. Hence, taking down the application/website is considered out-of-scope for this website.</p><p>All Medium and High level bug reports are not in-scope for the <a href=\"https://vote.makerdao.com/\">https://vote.makerdao.com/</a> asset, Only Critical severity reports are in-scope for this asset.</p><p>Vote comments are stored in a database accessed by <a href=\"https://vote.makerdao.com/\">https://vote.makerdao.com/</a>. The critical functionality of the site (e.g., voting) is in-scope, but non-critical voter comments are out-of-scope.</p><p>Assets of MakerDAO can be found at <a href=\"https://github.com/makerdao\">https://github.com/makerdao</a>. If you discover a vulnerability with Critical impact on any deployed smart contract, you may submit it for consideration by the Immunefi Security core unit.</p><p>Full documentation can be found at <a href=\"https://docs.makerdao.com/\">https://docs.makerdao.com/</a> and annotations can be found at <a href=\"https://docs.makerdao.com/other-documentation/smart-contract-annotations\">https://docs.makerdao.com/other-documentation/smart-contract-annotations</a>. A comprehensive guide to the smart contracts can be found at <a href=\"https://docs.makerdao.com/maker-protocol-101\">https://docs.makerdao.com/maker-protocol-101</a>. </p><p>Further information about the Governance Voting asset can be found at:</p><ul><li><a href=\"https://github.com/makerdao/gov-polling-db\">https://github.com/makerdao/gov-polling-db</a></li><li><a href=\"https://github.com/makerdao/governance-portal-v2\">https://github.com/makerdao/governance-portal-v2</a> </li><li>API documentation: <a href=\"https://vote.makerdao.com/api-docs\">https://vote.makerdao.com/api-docs</a></li><li>Gov polling db endpoint (can be used to view graphql schema)<ul><li>prod: <a href=\"https://polling-db-prod.makerdux.com/api/v1\">https://polling-db-prod.makerdux.com/api/v1</a></li><li>staging: <a href=\"https://polling-db-staging.makerdux.com/api/v1\">https://polling-db-staging.makerdux.com/api/v1</a></li></ul></li></ul><p>The dai.js repo (<a href=\"https://github.com/makerdao/dai.js/\">https://github.com/makerdao/dai.js/</a> ) is <strong>NOT</strong> in scope even though it&#x27;s a dependency of the Governance Portal (<a href=\"https://vote.makerdao.com/\">https://vote.makerdao.com/</a>).</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "gear",
      "slug": "gear",
      "project": "Gear",
      "maxBounty": 25000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3gADW1x1UkGdcgCQwAwnSu/4a0c32a23978ba97b811797d8746f727/Gear_logo.jpeg",
      "launchDate": "2023-02-24T08:00-05:00",
      "updatedDate": "2023-02-24T15:44:06.907Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "blockchain_dlt",
          "level": "critical",
          "payout": "USD $25,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "high",
          "payout": "USD $10,000",
          "pocRequired": false
        },
        {
          "assetType": "blockchain_dlt",
          "level": "medium",
          "payout": "USD $2,000",
          "pocRequired": false
        },
        {
          "assetType": "blockchain_dlt",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": false
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "6WV1ExQ8ki27poQLuldFvb",
          "type": "blockchain_dlt",
          "url": "https://github.com/gear-tech/gear/tree/master/common",
          "description": "Common",
          "isPrimacyOfImpact": null
        },
        {
          "id": "kDE8rjYEXsR6GZ1rf8nj3",
          "type": "blockchain_dlt",
          "url": "https://github.com/gear-tech/gear/tree/master/core-backend/common",
          "description": "Core backend common",
          "isPrimacyOfImpact": null
        },
        {
          "id": "56fZe5btMU4LPdbQqNpyth",
          "type": "blockchain_dlt",
          "url": "https://github.com/gear-tech/gear/tree/master/core-backend/sandbox",
          "description": "Core backend sandbox",
          "isPrimacyOfImpact": null
        },
        {
          "id": "7sNxKSgXxGByg0OB1VSxvP",
          "type": "blockchain_dlt",
          "url": "https://github.com/gear-tech/gear/tree/master/core-processor",
          "description": "Core processor",
          "isPrimacyOfImpact": null
        },
        {
          "id": "3bKQhxZ5CLOXSxfwwyoSQh",
          "type": "blockchain_dlt",
          "url": "https://github.com/gear-tech/gear/tree/master/core",
          "description": "Core",
          "isPrimacyOfImpact": null
        },
        {
          "id": "5RnYG6RSPuktzC4xt2bFVg",
          "type": "blockchain_dlt",
          "url": "https://github.com/gear-tech/gear/tree/master/lazy-pages",
          "description": "Lazy pages",
          "isPrimacyOfImpact": null
        },
        {
          "id": "1OzIDbz9FrUcsqoQWlPMSW",
          "type": "blockchain_dlt",
          "url": "https://github.com/gear-tech/gear/tree/master/node",
          "description": "Node",
          "isPrimacyOfImpact": null
        },
        {
          "id": "17l1idjsEQn2VRuKrDTPQQ",
          "type": "blockchain_dlt",
          "url": "https://github.com/gear-tech/gear/tree/master/pallets",
          "description": "Pallets",
          "isPrimacyOfImpact": null
        },
        {
          "id": "L4tBRIhMuHTcCMoeQFr8m",
          "type": "blockchain_dlt",
          "url": "https://github.com/gear-tech/gear/tree/master/runtime-interface",
          "description": "Runtime interface",
          "isPrimacyOfImpact": null
        },
        {
          "id": "33IVettEYvN9uzN5gkjqVd",
          "type": "blockchain_dlt",
          "url": "https://github.com/gear-tech/gear/tree/master/runtime",
          "description": "Runtime",
          "isPrimacyOfImpact": null
        }
      ],
      "impacts": [
        {
          "id": "4QnV8dY1OXRHmbeUA4jKk4",
          "title": "Network not being able to confirm new transactions (Total network shutdown)",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "5OPbR5FPQsQFYoWDwtuUUc",
          "title": "Unintended permanent chain split requiring hard fork (Network partition requiring hard fork)",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "7KmTJb6PSFOdVO55Lx6qEn",
          "title": "Direct loss of funds",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "3ovkH7d2087jOAdYL4MALe",
          "title": "Permanent freezing of funds (fix requires hardfork)",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "7BM3VqZs3EjYNyYCSZiV8V",
          "title": "Unintended chain split (Network partition)",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "7zBUpZmKtjZODCv8MmIPja",
          "title": "Transient consensus failures",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "TVbYfumGsDSSTAgEBoXk3",
          "title": "RPC API crash",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "3Rt5gruY8PwPwiC6087E8h",
          "title": "Network unable to process internal message queue and requires maintenance mode to restart it",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "34EEzaKKJ0ulcKXtuDg4Cj",
          "title": "High compute consumption by validator/mining nodes when blocks are not full",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "1Zj5B9TTljhH2PUcHuK71K",
          "title": "Attacks against thin clients",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "2A8JG09CVYziNyvMQGEtcw",
          "title": "DoS of greater than 30% of validator or miner nodes and does not shut down the network",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "3FcWUvQf311DottqUt78TN",
          "title": "DoS of greater than 10% but less than 30% of validator or miner nodes and does not shut down the network",
          "type": "blockchain_dlt",
          "severity": "low"
        },
        {
          "id": "13mvYAzm6LkwUWYOOlKVru",
          "title": "Underpricing transaction fees relative to computation time",
          "type": "blockchain_dlt",
          "severity": "low"
        }
      ],
      "programOverview": "Gear protocol is an advanced WASM based smart contract platform capable of being deployed as a Kusama and Polkadot parachain, that enables developers to deploy their dApps in under 5 minutes in the easiest and most efficient way possible.\n\nFor more information about Gear, please visit [https://www.gear-tech.io/](https://www.gear-tech.io/). \n",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the  [Immunefi Vulnerability Severity Classification System V2.2.](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/) This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. \n\nAll Critical Blockchain/DLT bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nThe following vulnerabilities are not eligible for a reward:\n- [https://github.com/gear-tech/gear/issues ](https://github.com/gear-tech/gear/issues)\n- Issues that cannot be reproduced on networks configured and currently run by Gear, (i.e.: Gear Test Network V6, Vara Network). Severity of issues that point out problems with the code and can _theoretically_ affect the above network list will be considered individually.\n\nGear requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed are Passport and Utility Bill. The collection of this information will be done by the project team.\n\nPayouts are handled by the __Gear__ team directly and are denominated in USD. However, payouts are done in __USDC__.\n",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Issues that can be reproduced on networks configured and currently run by Gear, i.e.: \n1. Gear Test Network V6\n2. Vara Network\n\nSeverity of Issues that point out problems with the code and can __theoretically__ affect the above network list will be considered individually.\n\n__Smart Contracts and Blockchain__\n\n- Incorrect data supplied by third party oracles\n   - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n- Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n- Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n",
      "assetsBodyV2": "Gear protocol code can be found at [https://github.com/gear-tech/gear](https://github.com/gear-tech/gear) and [https://github.com/gear-tech/dlmalloc-rust](https://github.com/gear-tech/dlmalloc-rust). Gear Assets in scope table are specified to commit 22dfb9e43fe4fc608c747ca02e0e4ba7c5ccf123. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. \n\nFor more documentation, please refer to [https://github.com/gear-tech/gear/blob/master/README.md.  ](https://github.com/gear-tech/gear/blob/master/README.md)\n\nIf an impact can be caused to any other asset managed by Gear that isn’t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project.",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "L1"
        ],
        "projectType": [
          "Blockchain"
        ],
        "ecosystem": [
          "Polkadot"
        ],
        "programType": [
          "Blockchain/DLT"
        ],
        "language": null
      },
      "legacy": {
        "technologies": [
          "Blockchain/DLT"
        ],
        "blockchain_rewards": [
          {
            "level": "Critical",
            "payout": "USD $25,000"
          },
          {
            "level": "High",
            "payout": "USD $10,000"
          },
          {
            "level": "Medium",
            "payout": "USD $2,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "smartcontract_rewards": [],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Gear protocol is an advanced WASM based smart contract platform capable of being deployed as a Kusama and Polkadot parachain, that enables developers to deploy their dApps in under 5 minutes in the easiest and most efficient way possible.\"), mdx(\"p\", null, \"For more information about Gear, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.gear-tech.io/\"\n  }, \"https://www.gear-tech.io/\"), \". \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Gear protocol is an advanced WASM based smart contract platform capable of being deployed as a Kusama and Polkadot parachain, that enables developers to deploy their dApps in under 5 minutes in the easiest and most efficient way possible.</p><p>For more information about Gear, please visit <a href=\"https://www.gear-tech.io/\">https://www.gear-tech.io/</a>. </p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the  \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2.\"), \" This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. \"), mdx(\"p\", null, \"All Critical Blockchain/DLT bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\"), mdx(\"p\", null, \"The following vulnerabilities are not eligible for a reward:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/gear-tech/gear/issues\"\n  }, \"https://github.com/gear-tech/gear/issues \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Issues that cannot be reproduced on networks configured and currently run by Gear, (i.e.: Gear Test Network V6, Vara Network). Severity of issues that point out problems with the code and can \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"theoretically\"), \" affect the above network list will be considered individually.\")), mdx(\"p\", null, \"Gear requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed are Passport and Utility Bill. The collection of this information will be done by the project team.\"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Gear\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the  <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/\">Immunefi Vulnerability Severity Classification System V2.2.</a> This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. </p><p>All Critical Blockchain/DLT bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.</p><p>The following vulnerabilities are not eligible for a reward:</p><ul><li><a href=\"https://github.com/gear-tech/gear/issues\">https://github.com/gear-tech/gear/issues </a></li><li>Issues that cannot be reproduced on networks configured and currently run by Gear, (i.e.: Gear Test Network V6, Vara Network). Severity of issues that point out problems with the code and can <em>theoretically</em> affect the above network list will be considered individually.</li></ul><p>Gear requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed are Passport and Utility Bill. The collection of this information will be done by the project team.</p><p>Payouts are handled by the <strong>Gear</strong> team directly and are denominated in USD. However, payouts are done in <strong>USDC</strong>.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Issues that can be reproduced on networks configured and currently run by Gear, i.e.: \")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Gear Test Network V6\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Vara Network\")), mdx(\"p\", null, \"Severity of Issues that point out problems with the code and can \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"theoretically\"), \" affect the above network list will be considered individually.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li><li>Issues that can be reproduced on networks configured and currently run by Gear, i.e.: </li></ul><ol><li>Gear Test Network V6</li><li>Vara Network</li></ol><p>Severity of Issues that point out problems with the code and can <strong>theoretically</strong> affect the above network list will be considered individually.</p><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Gear protocol code can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/gear-tech/gear\"\n  }, \"https://github.com/gear-tech/gear\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/gear-tech/dlmalloc-rust\"\n  }, \"https://github.com/gear-tech/dlmalloc-rust\"), \". Gear Assets in scope table are specified to commit 22dfb9e43fe4fc608c747ca02e0e4ba7c5ccf123. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. \"), mdx(\"p\", null, \"For more documentation, please refer to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/gear-tech/gear/blob/master/README.md\"\n  }, \"https://github.com/gear-tech/gear/blob/master/README.md.  \")), mdx(\"p\", null, \"If an impact can be caused to any other asset managed by Gear that isn\\u2019t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Gear protocol code can be found at <a href=\"https://github.com/gear-tech/gear\">https://github.com/gear-tech/gear</a> and <a href=\"https://github.com/gear-tech/dlmalloc-rust\">https://github.com/gear-tech/dlmalloc-rust</a>. Gear Assets in scope table are specified to commit 22dfb9e43fe4fc608c747ca02e0e4ba7c5ccf123. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. </p><p>For more documentation, please refer to <a href=\"https://github.com/gear-tech/gear/blob/master/README.md\">https://github.com/gear-tech/gear/blob/master/README.md.  </a></p><p>If an impact can be caused to any other asset managed by Gear that isn’t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

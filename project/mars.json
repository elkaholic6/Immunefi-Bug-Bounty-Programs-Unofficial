{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "mars",
      "slug": "mars",
      "project": "Mars Protocol",
      "maxBounty": 100000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2Wm7fq3LoYdiWGNxdZiKgy/9a9dda7803cd5218754fd4a5c303e36d/mars_logo_colored.svg",
      "launchDate": "2023-01-13T10:00-05:00",
      "updatedDate": "2023-02-28T19:29:30.542Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "blockchain_dlt",
          "level": "critical",
          "payout": "USD $20,000 to USD $100,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "high",
          "payout": "USD $20,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $20,000 to $100,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $20,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "4CDQvAAmYIxqOdlBUc0j2D",
          "type": "blockchain_dlt",
          "url": "https://github.com/mars-protocol/hub/tree/main/x",
          "description": "Mars Hub Appchain"
        },
        {
          "id": "2DuCCe95UJfyW4JXyCz5dS",
          "type": "smart_contract",
          "url": "https://github.com/mars-protocol/periphery",
          "description": "Smart contracts that are deployed on Mars Hub"
        },
        {
          "id": "6AiHN8UaVw2HJtMrCSbRLi",
          "type": "smart_contract",
          "url": "https://github.com/mars-protocol/red-bank",
          "description": "Pertaining to Red Bank which are are deployed on the Osmosis blockchain"
        },
        {
          "id": "1sAZaeMFijfAmCv0I7rk5i",
          "type": "smart_contract",
          "url": "https://github.com/mars-protocol/liquidation-helpers",
          "description": "Pertaining to the successful liquidation of accounts within the Osmosis Mars Outpost"
        },
        {
          "id": "2LJ4I41HiPn10aSlKrHq5b",
          "type": "smart_contract",
          "url": "https://github.com/mars-protocol/v2-fields-of-mars",
          "description": "Smart contracts that pertaining to v2-fields-of-mars (a simplified version of Rover) which are deployed on the Osmosis blockchain"
        }
      ],
      "impacts": [
        {
          "id": "5fTOY75w98CrfZtRSRwBU9",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5GduJvZonnsAycZr4yuLxC",
          "title": "Direct theft of any user NFTs, whether at-rest or in-motion, other than unclaimed royalties",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2P5bN8lWcnnjnBsDMNbpDk",
          "title": "Unintended alteration of what the NFT represents (e.g. token URI, payload, artistic content)",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3nfNLkpLSXM9HsXISVFWyJ",
          "title": "Protocol insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2uaykljLuIuV8S3ajCoCFn",
          "title": "Oracle manipulation and flash loan attacks",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5ymPSLPZoTTSSX4DNhCfzV",
          "title": "Direct loss of funds",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "4yTMvVw31WfytuEpZd8Jc8",
          "title": "Theft of unclaimed royalties",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "4VEUpXlD5EXEuFqFWCWsVT",
          "title": "Freezing of funds",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "3CzmcGU3Hx3FqHARzjcigu",
          "title": "Freezing of NFTs (applicable for v2-fields-of-mars/rover only)",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "3bRiH098ZXBgbgYloaZ2st",
          "title": "Any governance voting result manipulation",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "6NupSzzVrVYKjZokObd39o",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3KQ9IaexOlLa9he4ZdSQJL",
          "title": "Network not being able to confirm new transactions (Total network shutdown)",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "pixwZztiEPbyt2IOIicFH",
          "title": "Permanent freezing of funds (fix requires hardfork)",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "65swkiKOXefgq5nOdbaJiq",
          "title": "Freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5eQkP5bqQlAeNXqJJmYt9m",
          "title": "Freezing of unclaimed royalties",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "1l6iYSjQ1BswMme1mrhC7M",
          "title": "Underpricing transaction fees relative to computation time",
          "type": "blockchain_dlt",
          "severity": "low"
        },
        {
          "id": "3Mkb76NsA0oMoTRuURh7Hl",
          "title": "Unintended consequences from Maximal-extractable value (MEV) exploration",
          "type": "smart_contract",
          "severity": "low"
        },
        {
          "id": "4C54C4AEY6G0F5J0uZLqdO",
          "title": "High compute consumption by validator/mining nodes",
          "type": "blockchain_dlt",
          "severity": "low"
        }
      ],
      "programOverview": "Mars Protocol consists of a money market, called Red Bank, and a generalized credit primitive called Rover. Mars Protocol utilizes a so-called hub and outpost topology, whereby its base, Mars Hub is the  command center for Mars  outposts. Each outpost consists of an instance of Red Bank and Rover and the first of many outposts will be the Osmosis chain.\n\nBuilt for the Cosmos ecosystem, Mars Protocol is built using the Cosmos SDK. Mars Hub will serve as the homebase for all of Marsâ€™ outposts throughout the Cosmos galaxy. Each outpost consists of an instance of Red Bank and Rover which are deployed onto independent chains. Outposts are bound together by Mars Hub which is responsible for governance and treasury including protocol revenue distribution.\n\nA new MARS token will be minted and tracked on Mars Hub and will circulate freely throughout the Cosmos ecosystem. \n\nFor more information about the Mars Protocol, please visit [whitepaper.marsprotocol.io](http://whitepaper.marsprotocol.io).  \n",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [ImmuneFi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. \n\nAll bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nRewards for critical blockchain/DLT and critical smart contract vulnerabilities are further capped at 10% of the economic damage potentially caused. However, there is a minimum reward of __USD 20 000__ and a maximum reward of __USD 100 000__. \n\nAll issues highlighted in the following audit reports are considered out of scope of the program: \n- [Audits reports for Mars Hub, Periphery contracts and the Osmosis outposts](https://github.com/mars-protocol/mars-audits)\n\nPayouts are handled by the __Mars Protocol__ contributors and are denominated in USD. However, payouts are denominated in __USDC__.\n",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Attacks found in an underlying Cosmos SDK standard module dependency (vulnerabilities found in code that is not Mars Protocols code, but Mars Protocol has a dependency on through Cosmos SDK)\n\n__Smart Contracts and Blockchain__\n\n- Incorrect data supplied by third party oracles\n   - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n- Centralization risks\n- Lack of funding for contracts that require topping up from an external address e.g.contracts pertaining to incentives e.t.c. (where applicable)\n- DoS related attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n- Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n",
      "assetsBodyV2": "Assets in scope are as follows: \n  - Mars Hub testnet\n  - Mars Hub mainnet\n  - Periphery contracts on Mars Hub testnet and mainnet\n  - Osmosis Mars Outpost: â€˜red-bankâ€™, â€˜liquidation-helpersâ€™, and â€˜v2-fields-of-marsâ€™ repositories (only)\n\nThe codebase associated with Mars Hubâ€™s testnet and mainnet can be found at [https://github.com/mars-protocol/hub](https://github.com/mars-protocol/hub/tree/main/x).  The smart contracts that are deployed on Mars Hub testnet and mainnet (can be found at [https://github.com/mars-protocol/periphery](https://github.com/mars-protocol/periphery). \nRed Bank related smart contracts deployed onto the Osmosis blockchain compose one part of the so-called Osmosis Mars Outpost, can be found at [https://github.com/mars-protocol/red-bank](https://github.com/mars-protocol/red-bank), [https://github.com/mars-protocol/liquidation-helpers](https://github.com/mars-protocol/liquidation-helpers), and [https://github.com/mars-protocol/v2-fields-of-mars](https://github.com/mars-protocol/v2-fields-of-mars). \n\nIf an impact can be caused to any other asset managed by Mars Hub or its Osmosis outpost,that isnâ€™t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for consideration by the project.  ",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "L1"
        ],
        "projectType": [
          "Blockchain"
        ],
        "ecosystem": [
          "Terra"
        ],
        "programType": [
          "Blockchain/DLT",
          "Smart Contract"
        ],
        "language": [
          "JavaScript",
          "Rust"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Blockchain/DLT"
        ],
        "blockchain_rewards": [
          {
            "level": "Critical",
            "payout": "USD $20,000 to USD $100,000"
          },
          {
            "level": "High",
            "payout": "USD $20,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $20,000 to $100,000"
          },
          {
            "level": "High",
            "payout": "USD $20,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Mars Protocol consists of a money market, called Red Bank, and a generalized credit primitive called Rover. Mars Protocol utilizes a so-called hub and outpost topology, whereby its base, Mars Hub is the  command center for Mars  outposts. Each outpost consists of an instance of Red Bank and Rover and the first of many outposts will be the Osmosis chain.\"), mdx(\"p\", null, \"Built for the Cosmos ecosystem, Mars Protocol is built using the Cosmos SDK. Mars Hub will serve as the homebase for all of Mars\\u2019 outposts throughout the Cosmos galaxy. Each outpost consists of an instance of Red Bank and Rover which are deployed onto independent chains. Outposts are bound together by Mars Hub which is responsible for governance and treasury including protocol revenue distribution.\"), mdx(\"p\", null, \"A new MARS token will be minted and tracked on Mars Hub and will circulate freely throughout the Cosmos ecosystem. \"), mdx(\"p\", null, \"For more information about the Mars Protocol, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://whitepaper.marsprotocol.io\"\n  }, \"whitepaper.marsprotocol.io\"), \".  \"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Mars Protocol consists of a money market, called Red Bank, and a generalized credit primitive called Rover. Mars Protocol utilizes a so-called hub and outpost topology, whereby its base, Mars Hub is the  command center for Mars  outposts. Each outpost consists of an instance of Red Bank and Rover and the first of many outposts will be the Osmosis chain.</p><p>Built for the Cosmos ecosystem, Mars Protocol is built using the Cosmos SDK. Mars Hub will serve as the homebase for all of Marsâ€™ outposts throughout the Cosmos galaxy. Each outpost consists of an instance of Red Bank and Rover which are deployed onto independent chains. Outposts are bound together by Mars Hub which is responsible for governance and treasury including protocol revenue distribution.</p><p>A new MARS token will be minted and tracked on Mars Hub and will circulate freely throughout the Cosmos ecosystem. </p><p>For more information about the Mars Protocol, please visit <a href=\"http://whitepaper.marsprotocol.io\">whitepaper.marsprotocol.io</a>.  </p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered in-scope, even if they affect something in the assets in scope table.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/\"\n  }, \"ImmuneFi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. \"), mdx(\"p\", null, \"All bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\"), mdx(\"p\", null, \"Rewards for critical blockchain/DLT and critical smart contract vulnerabilities are further capped at 10% of the economic damage potentially caused. However, there is a minimum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 20 000\"), \" and a maximum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 100 000\"), \". \"), mdx(\"p\", null, \"All issues highlighted in the following audit reports are considered out of scope of the program: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mars-protocol/mars-audits\"\n  }, \"Audits reports for Mars Hub, Periphery contracts and the Osmosis outposts\"))), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Mars Protocol\"), \" contributors and are denominated in USD. However, payouts are denominated in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/\">ImmuneFi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. </p><p>All bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.</p><p>Rewards for critical blockchain/DLT and critical smart contract vulnerabilities are further capped at 10% of the economic damage potentially caused. However, there is a minimum reward of <strong>USD 20 000</strong> and a maximum reward of <strong>USD 100 000</strong>. </p><p>All issues highlighted in the following audit reports are considered out of scope of the program: </p><ul><li><a href=\"https://github.com/mars-protocol/mars-audits\">Audits reports for Mars Hub, Periphery contracts and the Osmosis outposts</a></li></ul><p>Payouts are handled by the <strong>Mars Protocol</strong> contributors and are denominated in USD. However, payouts are denominated in <strong>USDC</strong>.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks found in an underlying Cosmos SDK standard module dependency (vulnerabilities found in code that is not Mars Protocols code, but Mars Protocol has a dependency on through Cosmos SDK)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of funding for contracts that require topping up from an external address e.g.contracts pertaining to incentives e.t.c. (where applicable)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DoS related attacks\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li><li>Attacks found in an underlying Cosmos SDK standard module dependency (vulnerabilities found in code that is not Mars Protocols code, but Mars Protocol has a dependency on through Cosmos SDK)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li><li>Lack of funding for contracts that require topping up from an external address e.g.contracts pertaining to incentives e.t.c. (where applicable)</li><li>DoS related attacks</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Assets in scope are as follows: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mars Hub testnet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mars Hub mainnet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Periphery contracts on Mars Hub testnet and mainnet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Osmosis Mars Outpost: \\u2018red-bank\\u2019, \\u2018liquidation-helpers\\u2019, and \\u2018v2-fields-of-mars\\u2019 repositories (only)\")), mdx(\"p\", null, \"The codebase associated with Mars Hub\\u2019s testnet and mainnet can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/mars-protocol/hub/tree/main/x\"\n  }, \"https://github.com/mars-protocol/hub\"), \".  The smart contracts that are deployed on Mars Hub testnet and mainnet (can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/mars-protocol/periphery\"\n  }, \"https://github.com/mars-protocol/periphery\"), \".\\nRed Bank related smart contracts deployed onto the Osmosis blockchain compose one part of the so-called Osmosis Mars Outpost, can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/mars-protocol/red-bank\"\n  }, \"https://github.com/mars-protocol/red-bank\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/mars-protocol/liquidation-helpers\"\n  }, \"https://github.com/mars-protocol/liquidation-helpers\"), \", and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/mars-protocol/v2-fields-of-mars\"\n  }, \"https://github.com/mars-protocol/v2-fields-of-mars\"), \". \"), mdx(\"p\", null, \"If an impact can be caused to any other asset managed by Mars Hub or its Osmosis outpost,that isn\\u2019t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for consideration by the project.  \"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Assets in scope are as follows: </p><ul><li>Mars Hub testnet</li><li>Mars Hub mainnet</li><li>Periphery contracts on Mars Hub testnet and mainnet</li><li>Osmosis Mars Outpost: â€˜red-bankâ€™, â€˜liquidation-helpersâ€™, and â€˜v2-fields-of-marsâ€™ repositories (only)</li></ul><p>The codebase associated with Mars Hubâ€™s testnet and mainnet can be found at <a href=\"https://github.com/mars-protocol/hub/tree/main/x\">https://github.com/mars-protocol/hub</a>.  The smart contracts that are deployed on Mars Hub testnet and mainnet (can be found at <a href=\"https://github.com/mars-protocol/periphery\">https://github.com/mars-protocol/periphery</a>.\nRed Bank related smart contracts deployed onto the Osmosis blockchain compose one part of the so-called Osmosis Mars Outpost, can be found at <a href=\"https://github.com/mars-protocol/red-bank\">https://github.com/mars-protocol/red-bank</a>, <a href=\"https://github.com/mars-protocol/liquidation-helpers\">https://github.com/mars-protocol/liquidation-helpers</a>, and <a href=\"https://github.com/mars-protocol/v2-fields-of-mars\">https://github.com/mars-protocol/v2-fields-of-mars</a>. </p><p>If an impact can be caused to any other asset managed by Mars Hub or its Osmosis outpost,that isnâ€™t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for consideration by the project.  </p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

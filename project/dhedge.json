{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "dhedge",
      "slug": "dhedge",
      "project": "dHEDGE",
      "maxBounty": 50000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7jfCx6b5D8nfAMemuBnaOW/25d35d4095909785d015401d8cff263f/dHEDGE_logo.jpeg",
      "launchDate": "2021-11-09T06:00-06:00",
      "updatedDate": "2023-04-21T12:32:50.755Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $50,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $10,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $2,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": false
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "2tFRPfGbfDVpKv38yIIlIQ",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x206CbDa3381e7afdF448621b90f549f89555A588#code",
          "description": "Governance",
          "isPrimacyOfImpact": null
        },
        {
          "id": "753yMsyh7HWCL3tQUBEBWv",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xfdc7b8bFe0DD3513Cc669bB8d601Cb83e2F69cB0#code",
          "description": "Pool Factory Proxy",
          "isPrimacyOfImpact": null
        },
        {
          "id": "6A6o3EAzD0fHHmOxgq7me8",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x5b5e10c98c19bd568facf05052d1136bb4ecef61#code",
          "description": "Pool Factory",
          "isPrimacyOfImpact": null
        },
        {
          "id": "4WG4DAYoR6QZVEiGygvQuJ",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xE9F6C94567906947d781C059e64c3C1DA95FdBd7#code",
          "description": "Pool Logic",
          "isPrimacyOfImpact": null
        },
        {
          "id": "41b740lX2qr42qvxJZMldD",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x3dB16dBf76b5edFF977A0b2F5e6f412238748B7b#code",
          "description": "Pool Manager Logic",
          "isPrimacyOfImpact": null
        },
        {
          "id": "4hhNbJ2vSapzj33KWR0OQN",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x53d5b36f154a22ef89ff2dfdafa67afe090b9d6e#code",
          "description": "Asset Handler",
          "isPrimacyOfImpact": null
        },
        {
          "id": "7iAZby4MOmmsyNoSNDICpY",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x53d5b36f154a22ef89ff2dfdafa67afe090b9d6e#code",
          "description": "ERC20 Guard",
          "isPrimacyOfImpact": null
        },
        {
          "id": "45zN0l3msktE8XM4EXo0H2",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xF0cF578F86e4693b204c6Fa985Cb185B50ED36E0#code",
          "description": "Aave Lending Pool Asset Guard",
          "isPrimacyOfImpact": null
        },
        {
          "id": "558aU7xkb4cF7IFaZYXi5u",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xC6CF4B058c51cf474c5984180e693AF438222363#code",
          "description": "Balancer V2 Guard",
          "isPrimacyOfImpact": null
        },
        {
          "id": "5vXIyMKmbQGrmxUDMwYjPw",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x99A53914e8106cC092DbeD36E8D09F2a306B811E#code",
          "description": "dUSD aggregator",
          "isPrimacyOfImpact": null
        },
        {
          "id": "jPRMf0NgqnJqRJQakXhdl",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x65A1C0bE1151aEAcddc698e5dAcC4ed3c566744F#code",
          "description": "ERC20 Guard",
          "isPrimacyOfImpact": null
        }
      ],
      "impacts": [
        {
          "id": "3wTICVDqb1m8zTnKRvzHAm",
          "title": "Loss of user funds staked (principal) by freezing or theft",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3lxeBsSue0wY97YrKlbmMs",
          "title": "Loss of governance funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1WtQoahd5mJAXwc2704jbJ",
          "title": "Any governance voting result manipulation",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "eH4BPDpgjdgoKs6bjJkQy",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5VG3rMPrQuBJf7PuKdc7z3",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3XwWtVHzcuT66e0gAbfGdC",
          "title": "Miner-extractable value (MEV)",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5o6pIfGUt7LbnckTmV7JaA",
          "title": "Protocol Insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "182em2DUivOhFm1fWIDl4l",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "3r9Ytw7grasTZiYB0fzqU0",
          "title": "Temporary freezing of funds for any amount of time",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "2jFqL2f59tdEq1a5WXO9Lp",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "MOgh0BjEWNF4GmLy17DWY",
          "title": "Unable to call smart contract",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "6Y4tFgvdwMGiFOBin0Xjwp",
          "title": "Smart contract gas drainage",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "7LKM3Ma1Vg2nDchqP2qoHT",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "Okqpo0yyPVQrcURE7Cm79",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5FF7fZLoVw5wwQBSEfJi09",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "6rM3GxeQUCmKcKdPAyJ4In",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5r75M9rZJhpdsOT2hqst3T",
          "title": "Temporary freezing of funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "9KGi2t8FcIcQfr85EIrgc",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5w3zx3eZ0lQP3TXMXVtEQg",
          "title": "Smart contract fails to deliver promised returns, but doesn’t lose value",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "dHEDGE is a one-stop location for managing investment activities on the blockchain where you can put your capital to work in different strategies based on a transparent track record. Multi-chain, non-custodial, decentralized asset management integrated with multiple protocols; allowing for trades, providing liquidity and yield farming.\n\nFor more information about dHEDGE, please visit [https://app.dhedge.org/](https://app.dhedge.org/).   \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Loss of user funds by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of time\n  - Deposit and withdrawal bugs\n  - Protocol integration bugs\n",
      "prioritizedVulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
      "rewardsBody": "![Screenshot 2023-03-22 at 2.14.14 PM](//images.ctfassets.net/t3wqy70tc3bv/7phFwTw1I2KTlieqdYifvw/cf2d7363fa764395eb54203899318794/Screenshot_2023-03-22_at_2.14.14_PM.png)\n\nRewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nThere is one exception for this bug bounty program, which overrides one vulnerability in the vulnerability scale, in the above Immunefi Vulnerability Severity Classification System:\n  - The vulnerability of: “Token holders temporarily unable to transfer holdings” will be classified under this bug bounty program as a medium vulnerability. \n\nVulnerabilities marked as “Acknowledged” in the [https://www.certik.org/projects/dhedge](https://www.certik.org/projects/dhedge) are not eligible for a reward.\n\ndHedge vaults are trust minimized, meaning that the vault manager may not follow a set strategy, or may make bad trades, including trades with poor slippage. A complete loss of funds is possible via poor risk-management strategies by the manager. These types of losses are not in scope for the bounty.\n\nPayouts are handled by the __dHEDGE__ team directly and are denominated in USD. However, payouts are done in __USDC__.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, DAO)\n  - Attacks by privileged manager accounts which relate to poor trading practices or slippage. \n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "All smart contracts of dHEDGE can be found at [https://github.com/dhedge/V2-Public](https://github.com/dhedge/V2-Public) and [https://github.com/dhedge/V2-Public/tree/production](https://github.com/dhedge/V2-Public/tree/production).  dHEDGE deployed contracts that are currently linked to the Pool Factory are considered in scope, including other chains such as Optimism.\n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Asset Management"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "Polygon"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $50,000"
          },
          {
            "level": "High",
            "payout": "USD $10,000"
          },
          {
            "level": "Medium",
            "payout": "USD $2,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"dHEDGE is a one-stop location for managing investment activities on the blockchain where you can put your capital to work in different strategies based on a transparent track record. Multi-chain, non-custodial, decentralized asset management integrated with multiple protocols; allowing for trades, providing liquidity and yield farming.\"), mdx(\"p\", null, \"For more information about dHEDGE, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://app.dhedge.org/\"\n  }, \"https://app.dhedge.org/\"), \".   \"), mdx(\"p\", null, \"This bug bounty program is focused on their smart contracts and is focused on preventing:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of user funds by freezing or theft\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of governance funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Freezing of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Temporary freezing of funds for any amount of time\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Deposit and withdrawal bugs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Protocol integration bugs\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>dHEDGE is a one-stop location for managing investment activities on the blockchain where you can put your capital to work in different strategies based on a transparent track record. Multi-chain, non-custodial, decentralized asset management integrated with multiple protocols; allowing for trades, providing liquidity and yield farming.</p><p>For more information about dHEDGE, please visit <a href=\"https://app.dhedge.org/\">https://app.dhedge.org/</a>.   </p><p>This bug bounty program is focused on their smart contracts and is focused on preventing:</p><ul><li>Loss of user funds by freezing or theft</li><li>Loss of governance funds</li><li>Theft of unclaimed yield</li><li>Freezing of unclaimed yield</li><li>Temporary freezing of funds for any amount of time</li><li>Deposit and withdrawal bugs</li><li>Protocol integration bugs</li></ul>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are especially interested in receiving and rewarding vulnerabilities of the following types:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Re-entrancy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Logic errors\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including user authentication errors\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Solidity/EVM details not considered\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including integer over-/under-flow\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including rounding errors\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including unhandled exceptions\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusting trust/dependency vulnerabilities\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including composability vulnerabilities\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Oracle failure/manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Novel governance attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Economic/financial attacks\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Congestion and scalability\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including running out of gas\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including block stuffing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including susceptibility to frontrunning\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Consensus failures\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cryptography problems\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Signature malleability\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to replay attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak randomness\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak encryption\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to block timestamp manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing access controls / unprotected internal or debugging interfaces\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>We are especially interested in receiving and rewarding vulnerabilities of the following types:</p><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Re-entrancy</li><li>Logic errors<ul><li>including user authentication errors</li></ul></li><li>Solidity/EVM details not considered<ul><li>including integer over-/under-flow</li><li>including rounding errors</li><li>including unhandled exceptions</li></ul></li><li>Trusting trust/dependency vulnerabilities<ul><li>including composability vulnerabilities</li></ul></li><li>Oracle failure/manipulation</li><li>Novel governance attacks</li><li>Economic/financial attacks<ul><li>including flash loan attacks</li></ul></li><li>Congestion and scalability<ul><li>including running out of gas</li><li>including block stuffing</li><li>including susceptibility to frontrunning</li></ul></li><li>Consensus failures</li><li>Cryptography problems<ul><li>Signature malleability</li><li>Susceptibility to replay attacks</li><li>Weak randomness</li><li>Weak encryption</li></ul></li><li>Susceptibility to block timestamp manipulation</li><li>Missing access controls / unprotected internal or debugging interfaces</li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"//images.ctfassets.net/t3wqy70tc3bv/7phFwTw1I2KTlieqdYifvw/cf2d7363fa764395eb54203899318794/Screenshot_2023-03-22_at_2.14.14_PM.png\",\n    \"alt\": \"Screenshot 2023-03-22 at 2.14.14 PM\"\n  })), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\"), mdx(\"p\", null, \"There is one exception for this bug bounty program, which overrides one vulnerability in the vulnerability scale, in the above Immunefi Vulnerability Severity Classification System:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The vulnerability of: \\u201CToken holders temporarily unable to transfer holdings\\u201D will be classified under this bug bounty program as a medium vulnerability. \")), mdx(\"p\", null, \"Vulnerabilities marked as \\u201CAcknowledged\\u201D in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.certik.org/projects/dhedge\"\n  }, \"https://www.certik.org/projects/dhedge\"), \" are not eligible for a reward.\"), mdx(\"p\", null, \"dHedge vaults are trust minimized, meaning that the vault manager may not follow a set strategy, or may make bad trades, including trades with poor slippage. A complete loss of funds is possible via poor risk-management strategies by the manager. These types of losses are not in scope for the bounty.\"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dHEDGE\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p><img src=\"//images.ctfassets.net/t3wqy70tc3bv/7phFwTw1I2KTlieqdYifvw/cf2d7363fa764395eb54203899318794/Screenshot_2023-03-22_at_2.14.14_PM.png\" alt=\"Screenshot 2023-03-22 at 2.14.14 PM\"/></p><p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.</p><p>There is one exception for this bug bounty program, which overrides one vulnerability in the vulnerability scale, in the above Immunefi Vulnerability Severity Classification System:</p><ul><li>The vulnerability of: “Token holders temporarily unable to transfer holdings” will be classified under this bug bounty program as a medium vulnerability. </li></ul><p>Vulnerabilities marked as “Acknowledged” in the <a href=\"https://www.certik.org/projects/dhedge\">https://www.certik.org/projects/dhedge</a> are not eligible for a reward.</p><p>dHedge vaults are trust minimized, meaning that the vault manager may not follow a set strategy, or may make bad trades, including trades with poor slippage. A complete loss of funds is possible via poor risk-management strategies by the manager. These types of losses are not in scope for the bounty.</p><p>Payouts are handled by the <strong>dHEDGE</strong> team directly and are denominated in USD. However, payouts are done in <strong>USDC</strong>.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, DAO)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks by privileged manager accounts which relate to poor trading practices or slippage. \")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, DAO)</li><li>Attacks by privileged manager accounts which relate to poor trading practices or slippage. </li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of dHEDGE can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/dhedge/V2-Public\"\n  }, \"https://github.com/dhedge/V2-Public\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/dhedge/V2-Public/tree/production\"\n  }, \"https://github.com/dhedge/V2-Public/tree/production\"), \".  dHEDGE deployed contracts that are currently linked to the Pool Factory are considered in scope, including other chains such as Optimism.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of dHEDGE can be found at <a href=\"https://github.com/dhedge/V2-Public\">https://github.com/dhedge/V2-Public</a> and <a href=\"https://github.com/dhedge/V2-Public/tree/production\">https://github.com/dhedge/V2-Public/tree/production</a>.  dHEDGE deployed contracts that are currently linked to the Pool Factory are considered in scope, including other chains such as Optimism.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

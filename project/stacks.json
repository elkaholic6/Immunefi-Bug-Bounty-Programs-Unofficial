{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "stacks",
      "slug": "stacks",
      "project": "Stacks",
      "maxBounty": 1000000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5fyZtgehW9ECXFKLpiDvq6/7228d788a3497d71277099985eb83987/Stacks.png",
      "launchDate": "2022-03-31T13:30-06:00",
      "updatedDate": "2023-08-23T17:49:16.987Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "blockchain_dlt",
          "level": "critical",
          "payout": "Up to USD $1,000,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "high",
          "payout": "USD $50,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "medium",
          "payout": "USD $10,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to USD $1,000,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $50,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $10,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "21yykxBnBDpN6Q8HuV5TV2",
          "type": "blockchain_dlt",
          "url": "https://github.com/stacks-network/stacks-blockchain/tree/master/src",
          "description": "Main Repository"
        },
        {
          "id": "4qy0Jzx2PPAQgPhuJdDk54",
          "type": "smart_contract",
          "url": "https://github.com/stacks-network/stacks-blockchain/blob/master/src/chainstate/stacks/boot/bns.clar",
          "description": "BNS contract"
        },
        {
          "id": "cOg6GDCBuTBMg879ePnHa",
          "type": "smart_contract",
          "url": "https://github.com/stacks-network/stacks-blockchain/blob/master/src/chainstate/stacks/boot/pox-3.clar",
          "description": "POX contract"
        },
        {
          "id": "bUooaKIGszVwaxPSCOa1g",
          "type": "smart_contract",
          "url": "https://github.com/stacks-network/stacks-blockchain/blob/master/src/chainstate/stacks/boot/lockup.clar",
          "description": "Lockup contract"
        },
        {
          "id": "3BygY3ZGnYEdOHHW9dXU1S",
          "type": "smart_contract",
          "url": "https://github.com/stacks-network/stacks-blockchain/blob/master/src/chainstate/stacks/boot/costs.clar",
          "description": "Costs contract"
        },
        {
          "id": "4b6Wq0UNsj6BzL3858905b",
          "type": "smart_contract",
          "url": "https://github.com/stacks-network/stacks-blockchain/blob/master/src/chainstate/stacks/boot/cost-voting.clar",
          "description": "Cost voting contract"
        },
        {
          "id": "3Zb6KyRQDEQZCEIgo0hWTA",
          "type": "blockchain_dlt",
          "url": "https://github.com/stacks-network/stacks-blockchain/tree/master/testnet/stacks-node/src",
          "description": "Node implementation"
        }
      ],
      "impacts": [
        {
          "id": "6ww2SIETgtRlfAusxtT9pw",
          "title": "Network not being able to confirm new transactions (Total network shutdown)",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "2pae20SR8jsQlMBuKcQ8b3",
          "title": "Trigger a deep fork of 10 or more blocks without spending the requisite Bitcoin",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "7fyPTOuRTvSxrQ2CEjR0EN",
          "title": "Chain split due to different nodes processing the same block or transaction with different results",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "6A2sNBFlOIz8cisVHOYySk",
          "title": "Direct loss of funds other than permanent or temporary freezing",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "39zjzhmpNoqamVWjw1s8P8",
          "title": "Invalid transaction confirmed (such as with an incorrect nonce)",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "zqAsEQpm1faUYLD9Xnl1i",
          "title": "Loss of user funds by permanent freezing or theft",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2EEO8AVY79s1r1HycLggBI",
          "title": "Loss of governance funds (limited to `.cost-vote`)",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "35SraUnv2KE2pnB76A40xB",
          "title": "Governance vote manipulation",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5dgzF56MepSIa1iQuw8BZL",
          "title": "Unintended chain split (Network partition)",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "1pVzsqK9TyBTRM1ZGcFvJw",
          "title": "Transient consensus failures",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "3j8jHwQdeyeHzCmvXIaSgf",
          "title": "Remotely-exploitable memory or disk access, restricted to the Stacks Blockchain RPC/P2P ports",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "7EPjKvgWnSVJw96WzVCLe4",
          "title": "Remotely-exploitable denial of service in a node",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "62MKeJGOdNrDU2OxtbdjVD",
          "title": "Theft of unclaimed reward",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "40ZT59bQN76XQNgnVRPlAi",
          "title": "Permanent freezing of unclaimed reward",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "5WYpAM6O49wI2f5WZeX85G",
          "title": "DoS of greater than 30% of miners and does not shut down the network",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "2Rm44uy0I4YzaElQsrsQ3V",
          "title": "Block stuffing without fund transfers blocked",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "4etup9g5rNrQPpQDAx4AdJ",
          "title": "Block stuffing the Stacks chain such that smart contract calls can be blocked, but without paying the requisite higher transaction fees",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "7Dl6dDgs8RAVKv5jjfw9Ih",
          "title": "DoS of greater than 10% but less than 30% of miners and does not shut down the network",
          "type": "blockchain_dlt",
          "severity": "low"
        },
        {
          "id": "6d2mlEyJ9dPrGwUNdn8VCb",
          "title": "Smart contract fails to deliver promised returns, but doesn’t lose value",
          "type": "smart_contract",
          "severity": "low"
        },
        {
          "id": "3NgiRs9GGennGUxOsvZ2Yr",
          "title": "A smart contract has certain operations underpriced or overpriced in ways that we don’t know about (i.e. that we don’t have open issues for)",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "Stacks is a Bitcoin layer for smart contracts; it enables smart contracts and decentralized applications to use Bitcoin as an asset and settle transactions on the Bitcoin blockchain. In the upcoming Nakamoto release of Stacks, Stacks will be secured by the entire hash power of Bitcoin, giving it Bitcoin finality.\n\nFor more information about Stacks, please visit [https://stacks.org/](https://stacks.org/) and [https://www.stacks.co/](https://www.stacks.co/). \n\nWe at the Stacks Foundation maintain essential components of the Stacks blockchain infrastructure. Our security team prioritizes the following attack vectors:\n\n  - Theft of funds\n  - Permanent freezing of funds\n  - Total network shutdown or denial-of-service vectors\n  - Chain split or deep fork vectors\n  - Invalid transactions processing successfully or confirming\n  - Consensus failures\n  - Remotely exploitable weaknesses (as triggered through standard Stacks     - RPC and P2P ports only)\n  - (In smart contracts) Vote manipulation\n  - (In smart contracts) Block stuffing attacks\n  - (In smart contracts) Theft or loss of unclaimed rewards\n",
      "prioritizedVulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Blockchain__\n\n__Critical__\n  - Network not being able to confirm new transactions (Total network shutdown)\n  - Trigger a deep fork without spending the requisite BTC.\n  - Direct loss of funds other than permanent or temporary freezing\n  - Chain split due to different nodes processing the same block or transaction with different results\n  - Invalid transaction confirmed (such as with an incorrect nonce)\n\n__High__\n  - Unintended chain split (Network partition)\n  - Transient consensus failures\n  - Remotely-exploitable denial of service in a node\n  - Remotely-exploitable memory or disk access, restricted to the Stacks Blockchain RPC/P2P ports\n\n__Medium__\n  - DoS of greater than 30% of miners and does not shut down the network\n\n__Low__\n  - DoS of greater than 10% but less than 30% of miners and does not shut down the network\n  - Underpricing transaction fees relative to computation time\n\n__Smart Contracts__\n\n__Critical__\n  - Loss of user funds by permanent freezing or theft\n  - Loss of governance funds (limited to `.cost-vote`)\n  - Governance vote manipulation\n\n__High__\n  - Theft of unclaimed reward\n  - Permanent freezing of unclaimed reward\n\n__Medium__\n  - Block stuffing without fund transfers blocked\n  - Block stuffing the Stacks chain such that smart contract calls can be blocked, but without paying the requisite higher transaction fees\n\n__Low__\n  - Smart contract fails to deliver promised returns, but doesn’t lose value\n  - A smart contract has certain operations underpriced or overpriced in ways that we don’t know about (i.e. that we don’t have open issues for).",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2) v2. This is a simplified 5-level scale, with separate scales for each category, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. If there is any discrepancy with the classification in the Impacts in Scope section, the classification in the Impacts in Scope section will hold true.\n\nPlease note that Critical finding bounties are capped at 10% of the damage resulting from the finding. This mostly takes into account technical and financial damage but also includes the “human” impact, including reputational risk. We will guarantee a minimum payout of $50,000 USD for all valid Critical findings.\n\n__We agree to:__\n\n  - Respond meaningfully to all reported issues in a timely manner.\n  - Not pursue legal action against or “counter-hack” any researchers acting in good faith and abiding by this program’s rules.\n  - Consider theoretical attacks and findings without proof-of-concept code as long as technically meaningful, evidence-based arguments are provided.\n\n__You must:__\n\n  - Undergo full KYC. We are based in the United States and abide by all relevant law, including OFAC controls and sanctions.\n  - Not be based or test from an OFAC-sanctioned country or region or (be a sanctioned individual or organization) as defined here: [https://ofac.treasury.gov/sanctions-programs-and-country-information](https://ofac.treasury.gov/sanctions-programs-and-country-information)\n  - Report all bugs using this template. All fields are required unless otherwise marked. Fields with a star (*) must be encrypted with the security@stacks.org GPG key, fingerprint 8A8B 3C3B 803A 0603 8FB5  3F69 357C 80AB 0885 87A0.\n    - Executive summary of issue: \n    - Finding details: \n    - Repository, file, and line of code where finding is found:  \n    - Steps to replicate*: \n    - Proof-of-concept exploitation code*: \n    - Screenshots or video of finding being exploited using the PoC you have provided*:  \n    - Impact of finding (short term): \n    - Impact of finding (long term): \n    - Mitigation suggestions (short term):\n    - Mitigation suggestions (long term): \n    - (Optional) Suggested patch:\n    - (Optional) Any useful links or resources:\n    - (Optional) Do you want a shout-out on our Security Wall of Fame? \n    - (Optional, if approved) Do you want a cybersecurity-themed NFT sent to your Stacks wallet?\n  - Use a private testnet. Testing on mainnet or public testnets is forbidden.\n\nPayouts are handled by the __Stacks Foundation team__ directly and are denominated in __USD__. However, payments will be made in the __USD__ equivalent in the __Stacks__ token (STX).\n",
      "outOfScopeAndRules": "__The following vulnerabilities are excluded from the rewards for this bug bounty program:__\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - 3rd party services (AWS, Datadog, etc)\n\n__The following activities and findings are explicitly out of scope of this bug bounty program:__\n\n  - Any phishing, social engineering, or related attacks against the Stacks ecosystem or any members or customers thereof.\n  - Any reporting of findings that are already public or known to us, including but not limited to: open Github PRs and issues;previous findings reported by other researchers;  findings discovered during currently-active third-party security assessments; and duplicated results of concluded assessments as posted here: [https://stacks.org/audits](https://stacks.org/audits). Novel methods of attack leading to an already-documented impact are allowed.\n  - Any testing of third-party components. \n    - If it’s not listed as in-scope, it’s safe to assume you shouldn’t be testing or relying on it. \n    - If you disagree, feel free to explain why in your submission but DO NOT continue testing with our explicit written approval.\n  - (If applicable to funds) Any actual theft or freeze of funds.\n  - Any findings requiring access to or the cooperation of a Bitcoin miner.\n  - Theoretical attacks without substantial evidence and supporting documentation.\n\n__The following activities will make you immediately ineligible for a reward, regardless of your report’s validity:__\n\n  - Failure to provide any information requested in the above reporting template, as well as any failure to use the given public GPG key to encrypt sensitive information.\n  - Any negative or hostile behavior towards the Stacks ecosystem or members thereof, including but not limited to coercion, harassment, threats, intimidation, stalking, or extortion. This also includes asking for multiple status updates - we promise we have eyes on your report.\n  - Any automated scanner findings or fuzz test results without an associated functional proof-of-concept.\n  - Any testing on mainnet or public testnet beyond the absolute minimum required to prove that your finding exists on them.\n  - Any active exploitation of a reported vulnerability beyond the absolute minimum required to prove the validity of your proof-of-concept code.\n    - You must not attack any other users under any circumstances. Test on your own addresses or contracts.\n  - Any public disclosure of a reported issue, including via CVE number assignment.\n  - Any failure to abide by any rules, requirements, or obligations as detailed above.\n\n__The following activities are prohibited by this bug bounty program:__\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty\n",
      "assetsBodyV2": "All smart contracts of Stacks can be found at [https://github.com/stacks-network/stacks-blockchain/blob/master/src/chainstate/stacks/boot](https://github.com/stacks-network/stacks-blockchain/blob/master/src/chainstate/stacks/boot).  However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\nThough the Node implementation asset has “testnet” in the folder name, it is not a testnet node and is within the scope of the bug bounty program.",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "L1"
        ],
        "projectType": null,
        "ecosystem": [
          "Stacks"
        ],
        "programType": [
          "Blockchain/DLT",
          "Smart Contract"
        ],
        "language": null
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Blockchain/DLT"
        ],
        "blockchain_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $1,000,000"
          },
          {
            "level": "High",
            "payout": "USD $50,000"
          },
          {
            "level": "Medium",
            "payout": "USD $10,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $1,000,000"
          },
          {
            "level": "High",
            "payout": "USD $50,000"
          },
          {
            "level": "Medium",
            "payout": "USD $10,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Stacks is a Bitcoin layer for smart contracts; it enables smart contracts and decentralized applications to use Bitcoin as an asset and settle transactions on the Bitcoin blockchain. In the upcoming Nakamoto release of Stacks, Stacks will be secured by the entire hash power of Bitcoin, giving it Bitcoin finality.\"), mdx(\"p\", null, \"For more information about Stacks, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://stacks.org/\"\n  }, \"https://stacks.org/\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.stacks.co/\"\n  }, \"https://www.stacks.co/\"), \". \"), mdx(\"p\", null, \"We at the Stacks Foundation maintain essential components of the Stacks blockchain infrastructure. Our security team prioritizes the following attack vectors:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Total network shutdown or denial-of-service vectors\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Chain split or deep fork vectors\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Invalid transactions processing successfully or confirming\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Consensus failures\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Remotely exploitable weaknesses (as triggered through standard Stacks     - RPC and P2P ports only)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"(In smart contracts) Vote manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"(In smart contracts) Block stuffing attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"(In smart contracts) Theft or loss of unclaimed rewards\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Stacks is a Bitcoin layer for smart contracts; it enables smart contracts and decentralized applications to use Bitcoin as an asset and settle transactions on the Bitcoin blockchain. In the upcoming Nakamoto release of Stacks, Stacks will be secured by the entire hash power of Bitcoin, giving it Bitcoin finality.</p><p>For more information about Stacks, please visit <a href=\"https://stacks.org/\">https://stacks.org/</a> and <a href=\"https://www.stacks.co/\">https://www.stacks.co/</a>. </p><p>We at the Stacks Foundation maintain essential components of the Stacks blockchain infrastructure. Our security team prioritizes the following attack vectors:</p><ul><li>Theft of funds</li><li>Permanent freezing of funds</li><li>Total network shutdown or denial-of-service vectors</li><li>Chain split or deep fork vectors</li><li>Invalid transactions processing successfully or confirming</li><li>Consensus failures</li><li>Remotely exploitable weaknesses (as triggered through standard Stacks     - RPC and P2P ports only)</li><li>(In smart contracts) Vote manipulation</li><li>(In smart contracts) Block stuffing attacks</li><li>(In smart contracts) Theft or loss of unclaimed rewards</li></ul>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Impacts in Scope\")), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Blockchain\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Critical\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Network not being able to confirm new transactions (Total network shutdown)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trigger a deep fork without spending the requisite BTC.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct loss of funds other than permanent or temporary freezing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Chain split due to different nodes processing the same block or transaction with different results\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Invalid transaction confirmed (such as with an incorrect nonce)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"High\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unintended chain split (Network partition)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Transient consensus failures\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Remotely-exploitable denial of service in a node\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Remotely-exploitable memory or disk access, restricted to the Stacks Blockchain RPC/P2P ports\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Medium\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DoS of greater than 30% of miners and does not shut down the network\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Low\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DoS of greater than 10% but less than 30% of miners and does not shut down the network\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Underpricing transaction fees relative to computation time\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Critical\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of user funds by permanent freezing or theft\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of governance funds (limited to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".cost-vote\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Governance vote manipulation\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"High\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of unclaimed reward\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of unclaimed reward\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Medium\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Block stuffing without fund transfers blocked\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Block stuffing the Stacks chain such that smart contract calls can be blocked, but without paying the requisite higher transaction fees\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Low\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract fails to deliver promised returns, but doesn\\u2019t lose value\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A smart contract has certain operations underpriced or overpriced in ways that we don\\u2019t know about (i.e. that we don\\u2019t have open issues for).\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p><strong>Impacts in Scope</strong></p><p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p><p><strong>Blockchain</strong></p><p><strong>Critical</strong></p><ul><li>Network not being able to confirm new transactions (Total network shutdown)</li><li>Trigger a deep fork without spending the requisite BTC.</li><li>Direct loss of funds other than permanent or temporary freezing</li><li>Chain split due to different nodes processing the same block or transaction with different results</li><li>Invalid transaction confirmed (such as with an incorrect nonce)</li></ul><p><strong>High</strong></p><ul><li>Unintended chain split (Network partition)</li><li>Transient consensus failures</li><li>Remotely-exploitable denial of service in a node</li><li>Remotely-exploitable memory or disk access, restricted to the Stacks Blockchain RPC/P2P ports</li></ul><p><strong>Medium</strong></p><ul><li>DoS of greater than 30% of miners and does not shut down the network</li></ul><p><strong>Low</strong></p><ul><li>DoS of greater than 10% but less than 30% of miners and does not shut down the network</li><li>Underpricing transaction fees relative to computation time</li></ul><p><strong>Smart Contracts</strong></p><p><strong>Critical</strong></p><ul><li>Loss of user funds by permanent freezing or theft</li><li>Loss of governance funds (limited to <code>.cost-vote</code>)</li><li>Governance vote manipulation</li></ul><p><strong>High</strong></p><ul><li>Theft of unclaimed reward</li><li>Permanent freezing of unclaimed reward</li></ul><p><strong>Medium</strong></p><ul><li>Block stuffing without fund transfers blocked</li><li>Block stuffing the Stacks chain such that smart contract calls can be blocked, but without paying the requisite higher transaction fees</li></ul><p><strong>Low</strong></p><ul><li>Smart contract fails to deliver promised returns, but doesn’t lose value</li><li>A smart contract has certain operations underpriced or overpriced in ways that we don’t know about (i.e. that we don’t have open issues for).</li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \" v2. This is a simplified 5-level scale, with separate scales for each category, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. If there is any discrepancy with the classification in the Impacts in Scope section, the classification in the Impacts in Scope section will hold true.\"), mdx(\"p\", null, \"Please note that Critical finding bounties are capped at 10% of the damage resulting from the finding. This mostly takes into account technical and financial damage but also includes the \\u201Chuman\\u201D impact, including reputational risk. We will guarantee a minimum payout of $50,000 USD for all valid Critical findings.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"We agree to:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Respond meaningfully to all reported issues in a timely manner.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not pursue legal action against or \\u201Ccounter-hack\\u201D any researchers acting in good faith and abiding by this program\\u2019s rules.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Consider theoretical attacks and findings without proof-of-concept code as long as technically meaningful, evidence-based arguments are provided.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"You must:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Undergo full KYC. We are based in the United States and abide by all relevant law, including OFAC controls and sanctions.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not be based or test from an OFAC-sanctioned country or region or (be a sanctioned individual or organization) as defined here: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://ofac.treasury.gov/sanctions-programs-and-country-information\"\n  }, \"https://ofac.treasury.gov/sanctions-programs-and-country-information\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Report all bugs using this template. All fields are required unless otherwise marked. Fields with a star (*) must be encrypted with the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"mailto:security@stacks.org\"\n  }, \"security@stacks.org\"), \" GPG key, fingerprint 8A8B 3C3B 803A 0603 8FB5  3F69 357C 80AB 0885 87A0.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Executive summary of issue: \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Finding details: \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Repository, file, and line of code where finding is found:  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Steps to replicate*: \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Proof-of-concept exploitation code*: \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Screenshots or video of finding being exploited using the PoC you have provided*:  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impact of finding (short term): \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impact of finding (long term): \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mitigation suggestions (short term):\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mitigation suggestions (long term): \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"(Optional) Suggested patch:\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"(Optional) Any useful links or resources:\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"(Optional) Do you want a shout-out on our Security Wall of Fame? \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"(Optional, if approved) Do you want a cybersecurity-themed NFT sent to your Stacks wallet?\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use a private testnet. Testing on mainnet or public testnets is forbidden.\")), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Stacks Foundation team\"), \" directly and are denominated in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD\"), \". However, payments will be made in the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD\"), \" equivalent in the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Stacks\"), \" token (STX).\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a> v2. This is a simplified 5-level scale, with separate scales for each category, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. If there is any discrepancy with the classification in the Impacts in Scope section, the classification in the Impacts in Scope section will hold true.</p><p>Please note that Critical finding bounties are capped at 10% of the damage resulting from the finding. This mostly takes into account technical and financial damage but also includes the “human” impact, including reputational risk. We will guarantee a minimum payout of $50,000 USD for all valid Critical findings.</p><p><strong>We agree to:</strong></p><ul><li>Respond meaningfully to all reported issues in a timely manner.</li><li>Not pursue legal action against or “counter-hack” any researchers acting in good faith and abiding by this program’s rules.</li><li>Consider theoretical attacks and findings without proof-of-concept code as long as technically meaningful, evidence-based arguments are provided.</li></ul><p><strong>You must:</strong></p><ul><li>Undergo full KYC. We are based in the United States and abide by all relevant law, including OFAC controls and sanctions.</li><li>Not be based or test from an OFAC-sanctioned country or region or (be a sanctioned individual or organization) as defined here: <a href=\"https://ofac.treasury.gov/sanctions-programs-and-country-information\">https://ofac.treasury.gov/sanctions-programs-and-country-information</a></li><li>Report all bugs using this template. All fields are required unless otherwise marked. Fields with a star (*) must be encrypted with the <a href=\"mailto:security@stacks.org\">security@stacks.org</a> GPG key, fingerprint 8A8B 3C3B 803A 0603 8FB5  3F69 357C 80AB 0885 87A0.<ul><li>Executive summary of issue: </li><li>Finding details: </li><li>Repository, file, and line of code where finding is found:  </li><li>Steps to replicate*: </li><li>Proof-of-concept exploitation code*: </li><li>Screenshots or video of finding being exploited using the PoC you have provided*:  </li><li>Impact of finding (short term): </li><li>Impact of finding (long term): </li><li>Mitigation suggestions (short term):</li><li>Mitigation suggestions (long term): </li><li>(Optional) Suggested patch:</li><li>(Optional) Any useful links or resources:</li><li>(Optional) Do you want a shout-out on our Security Wall of Fame? </li><li>(Optional, if approved) Do you want a cybersecurity-themed NFT sent to your Stacks wallet?</li></ul></li><li>Use a private testnet. Testing on mainnet or public testnets is forbidden.</li></ul><p>Payouts are handled by the <strong>Stacks Foundation team</strong> directly and are denominated in <strong>USD</strong>. However, payments will be made in the <strong>USD</strong> equivalent in the <strong>Stacks</strong> token (STX).</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"3rd party services (AWS, Datadog, etc)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"The following activities and findings are explicitly out of scope of this bug bounty program:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any phishing, social engineering, or related attacks against the Stacks ecosystem or any members or customers thereof.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any reporting of findings that are already public or known to us, including but not limited to: open Github PRs and issues;previous findings reported by other researchers;  findings discovered during currently-active third-party security assessments; and duplicated results of concluded assessments as posted here: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://stacks.org/audits\"\n  }, \"https://stacks.org/audits\"), \". Novel methods of attack leading to an already-documented impact are allowed.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing of third-party components. \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If it\\u2019s not listed as in-scope, it\\u2019s safe to assume you shouldn\\u2019t be testing or relying on it. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you disagree, feel free to explain why in your submission but DO NOT continue testing with our explicit written approval.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"(If applicable to funds) Any actual theft or freeze of funds.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any findings requiring access to or the cooperation of a Bitcoin miner.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theoretical attacks without substantial evidence and supporting documentation.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"The following activities will make you immediately ineligible for a reward, regardless of your report\\u2019s validity:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Failure to provide any information requested in the above reporting template, as well as any failure to use the given public GPG key to encrypt sensitive information.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any negative or hostile behavior towards the Stacks ecosystem or members thereof, including but not limited to coercion, harassment, threats, intimidation, stalking, or extortion. This also includes asking for multiple status updates - we promise we have eyes on your report.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any automated scanner findings or fuzz test results without an associated functional proof-of-concept.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing on mainnet or public testnet beyond the absolute minimum required to prove that your finding exists on them.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any active exploitation of a reported vulnerability beyond the absolute minimum required to prove the validity of your proof-of-concept code.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You must not attack any other users under any circumstances. Test on your own addresses or contracts.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any public disclosure of a reported issue, including via CVE number assignment.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any failure to abide by any rules, requirements, or obligations as detailed above.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"The following activities are prohibited by this bug bounty program:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p><strong>The following vulnerabilities are excluded from the rewards for this bug bounty program:</strong></p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li><li>3rd party services (AWS, Datadog, etc)</li></ul><p><strong>The following activities and findings are explicitly out of scope of this bug bounty program:</strong></p><ul><li>Any phishing, social engineering, or related attacks against the Stacks ecosystem or any members or customers thereof.</li><li>Any reporting of findings that are already public or known to us, including but not limited to: open Github PRs and issues;previous findings reported by other researchers;  findings discovered during currently-active third-party security assessments; and duplicated results of concluded assessments as posted here: <a href=\"https://stacks.org/audits\">https://stacks.org/audits</a>. Novel methods of attack leading to an already-documented impact are allowed.</li><li>Any testing of third-party components. <ul><li>If it’s not listed as in-scope, it’s safe to assume you shouldn’t be testing or relying on it. </li><li>If you disagree, feel free to explain why in your submission but DO NOT continue testing with our explicit written approval.</li></ul></li><li>(If applicable to funds) Any actual theft or freeze of funds.</li><li>Any findings requiring access to or the cooperation of a Bitcoin miner.</li><li>Theoretical attacks without substantial evidence and supporting documentation.</li></ul><p><strong>The following activities will make you immediately ineligible for a reward, regardless of your report’s validity:</strong></p><ul><li>Failure to provide any information requested in the above reporting template, as well as any failure to use the given public GPG key to encrypt sensitive information.</li><li>Any negative or hostile behavior towards the Stacks ecosystem or members thereof, including but not limited to coercion, harassment, threats, intimidation, stalking, or extortion. This also includes asking for multiple status updates - we promise we have eyes on your report.</li><li>Any automated scanner findings or fuzz test results without an associated functional proof-of-concept.</li><li>Any testing on mainnet or public testnet beyond the absolute minimum required to prove that your finding exists on them.</li><li>Any active exploitation of a reported vulnerability beyond the absolute minimum required to prove the validity of your proof-of-concept code.<ul><li>You must not attack any other users under any circumstances. Test on your own addresses or contracts.</li></ul></li><li>Any public disclosure of a reported issue, including via CVE number assignment.</li><li>Any failure to abide by any rules, requirements, or obligations as detailed above.</li></ul><p><strong>The following activities are prohibited by this bug bounty program:</strong></p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of Stacks can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/stacks-network/stacks-blockchain/blob/master/src/chainstate/stacks/boot\"\n  }, \"https://github.com/stacks-network/stacks-blockchain/blob/master/src/chainstate/stacks/boot\"), \".  However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\"), mdx(\"p\", null, \"Though the Node implementation asset has \\u201Ctestnet\\u201D in the folder name, it is not a testnet node and is within the scope of the bug bounty program.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of Stacks can be found at <a href=\"https://github.com/stacks-network/stacks-blockchain/blob/master/src/chainstate/stacks/boot\">https://github.com/stacks-network/stacks-blockchain/blob/master/src/chainstate/stacks/boot</a>.  However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.</p><p>Though the Node implementation asset has “testnet” in the folder name, it is not a testnet node and is within the scope of the bug bounty program.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "meanfinance",
      "slug": "meanfinance",
      "project": "Mean Finance",
      "maxBounty": 25000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3BxBJhNMuTTt3beUQqo7ea/17c603fffa3c06431523f67de3576f23/PFP__1_.png",
      "launchDate": "2022-04-12T13:00-06:00",
      "updatedDate": "2022-10-26T14:35:55.179Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $25,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $20,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $1,000",
          "pocRequired": false
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "7Hm0RPuOoDZZ45wPjJ73JR",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x86E8cB7Cd38F7dE6Ef7fb62A5D7cCEe350C40310",
          "description": "ChainlinkOracle"
        },
        {
          "id": "32yvuEQPpu5YhHIa4gwcJX",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x14AF365e0825B835C60867C985724e1DF11449ad",
          "description": "UniswapOracle"
        },
        {
          "id": "11BnJivpJBZlOgPdbfmNDX",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x4b0C54236B86f41C5e5A5dc5d020f832692ff06d",
          "description": "OracleAggregator"
        },
        {
          "id": "5VdDJVWO6r4CdCSJ40kLso",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0xF3F361C1A84969dB21eB5Ed278BC987B7540923C",
          "description": "TokenDescriptor"
        },
        {
          "id": "1laIXI8aaFPYJCHkB16EY3",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x6f54391fE0386D506b51d69Deeb8b04E0544E088",
          "description": "PermissionsManager"
        },
        {
          "id": "DOqSKUJ80bjBxw1d0oHPg",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x059d306A25c4cE8D7437D25743a8B94520536BD5",
          "description": "DCAHub"
        },
        {
          "id": "6DNbdsOvWjQkw3Baac2zJC",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0xa3DB2c0D23720e8CDA0f4d80A53B94d20d02b061",
          "description": "DCAHubCompanion"
        },
        {
          "id": "7Huk70Xa3mzpaIJwl2iz2N",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0xCf51244AE89dE8f062ebc963C64bA96C1723e27e",
          "description": "PositionMigrator"
        },
        {
          "id": "3qmU6ussVp9RDrcTDaN1gI",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x7CbdcA3c992953bdd536BE234973686D758DAabc",
          "description": "ERC4626Transformer"
        },
        {
          "id": "4ak1PLRjOsOuE3IrzTh8lg",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0xfd55b5A6F61f22c70f4A1d8e63d181c6D0a290c6",
          "description": "ProtocolTokenWrapperTransformer"
        },
        {
          "id": "4P5lbhUAAStjqZ9usvq4EG",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0xC0136591Df365611B1452B5F8823dEF69Ff3A685",
          "description": "TransformerRegistry"
        },
        {
          "id": "2fc3QmWxpdTCj4XJCIFE9F",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0xe46F105427e9A0f6Dc6E90649FCc19a70C6D809e",
          "description": "ChainlinkFeedRegistry"
        },
        {
          "id": "5s2Jq2ZLzP9WRsCXpqWudP",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x5587d300d41E418B3F4DC7c273351748a116d78B",
          "description": "StatefulChainlinkOracle"
        },
        {
          "id": "6DTUL9A4pgTjOuBtVWQMet",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0xD741623299413d02256aAC2101f8B30873fED1d2",
          "description": "UniswapV3Adapter"
        },
        {
          "id": "3vUhrQzbK5m78yerSTILAh",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x0171C3D8315159d771f4A4e09840b1747b7f7364",
          "description": "IdentityOracle"
        },
        {
          "id": "1nogxjpiXgg5xk08T16sQV",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x9e1ca4Cd00ED059C5d34204DCe622549583545d9",
          "description": "OracleAggregator"
        },
        {
          "id": "1m7ZHtO9ObX0VqmYTEfwbv",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0xEB8615cF5bf0f851aEFa894307aAe2b595628148",
          "description": "Transformer Oracle"
        },
        {
          "id": "3QO5aeuwKBshp5zVdisqnn",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x4ACd4BC402bc8e6BA8aBDdcA639d8011ef0b8a4b",
          "description": "DCAHubPositionDescriptor"
        },
        {
          "id": "1cYENn7AGugjnJguZaIdJw",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x20bdAE1413659f47416f769a4B27044946bc9923",
          "description": "PermissionsManager"
        },
        {
          "id": "7BUbgXepfaqeoVrBf3EV0U",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0xEb5D9d327f2Dd438494ef07D6437f495C8dD563c",
          "description": "Timelock"
        },
        {
          "id": "gYNn440PkxAEX3vcJR7rI",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0xA5AdC5484f9997fBF7D405b9AA62A7d88883C345",
          "description": "DCAHub"
        },
        {
          "id": "6St3tvRnLDF0TQl3VMndde",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0xd6C8fd8100252F0a314407C26e7A47286F7Fda24",
          "description": "SwapperRegistry"
        },
        {
          "id": "ZChCQpVIlaq6CFemj2TB8",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0xca341351FA4D98a3EE7eb688796B796603128d85",
          "description": "SwapProxy"
        },
        {
          "id": "dX1b1QW44dAAxkst0zgYE",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x49c590F6a2dfB0f809E82B9e2BF788C0Dd1c31f9",
          "description": "DCAHubCompanion"
        },
        {
          "id": "mlfKOXxi10m0NnMT5t60s",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x775d4d8C4751bAe18EbdbA4EbaA46A1ff54d0C9d",
          "description": "DCAHubSwapper"
        },
        {
          "id": "kkVpqHen9SzWGzjTUBnSD",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0xFF0BC9128290019b4F0c03038275c36F88f4D201",
          "description": "DCAFeeManager"
        }
      ],
      "impacts": [
        {
          "id": "3qdE07ZES1hinA4frFLehl",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "01qc1HPYoI2Kzb4IWPx38I",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4ZWE2e7ltR1lsJuqTef7zD",
          "title": "Protocol Insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2pOPnfEN2RNqEazszRVGDs",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "5bHK5CzNiSXvqPexUibvdM",
          "title": "Temporary freezing of funds for any amount of time",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "wJlKjy3Zi601salMMroDE",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "7eERBGvKqwH3NoMBbDYwmX",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "Pn0QYWBqj357uxFxxuBZY",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "4xfcAZ9zOLBIin4wkdM8N9",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "6jICZab4zA04ViB0B5eOw8",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "2o21N8VZMoAHyg9DXGSjxr",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        }
      ],
      "programOverview": "Mean Finance is an open protocol that enables users (or protocols) to Dollar Cost Average (DCA) any ERC20 into any ERC20 with their preferred period frequency, without sacrificing decentralization or giving up personal information to any centralized parties.\n\nFor more information about Mean Finance, please visit [https://mean.finance/](https://mean.finance/).\n\nDocs at [https://docs.mean.finance](https://docs.mean.finance).\n",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\n\nIssues previously highlighted in the following audit reports are considered as out of scope: \n  - [https://github.com/Mean-Finance/dca-v2-core/blob/main/audits/PeckShield.pdf](https://github.com/Mean-Finance/dca-v2-core/blob/main/audits/PeckShield.pdf) \n  - [https://github.com/Mean-Finance/dca-v2-core/blob/main/audits/Pessimistic.pdf](https://github.com/Mean-Finance/dca-v2-core/blob/main/audits/Pessimistic.pdf) \n  - [https://omniscia.io/reports/mean-finance-transformers-module/](https://omniscia.io/reports/mean-finance-transformers-module/)\n  - [https://omniscia.io/reports/mean-finance-oracle-module/](https://omniscia.io/reports/mean-finance-oracle-module/)\n  - [https://omniscia.io/reports/mean-finance-swappers-module/](https://omniscia.io/reports/mean-finance-swappers-module/)\n\nIn addition, the following bug are also considered out of scope: \n  - The team is aware that UniswapV3 TWAP oracles can be manipulable if liquidity is low and there is a warning for low liquidity pairs on the front-end to address this. Hence, security assessments should be done under the assumption that oracles return the correct price.\n  - Tokens exhibiting non-standard ERC20 behavior that only affects holders of that token and does not impact any other assets managed by Mean Finance. (E.g., a transfer function that fails to update users balances).\n  - Bug reports that require escalated privileges \n\nPayouts are handled by the __Mean Finance__ team directly and are denominated in USD. However, payouts are done in __USDC__.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "All assets in scope will be listed in the Optimism network, but will have the same duplicate deployment on Polygon. Those are also considered in scope.\n\nAll smart contracts of Mean Finance can be found at [https://github.com/Mean-Finance](https://github.com/Mean-Finance). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\nIf an Critical or High impact can be caused to any other asset managed by Mean Finance that isn’t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project. \n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "DEX"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "JavaScript"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $25,000"
          },
          {
            "level": "High",
            "payout": "USD $20,000"
          },
          {
            "level": "Medium",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Mean Finance is an open protocol that enables users (or protocols) to Dollar Cost Average (DCA) any ERC20 into any ERC20 with their preferred period frequency, without sacrificing decentralization or giving up personal information to any centralized parties.\"), mdx(\"p\", null, \"For more information about Mean Finance, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://mean.finance/\"\n  }, \"https://mean.finance/\"), \".\"), mdx(\"p\", null, \"Docs at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.mean.finance\"\n  }, \"https://docs.mean.finance\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Mean Finance is an open protocol that enables users (or protocols) to Dollar Cost Average (DCA) any ERC20 into any ERC20 with their preferred period frequency, without sacrificing decentralization or giving up personal information to any centralized parties.</p><p>For more information about Mean Finance, please visit <a href=\"https://mean.finance/\">https://mean.finance/</a>.</p><p>Docs at <a href=\"https://docs.mean.finance\">https://docs.mean.finance</a>.</p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\"), mdx(\"p\", null, \"Issues previously highlighted in the following audit reports are considered as out of scope: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Mean-Finance/dca-v2-core/blob/main/audits/PeckShield.pdf\"\n  }, \"https://github.com/Mean-Finance/dca-v2-core/blob/main/audits/PeckShield.pdf\"), \" \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Mean-Finance/dca-v2-core/blob/main/audits/Pessimistic.pdf\"\n  }, \"https://github.com/Mean-Finance/dca-v2-core/blob/main/audits/Pessimistic.pdf\"), \" \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://omniscia.io/reports/mean-finance-transformers-module/\"\n  }, \"https://omniscia.io/reports/mean-finance-transformers-module/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://omniscia.io/reports/mean-finance-oracle-module/\"\n  }, \"https://omniscia.io/reports/mean-finance-oracle-module/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://omniscia.io/reports/mean-finance-swappers-module/\"\n  }, \"https://omniscia.io/reports/mean-finance-swappers-module/\"))), mdx(\"p\", null, \"In addition, the following bug are also considered out of scope: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The team is aware that UniswapV3 TWAP oracles can be manipulable if liquidity is low and there is a warning for low liquidity pairs on the front-end to address this. Hence, security assessments should be done under the assumption that oracles return the correct price.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tokens exhibiting non-standard ERC20 behavior that only affects holders of that token and does not impact any other assets managed by Mean Finance. (E.g., a transfer function that fails to update users balances).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bug reports that require escalated privileges \")), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Mean Finance\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.</p><p>Issues previously highlighted in the following audit reports are considered as out of scope: </p><ul><li><a href=\"https://github.com/Mean-Finance/dca-v2-core/blob/main/audits/PeckShield.pdf\">https://github.com/Mean-Finance/dca-v2-core/blob/main/audits/PeckShield.pdf</a> </li><li><a href=\"https://github.com/Mean-Finance/dca-v2-core/blob/main/audits/Pessimistic.pdf\">https://github.com/Mean-Finance/dca-v2-core/blob/main/audits/Pessimistic.pdf</a> </li><li><a href=\"https://omniscia.io/reports/mean-finance-transformers-module/\">https://omniscia.io/reports/mean-finance-transformers-module/</a></li><li><a href=\"https://omniscia.io/reports/mean-finance-oracle-module/\">https://omniscia.io/reports/mean-finance-oracle-module/</a></li><li><a href=\"https://omniscia.io/reports/mean-finance-swappers-module/\">https://omniscia.io/reports/mean-finance-swappers-module/</a></li></ul><p>In addition, the following bug are also considered out of scope: </p><ul><li>The team is aware that UniswapV3 TWAP oracles can be manipulable if liquidity is low and there is a warning for low liquidity pairs on the front-end to address this. Hence, security assessments should be done under the assumption that oracles return the correct price.</li><li>Tokens exhibiting non-standard ERC20 behavior that only affects holders of that token and does not impact any other assets managed by Mean Finance. (E.g., a transfer function that fails to update users balances).</li><li>Bug reports that require escalated privileges </li></ul><p>Payouts are handled by the <strong>Mean Finance</strong> team directly and are denominated in USD. However, payouts are done in <strong>USDC</strong>.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All assets in scope will be listed in the Optimism network, but will have the same duplicate deployment on Polygon. Those are also considered in scope.\"), mdx(\"p\", null, \"All smart contracts of Mean Finance can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/Mean-Finance\"\n  }, \"https://github.com/Mean-Finance\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\"), mdx(\"p\", null, \"If an Critical or High impact can be caused to any other asset managed by Mean Finance that isn\\u2019t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project. \"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All assets in scope will be listed in the Optimism network, but will have the same duplicate deployment on Polygon. Those are also considered in scope.</p><p>All smart contracts of Mean Finance can be found at <a href=\"https://github.com/Mean-Finance\">https://github.com/Mean-Finance</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.</p><p>If an Critical or High impact can be caused to any other asset managed by Mean Finance that isn’t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project. </p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

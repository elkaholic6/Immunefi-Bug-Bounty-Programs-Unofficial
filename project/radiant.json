{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "radiant",
      "slug": "radiant",
      "project": "Radiant",
      "maxBounty": 200000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/rvwyGeNsjjZRJvYVwYglc/6f057b54998672916c1243d7ca56b26c/Radiant-logo--horizontal-color--dark-theme_copy.jpg",
      "launchDate": "2023-03-29T15:00-04:00",
      "updatedDate": "2023-03-29T22:32:45.944Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $20,000 to USD $200,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $5,000 to USD $20,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $1,000 to USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "critical",
          "payout": "USD $20,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "high",
          "payout": "USD $6,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "medium",
          "payout": "USD $2,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "6wWvHERWHd80I7V2DXC36V",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x3082cc23568ea640225c2467653db90e9250aaa0",
          "description": "rdntToken"
        },
        {
          "id": "7ylyLOqNooxC8rvgaaSQf3",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x32df62dc3aed2cd6224193052ce665dc18165841",
          "description": "stakingToken"
        },
        {
          "id": "4ushWkhcIGfMoPWUGv2GSp",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x091d52cace1edc5527c99cdcfa6937c1635330e4",
          "description": "PoolAddressProvider"
        },
        {
          "id": "6NKFwSTkG16h1f7Xhz5PXO",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x9D36DCe6c66E3c206526f5D7B3308fFF16c1aa5E",
          "description": "PoolAddressesProviderRegistry"
        },
        {
          "id": "1II2XhhezFk3gPTh0AEnop",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xfC05ec21b106E0c1e035Ec4718C1394f098FBb57",
          "description": "poolHelper"
        },
        {
          "id": "6uNYRH55mKsJirSBOonkan",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xF4B1486DD74D07706052A33d31d7c0AAFD0659E1",
          "description": "lendingPool"
        },
        {
          "id": "5wMQUfl9KonRCwbzZcqhgF",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x727354712BDFcd8596a3852Fd2065b3C34F4F770",
          "description": "rWBTC"
        },
        {
          "id": "12uNjnXDBnHslcVAQTfeSC",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xd69D402D1bDB9A2b8c3d88D98b9CEaf9e4Cd72d9",
          "description": "rUSDT"
        },
        {
          "id": "4V1jir7aa8z5chgLQpnXWI",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x48a29E756CC1C097388f3B2f3b570ED270423b3d",
          "description": "rUSDC"
        },
        {
          "id": "yXfoPr9shtj9spyhGXo8q",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x0D914606f3424804FA1BbBE56CCC3416733acEC6",
          "description": "rDAI"
        },
        {
          "id": "6yHJbI7lJPicWaMCz5wBkx",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x0dF5dfd95966753f01cb80E76dc20EA958238C46",
          "description": "rWETH"
        },
        {
          "id": "1fgOuHzeIhcwAcwrv5xgsF",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x3EEaFa33625DF20837eD0Cb83Ae4D1E34788b141",
          "description": "vdWBTC"
        },
        {
          "id": "5AS8RnOeCLTN9UaecBa2M9",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x7C2E0F792ea5B4a4Dbd7fA7f949CF39A5c0ba185",
          "description": "vdUSDT"
        },
        {
          "id": "01xpRFVJ8jXfAEywD1MpMM",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x107583ADAA37Dfd1CC0bf577183Bf91351d07413",
          "description": "vdUSDC"
        },
        {
          "id": "2vc7RoiAcOv3GpsBtLuizQ",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x04A8fAEd05C97290Ab4d793A971AdEe97cD1cBbD",
          "description": "vdDAI"
        },
        {
          "id": "5HdBqjY33DV2tLvbHLx6TY",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xab04c0841f39596C9F18A981a2BD32F63AB7a817",
          "description": "vdWETH"
        },
        {
          "id": "if5iKDw7sq1aVOh0HfLt6",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x5eb35e64f2f63e2e02e0496901a257e387a17f29",
          "description": "stableAndVariableTokensHelper"
        },
        {
          "id": "6oAGZLMEzWAKKV3702SNBq",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x59599097Ed7f03382765BcdB2749f642068c8031",
          "description": "aTokensAndRatesHelper"
        },
        {
          "id": "NICC1yP9KiA7NDxQLnKH9",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xC0cE5De939aaD880b0bdDcf9aB5750a53EDa454b",
          "description": "aaveOracle"
        },
        {
          "id": "598Vg5k03WqtLbpndK7wUB",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x596B0cc4c5094507C50b579a662FE7e7b094A2cC",
          "description": "aaveProtocolDataProvider"
        },
        {
          "id": "cdSB0Mn3xQw6Z7hgTjSuF",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xec21Dd035aE1712b070AEcBDCa2A82226856B716",
          "description": "lendingRateOracle"
        },
        {
          "id": "71zkHYxoZm0xQyiajimHwX",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x76663727c39Dd46Fed5414d6801c4E8890df85cF",
          "description": "priceProvider"
        },
        {
          "id": "2PyP6OKHEGFmucZTPV7Tm0",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x750129c21c7846CFE0ce2c966D84c0bcA5658497",
          "description": "daoTreasury"
        },
        {
          "id": "3gD95tvjITORtxLb754BQy",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xE10997B8d5C6e8b660451f61accF4BBA00bc901f",
          "description": "middleFeeDistribution"
        },
        {
          "id": "3J96t2eTJiBYNhqBZRuKUv",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x76ba3eC5f5adBf1C58c91e86502232317EeA72dE",
          "description": "multiFeeDistribution"
        },
        {
          "id": "1z1DWSQ0B083D9oyiN1g2s",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xebC85d44cefb1293707b11f707bd3CEc34B4D5fA",
          "description": "chefIncentivesController"
        },
        {
          "id": "6ihmW09FARBgPHPRuLz9OF",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xbb5ca40b2f7af3b1ff5dbce0e9cc78f8bfa817ce",
          "description": "wethGateway"
        },
        {
          "id": "7EVeoZTmo2a5fYio7eQ8wa",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x6AC30E227468773AF2F70cD0F3A0375520885610",
          "description": "walletBalanceProvider"
        },
        {
          "id": "2ZlR0oBc7hgnxVwm5D8cLn",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xed1eF2fAE2385c221F0e054f982E974bc7Dc08Ce",
          "description": "uiPoolDataProvider"
        },
        {
          "id": "4zv7PGMvCo8Cvp4QopA8id",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xd4966DC49a10aa5467D65f4fA4b1449b5d874399",
          "description": "eligibilityDataProvider"
        },
        {
          "id": "4C3yjoPsiGQTeRH1bvpwfj",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x196bF3A63c50BcA1Eff5A5809B72DFc58F0C2c1a",
          "description": "leverager"
        },
        {
          "id": "5k4joAUWAcDyw3iVrw5XKY",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x53Bf833A5d6c4ddA888F69c22C88C9f356a41614",
          "description": "stargateRouter"
        },
        {
          "id": "2qna8L1xww3mQz0j9lEwFd",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x9441fcD3e538a84E122AC6FfE3C07417CBE51DC9",
          "description": "stargateBorrow"
        },
        {
          "id": "N6TFJl5oPmCYqBTeDYef6",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x8991C4C347420E476F1cf09C03abA224A76E2997",
          "description": "lockZap"
        },
        {
          "id": "4uEuKQgKJcolDopg7DZKPV",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xc23ad41516b6892BB304ADA420c84933096188b8",
          "description": "lpLockerList"
        },
        {
          "id": "4cg3RVu5Fq9tn5ytrenZlF",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x90aBACEC5dEEFf349223EeA076c946C2A630B672",
          "description": "bountyManager"
        },
        {
          "id": "7wniKHb6RZ6qOkQGjP101k",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xb2c2c72f57864baca7bda6bcb5965ab8f58f9610",
          "description": "compounder"
        },
        {
          "id": "4fw3rtgdNouJnRTO6sLbMd",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x82af49447d8a07e3bd95bd0d56f35241523fbab1",
          "description": "baseAssetWrappedAddress"
        },
        {
          "id": "1yrooIbghOYdPbLsLYEikV",
          "type": "smart_contract",
          "url": "https://github.com/radiant-capital/v2",
          "description": "Primacy of Impact Asset"
        },
        {
          "id": "5jwTrUZ4kvBXAdh6C7rSSy",
          "type": "websites_and_applications",
          "url": "https://app.radiant.capital",
          "description": "Web/App - Primacy of Impact Asset"
        }
      ],
      "impacts": [
        {
          "id": "3Q7T6btunslKPKRQVvjdge",
          "title": "Any governance voting result manipulation",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2e3WEfZmM4yMdTfY6ATMOO",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "7zRZYNlMmLPXC3blZIH0A8",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6Fvp1B8V4AZAPkaRD4315j",
          "title": "Unintended consequences from Maximal-extractable value (MEV) exploration",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "FfFezC45awEDfeaS31T8o",
          "title": "Protocol insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4i1GDG88ZlAhkaEYYZxVgZ",
          "title": "Execute arbitrary system commands",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "4ruPQGvJlvRxeRFcZMlHt4",
          "title": "Retrieve sensitive data/files from a running server such as /etc/shadow, database passwords, and blockchain keys(this does not include non-sensitive environment variables, open source code, or usernames)",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "6pG1FAr7I9LvOg7n4In3cF",
          "title": "Taking down the application/website",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "3jEaQTZ0IQQJU4lsaiEfIJ",
          "title": "Taking state-modifying authenticated actions (with or without blockchain state interaction) on behalf of other users without any interaction by that user, such as, changing registration information, commenting, voting, making trades, withdrawals, etc.",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "lCoOBY039luPzRbgIOTdu",
          "title": "Subdomain takeover with already-connected wallet interaction",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "6Apg7rdpCID7MNfr2EjvRI",
          "title": "Direct theft of user funds",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "6TQAyHHsKJyqIpkY8Ur6ji",
          "title": "Malicious interactions with an already-connected wallet such as modifying transaction arguments or parameters, substituting contract addresses, submitting malicious transactions",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "6wUBomhURTc9ccdGTXwsnt",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "4fFKkGdFhbeV5utEsCAzxw",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "zGLX6q1oGHEIGRP5URdya",
          "title": "Temporary freezing of funds for at least 3 minutes",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "5HwuwQhJkbV9UMl02R1msm",
          "title": "Injecting/modifying the static content on the target application without Javascript (Persistent) such as HTML injection without Javascript, replacing existing text with arbitrary text, arbitrary file uploads, etc.",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "2NEw3sXx5DJUWJtZZ7MkOG",
          "title": "Changing sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, such as email or password of the victim, etc.",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "5EaJCZg2mmQTCqEF6WKx99",
          "title": "Improperly disclosing confidential user information such as email address, phone number, physical address, etc.",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "5bHsqczQ5ZpeSLRmOHRmJ8",
          "title": "Subdomain takeover without already-connected wallet interaction",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "3u5e47otbqdfHxZoHgyy0z",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "Zkl2m3nntynRAqdwjQXz6",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "7olEPF10LeI5LHZsDjRJkT",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "6rjJcPrymguCe4TtC2fQ9z",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "9i9NwhCMPA1EcfDefRvhB",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "AxU5U1aDn1L5XQFa9E7T3",
          "title": "Changing non-sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, such as changing the first/last name of user, or en/disabling notification",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "01FXw0nsoaJ0BfY4rNOV2E",
          "title": "Injecting/modifying the static content on the target application without Javascript (Reflected) such as reflected HTML injection or loading external site data",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "1vHCQJyzPyAlX6lrRKdOxT",
          "title": "Redirecting users to malicious websites (Open Redirect)",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "5dAxvPWyC4lmqLh8gpR4HE",
          "title": "Smart contract fails to deliver promised returns, but doesn’t lose value",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "Radiant Capital is the first omnichain money market atop LayerZero, where users can deposit and borrow a variety of supported assets across multiple chains, seamlessly. \n\n$RDNT, an OFT-20, is Radiant's native utility token. Layer Zero Labs’ omnichain fungible token (OFT) interoperability solution enables native, cross-chain token transfers. With LayerZero’s guarantee of valid delivery, the token is burned on the source chain and minted on the destination chain directly through the token contract. \n\nEcosystem participants can lock Radiant liquidity tokens to receive a share of protocol revenue from borrowers’ loan repayments in the form of a variety of blue chip assets. Locking RDNT liquidity also activates the ability to earn $RDNT emissions from borrowing and lending within the money market, as well as rights to vote in governance on the future direction of the protocol.\n\nFor more information about Radiant, please visit [radiant.capital ](http://radiant.capital) \n",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the  [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. \n\nFor the purposes of determining report validity, this is a Primacy of Impact program. \nLearn more about report validity best practices here: [Best Practice - Primacy of Impact vs Primacy of Rules.](https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact)\n\nAll smart contract and web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.  \n\nRewards for critical smart contract vulnerabilities are further capped at 10% of the funds at risk. In cases of repeatable attacks, only the first attack is considered unless the smart contract cannot be upgraded or paused.  However, there is a minimum reward of __USD 20 000__ for Critical smart contract bug reports. \n\nRewards for high smart contract vulnerabilities are further capped at 100% of the funds at risk. In cases of repeatable attacks, only the first attack is considered unless the smart contract cannot be upgraded or paused.  However, there is a minimum reward of __USD 5 000__ for High smart contract bug reports. \n\nRewards for medium smart contract vulnerabilities with direct monetary impact are further capped at 100% of the funds at risk. In cases of repeatable attacks, only the first attack is considered unless the smart contract cannot be upgraded or paused.  However, there is a minimum reward of __USD 1 000__ for Medium smart contract bug reports. All other valid Medium smart contract bug reports will be rewarded __USD 1 000__. \n\nKnown issues highlighted in the following audit reports are considered out of scope: \n- [https://github.com/peckshield/publications/tree/master/audit_reports/PeckShield-Audit-Report-RadiantV2-v1.0.pdf](https://github.com/peckshield/publications/tree/master/audit_reports/PeckShield-Audit-Report-RadiantV2-v1.0.pdf)\n- [https://twitter.com/zokyo_io/status/1638856299629907973](https://twitter.com/zokyo_io/status/1638856299629907973)\n- [https://github.com/blocksecteam/audit-reports/blob/main/solidity/blocksec_radiant_v2.0.pdf](https://github.com/blocksecteam/audit-reports/blob/main/solidity/blocksec_radiant_v2.0.pdf)\n\nPayouts are handled by the __Radiant__ team directly and are denominated in USD. However, payouts are done in __USDC__.\n",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n- Incorrect data supplied by third party oracles\n   - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n- Centralization risks\n\n__Websites and Apps__\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Attacks requiring physical access to the victim device\n- Attacks requiring access to the local network of the victim\n- Reflected plain text injection ex: url parameters, path, etc.\n   - This does not exclude reflected HTML injection with or without javascript\n   - This does not exclude persistent plain text injection\n- Self-XSS\n- Captcha bypass using OCR without impact demonstration\n- CSRF with no state modifying security impact (ex: logout CSRF)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”) without demonstration of impact\n- Server-side non-confidential information disclosure such as IPs, server names, and most stack traces\n- Vulnerabilities used only to enumerate or confirm the existence of users or tenants\n- Vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Feature requests\n- Issues related to the frontend without concrete impact and PoC\n- Best practices issues without concrete impact and PoC\n- Vulnerabilities primarily caused by browser/plugin defects\n- Leakage of non sensitive api keys ex: etherscan, Infura, Alchemy, etc.\n- Any vulnerability exploit requiring browser bugs for exploitation. ex: CSP bypass\n\nThe following activities are prohibited by this bug bounty program:\n\n- Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets \n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n",
      "assetsBodyV2": "All smart contracts of Radiant can be found at [https://github.com/radiant-capital/v2](https://github.com/radiant-capital/v2). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\nThough only the proxy contracts are listed as in-scope, current implementation and any further updates to the implementation contracts are considered in scope. When reporting a bug, please make sure to select the relevant proxy smart contract as the target.\n\nImpacts only apply to assets in active use by the project like contracts on mainnet or web/app assets used in production. Any impact that applies to assets not in active use, like test or mock files, are out-of-scope of the bug bounty program unless explicitly mentioned as in-scope.\n\nSmart Contracts - PoC, Smart Contract bug reports are required to include a runnable Proof of Concept (PoC) in order to prove impact. \n\nWeb/App - Bug reports are required to include a Proof of Concept (PoC) in order to prove impact. In general, all blackbox testing is allowed unless it takes down the application/website. In case of such, the whitehat must ask for permission from the project in the Immunefi dashboard first if the attack would take down the application/website.\n\nFor more information on PoCs please visit: [Proof of Concept (PoC) Guidelines and Rules](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules)\n\nWhitehats are highly encouraged to review any potential subdomains and what specific port(s) are in scope. Even though the domain may be the same, different ports may point to different assets. \n\n__Ethical Behavior Requirements:__\n\nResponsible disclosure is predicated on ethical behavior. These guidelines outline best practices for the community as whole, whether you are reporting, or the recipient of a report. By stating that you adhere to this policy, you’re claiming to handle vulnerability information ethically, and abide by the following:\n- Do not attempt to leverage a vulnerability, or information of its existence, as part of a financial trading strategy or otherwise for financial gain.\n- Do not attempt to compromise systems upon which development of a product relies; including but not limited to compromising development systems, accounts, domains, email etc.\n- Do not attempt to sell vulnerability information or exploits.\n- Do not ask for any form of compensation from an affected party. You may compensate a disclosing party if you would like to after all known vulnerability details have been disclosed.\n- Do not disclose a bug or vulnerability on mailing lists, public boards, forums, social media or any other channel prior to Responsibly Disclosing to the organizations you have a published relationship with\n- Do not attempt any illegal acts, including phishing, physical attacks, DDoS, or any attempt to gain access without authorization\n\n__3rd Party Affected Projects:__\n\nIn the case where we become aware of security issues affecting other projects that have never affected Radiant, our intention is to inform those projects of security issues on a best effort basis.\n\nIn the case where we fix a security issue in Radiant that also affects other projects, our intention is to engage in responsible disclosures with them as described in the adopted standard, subject to the deviations described in the deviations section below.\n\n__Deviations from the Standard:__\n\nIn the case of a counterfeiting or fund-stealing bug affecting Radiant, however, we might decide not to include those details with our reports to partners ahead of coordinated release, as long as we are sure that they are not vulnerable.\n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Crosschain Liquidity",
          "Lending",
          "Staking"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "Arbitrum"
        ],
        "programType": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "language": [
          "Solidity",
          "Go"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $20,000 to USD $200,000"
          },
          {
            "level": "High",
            "payout": "USD $5,000 to USD $20,000"
          },
          {
            "level": "Medium",
            "payout": "USD $1,000 to USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "USD $20,000"
          },
          {
            "level": "High",
            "payout": "USD $6,000"
          },
          {
            "level": "Medium",
            "payout": "USD $2,000"
          }
        ]
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Radiant Capital is the first omnichain money market atop LayerZero, where users can deposit and borrow a variety of supported assets across multiple chains, seamlessly. \"), mdx(\"p\", null, \"$RDNT, an OFT-20, is Radiant's native utility token. Layer Zero Labs\\u2019 omnichain fungible token (OFT) interoperability solution enables native, cross-chain token transfers. With LayerZero\\u2019s guarantee of valid delivery, the token is burned on the source chain and minted on the destination chain directly through the token contract. \"), mdx(\"p\", null, \"Ecosystem participants can lock Radiant liquidity tokens to receive a share of protocol revenue from borrowers\\u2019 loan repayments in the form of a variety of blue chip assets. Locking RDNT liquidity also activates the ability to earn $RDNT emissions from borrowing and lending within the money market, as well as rights to vote in governance on the future direction of the protocol.\"), mdx(\"p\", null, \"For more information about Radiant, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://radiant.capital\"\n  }, \"radiant.capital \"), \" \"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Radiant Capital is the first omnichain money market atop LayerZero, where users can deposit and borrow a variety of supported assets across multiple chains, seamlessly. </p><p>$RDNT, an OFT-20, is Radiant&#x27;s native utility token. Layer Zero Labs’ omnichain fungible token (OFT) interoperability solution enables native, cross-chain token transfers. With LayerZero’s guarantee of valid delivery, the token is burned on the source chain and minted on the destination chain directly through the token contract. </p><p>Ecosystem participants can lock Radiant liquidity tokens to receive a share of protocol revenue from borrowers’ loan repayments in the form of a variety of blue chip assets. Locking RDNT liquidity also activates the ability to earn $RDNT emissions from borrowing and lending within the money market, as well as rights to vote in governance on the future direction of the protocol.</p><p>For more information about Radiant, please visit <a href=\"http://radiant.capital\">radiant.capital </a> </p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the  \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. \"), mdx(\"p\", null, \"For the purposes of determining report validity, this is a Primacy of Impact program.\\nLearn more about report validity best practices here: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact\"\n  }, \"Best Practice - Primacy of Impact vs Primacy of Rules.\")), mdx(\"p\", null, \"All smart contract and web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.  \"), mdx(\"p\", null, \"Rewards for critical smart contract vulnerabilities are further capped at 10% of the funds at risk. In cases of repeatable attacks, only the first attack is considered unless the smart contract cannot be upgraded or paused.  However, there is a minimum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 20 000\"), \" for Critical smart contract bug reports. \"), mdx(\"p\", null, \"Rewards for high smart contract vulnerabilities are further capped at 100% of the funds at risk. In cases of repeatable attacks, only the first attack is considered unless the smart contract cannot be upgraded or paused.  However, there is a minimum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 5 000\"), \" for High smart contract bug reports. \"), mdx(\"p\", null, \"Rewards for medium smart contract vulnerabilities with direct monetary impact are further capped at 100% of the funds at risk. In cases of repeatable attacks, only the first attack is considered unless the smart contract cannot be upgraded or paused.  However, there is a minimum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 1 000\"), \" for Medium smart contract bug reports. All other valid Medium smart contract bug reports will be rewarded \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 1 000\"), \". \"), mdx(\"p\", null, \"Known issues highlighted in the following audit reports are considered out of scope: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/peckshield/publications/tree/master/audit_reports/PeckShield-Audit-Report-RadiantV2-v1.0.pdf\"\n  }, \"https://github.com/peckshield/publications/tree/master/audit_reports/PeckShield-Audit-Report-RadiantV2-v1.0.pdf\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://twitter.com/zokyo_io/status/1638856299629907973\"\n  }, \"https://twitter.com/zokyo_io/status/1638856299629907973\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/blocksecteam/audit-reports/blob/main/solidity/blocksec_radiant_v2.0.pdf\"\n  }, \"https://github.com/blocksecteam/audit-reports/blob/main/solidity/blocksec_radiant_v2.0.pdf\"))), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Radiant\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the  <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. </p><p>For the purposes of determining report validity, this is a Primacy of Impact program.\nLearn more about report validity best practices here: <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact\">Best Practice - Primacy of Impact vs Primacy of Rules.</a></p><p>All smart contract and web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.  </p><p>Rewards for critical smart contract vulnerabilities are further capped at 10% of the funds at risk. In cases of repeatable attacks, only the first attack is considered unless the smart contract cannot be upgraded or paused.  However, there is a minimum reward of <strong>USD 20 000</strong> for Critical smart contract bug reports. </p><p>Rewards for high smart contract vulnerabilities are further capped at 100% of the funds at risk. In cases of repeatable attacks, only the first attack is considered unless the smart contract cannot be upgraded or paused.  However, there is a minimum reward of <strong>USD 5 000</strong> for High smart contract bug reports. </p><p>Rewards for medium smart contract vulnerabilities with direct monetary impact are further capped at 100% of the funds at risk. In cases of repeatable attacks, only the first attack is considered unless the smart contract cannot be upgraded or paused.  However, there is a minimum reward of <strong>USD 1 000</strong> for Medium smart contract bug reports. All other valid Medium smart contract bug reports will be rewarded <strong>USD 1 000</strong>. </p><p>Known issues highlighted in the following audit reports are considered out of scope: </p><ul><li><a href=\"https://github.com/peckshield/publications/tree/master/audit_reports/PeckShield-Audit-Report-RadiantV2-v1.0.pdf\">https://github.com/peckshield/publications/tree/master/audit_reports/PeckShield-Audit-Report-RadiantV2-v1.0.pdf</a></li><li><a href=\"https://twitter.com/zokyo_io/status/1638856299629907973\">https://twitter.com/zokyo_io/status/1638856299629907973</a></li><li><a href=\"https://github.com/blocksecteam/audit-reports/blob/main/solidity/blocksec_radiant_v2.0.pdf\">https://github.com/blocksecteam/audit-reports/blob/main/solidity/blocksec_radiant_v2.0.pdf</a></li></ul><p>Payouts are handled by the <strong>Radiant</strong> team directly and are denominated in USD. However, payouts are done in <strong>USDC</strong>.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theoretical vulnerabilities without any proof or demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring physical access to the victim device\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to the local network of the victim\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reflected plain text injection ex: url parameters, path, etc.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This does not exclude reflected HTML injection with or without javascript\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This does not exclude persistent plain text injection\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Self-XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Captcha bypass using OCR without impact demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with no state modifying security impact (ex: logout CSRF)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as \\u201Chttponly\\u201D) without demonstration of impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Server-side non-confidential information disclosure such as IPs, server names, and most stack traces\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities used only to enumerate or confirm the existence of users or tenants\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of SSL/TLS best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DDoS vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Feature requests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Issues related to the frontend without concrete impact and PoC\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practices issues without concrete impact and PoC\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities primarily caused by browser/plugin defects\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Leakage of non sensitive api keys ex: etherscan, Infura, Alchemy, etc.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any vulnerability exploit requiring browser bugs for exploitation. ex: CSP bypass\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks that are executed against project assets \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p><strong>Websites and Apps</strong></p><ul><li>Theoretical vulnerabilities without any proof or demonstration</li><li>Attacks requiring physical access to the victim device</li><li>Attacks requiring access to the local network of the victim</li><li>Reflected plain text injection ex: url parameters, path, etc.<ul><li>This does not exclude reflected HTML injection with or without javascript</li><li>This does not exclude persistent plain text injection</li></ul></li><li>Self-XSS</li><li>Captcha bypass using OCR without impact demonstration</li><li>CSRF with no state modifying security impact (ex: logout CSRF)</li><li>Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”) without demonstration of impact</li><li>Server-side non-confidential information disclosure such as IPs, server names, and most stack traces</li><li>Vulnerabilities used only to enumerate or confirm the existence of users or tenants</li><li>Vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows</li><li>Lack of SSL/TLS best practices</li><li>DDoS vulnerabilities</li><li>Feature requests</li><li>Issues related to the frontend without concrete impact and PoC</li><li>Best practices issues without concrete impact and PoC</li><li>Vulnerabilities primarily caused by browser/plugin defects</li><li>Leakage of non sensitive api keys ex: etherscan, Infura, Alchemy, etc.</li><li>Any vulnerability exploit requiring browser bugs for exploitation. ex: CSP bypass</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks that are executed against project assets </li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of Radiant can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/radiant-capital/v2\"\n  }, \"https://github.com/radiant-capital/v2\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\"), mdx(\"p\", null, \"Though only the proxy contracts are listed as in-scope, current implementation and any further updates to the implementation contracts are considered in scope. When reporting a bug, please make sure to select the relevant proxy smart contract as the target.\"), mdx(\"p\", null, \"Impacts only apply to assets in active use by the project like contracts on mainnet or web/app assets used in production. Any impact that applies to assets not in active use, like test or mock files, are out-of-scope of the bug bounty program unless explicitly mentioned as in-scope.\"), mdx(\"p\", null, \"Smart Contracts - PoC, Smart Contract bug reports are required to include a runnable Proof of Concept (PoC) in order to prove impact. \"), mdx(\"p\", null, \"Web/App - Bug reports are required to include a Proof of Concept (PoC) in order to prove impact. In general, all blackbox testing is allowed unless it takes down the application/website. In case of such, the whitehat must ask for permission from the project in the Immunefi dashboard first if the attack would take down the application/website.\"), mdx(\"p\", null, \"For more information on PoCs please visit: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\"\n  }, \"Proof of Concept (PoC) Guidelines and Rules\")), mdx(\"p\", null, \"Whitehats are highly encouraged to review any potential subdomains and what specific port(s) are in scope. Even though the domain may be the same, different ports may point to different assets. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Ethical Behavior Requirements:\")), mdx(\"p\", null, \"Responsible disclosure is predicated on ethical behavior. These guidelines outline best practices for the community as whole, whether you are reporting, or the recipient of a report. By stating that you adhere to this policy, you\\u2019re claiming to handle vulnerability information ethically, and abide by the following:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Do not attempt to leverage a vulnerability, or information of its existence, as part of a financial trading strategy or otherwise for financial gain.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Do not attempt to compromise systems upon which development of a product relies; including but not limited to compromising development systems, accounts, domains, email etc.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Do not attempt to sell vulnerability information or exploits.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Do not ask for any form of compensation from an affected party. You may compensate a disclosing party if you would like to after all known vulnerability details have been disclosed.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Do not disclose a bug or vulnerability on mailing lists, public boards, forums, social media or any other channel prior to Responsibly Disclosing to the organizations you have a published relationship with\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Do not attempt any illegal acts, including phishing, physical attacks, DDoS, or any attempt to gain access without authorization\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"3rd Party Affected Projects:\")), mdx(\"p\", null, \"In the case where we become aware of security issues affecting other projects that have never affected Radiant, our intention is to inform those projects of security issues on a best effort basis.\"), mdx(\"p\", null, \"In the case where we fix a security issue in Radiant that also affects other projects, our intention is to engage in responsible disclosures with them as described in the adopted standard, subject to the deviations described in the deviations section below.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Deviations from the Standard:\")), mdx(\"p\", null, \"In the case of a counterfeiting or fund-stealing bug affecting Radiant, however, we might decide not to include those details with our reports to partners ahead of coordinated release, as long as we are sure that they are not vulnerable.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of Radiant can be found at <a href=\"https://github.com/radiant-capital/v2\">https://github.com/radiant-capital/v2</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.</p><p>Though only the proxy contracts are listed as in-scope, current implementation and any further updates to the implementation contracts are considered in scope. When reporting a bug, please make sure to select the relevant proxy smart contract as the target.</p><p>Impacts only apply to assets in active use by the project like contracts on mainnet or web/app assets used in production. Any impact that applies to assets not in active use, like test or mock files, are out-of-scope of the bug bounty program unless explicitly mentioned as in-scope.</p><p>Smart Contracts - PoC, Smart Contract bug reports are required to include a runnable Proof of Concept (PoC) in order to prove impact. </p><p>Web/App - Bug reports are required to include a Proof of Concept (PoC) in order to prove impact. In general, all blackbox testing is allowed unless it takes down the application/website. In case of such, the whitehat must ask for permission from the project in the Immunefi dashboard first if the attack would take down the application/website.</p><p>For more information on PoCs please visit: <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\">Proof of Concept (PoC) Guidelines and Rules</a></p><p>Whitehats are highly encouraged to review any potential subdomains and what specific port(s) are in scope. Even though the domain may be the same, different ports may point to different assets. </p><p><strong>Ethical Behavior Requirements:</strong></p><p>Responsible disclosure is predicated on ethical behavior. These guidelines outline best practices for the community as whole, whether you are reporting, or the recipient of a report. By stating that you adhere to this policy, you’re claiming to handle vulnerability information ethically, and abide by the following:</p><ul><li>Do not attempt to leverage a vulnerability, or information of its existence, as part of a financial trading strategy or otherwise for financial gain.</li><li>Do not attempt to compromise systems upon which development of a product relies; including but not limited to compromising development systems, accounts, domains, email etc.</li><li>Do not attempt to sell vulnerability information or exploits.</li><li>Do not ask for any form of compensation from an affected party. You may compensate a disclosing party if you would like to after all known vulnerability details have been disclosed.</li><li>Do not disclose a bug or vulnerability on mailing lists, public boards, forums, social media or any other channel prior to Responsibly Disclosing to the organizations you have a published relationship with</li><li>Do not attempt any illegal acts, including phishing, physical attacks, DDoS, or any attempt to gain access without authorization</li></ul><p><strong>3rd Party Affected Projects:</strong></p><p>In the case where we become aware of security issues affecting other projects that have never affected Radiant, our intention is to inform those projects of security issues on a best effort basis.</p><p>In the case where we fix a security issue in Radiant that also affects other projects, our intention is to engage in responsible disclosures with them as described in the adopted standard, subject to the deviations described in the deviations section below.</p><p><strong>Deviations from the Standard:</strong></p><p>In the case of a counterfeiting or fund-stealing bug affecting Radiant, however, we might decide not to include those details with our reports to partners ahead of coordinated release, as long as we are sure that they are not vulnerable.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

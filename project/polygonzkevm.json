{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "polygonzkevm",
      "slug": "polygonzkevm",
      "project": "Polygon zkEVM",
      "maxBounty": 1000000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2Wd4iAGsyjniyYY7hKSGFD/a5e83f836073a37efdf6856c1c11bd94/Polygon_zkEVM_logo_light.png",
      "launchDate": "2023-03-24T00:00-04:00",
      "updatedDate": "2023-10-16T08:34:41.500Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "blockchain_dlt",
          "level": "critical",
          "payout": "USD $50,000 up to USD $1,000,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "high",
          "payout": "USD $20,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $50,000 up to USD $1,000,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $20,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "1F7dnpw8gOe0MwJp4l6Voo",
          "type": "blockchain_dlt",
          "url": "https://github.com/0xPolygonHermez/zkevm-prover",
          "description": "Prover",
          "isPrimacyOfImpact": null
        },
        {
          "id": "2UwOsexZsiG9lrAtVOnoAx",
          "type": "blockchain_dlt",
          "url": "https://github.com/0xPolygonHermez/zkevm-proverjs",
          "description": "Provejs",
          "isPrimacyOfImpact": null
        },
        {
          "id": "4PFyleM9viBz40af2pADz0",
          "type": "blockchain_dlt",
          "url": "https://github.com/0xPolygonHermez/zkevm-node",
          "description": "Node",
          "isPrimacyOfImpact": null
        },
        {
          "id": "3zuKPQ0C8KwuMXr10WZa4p",
          "type": "blockchain_dlt",
          "url": "https://github.com/0xPolygonHermez/zkevm-rom",
          "description": "Rom",
          "isPrimacyOfImpact": null
        },
        {
          "id": "u5caTZRo0p4naQkYobbd7",
          "type": "blockchain_dlt",
          "url": "https://github.com/0xPolygonHermez/pil-stark",
          "description": "Pil-Stark",
          "isPrimacyOfImpact": null
        },
        {
          "id": "2cI2XP0vDKmxoj992PVQEd",
          "type": "blockchain_dlt",
          "url": "https://github.com/0xPolygonHermez/pilcom",
          "description": "Pilcom",
          "isPrimacyOfImpact": null
        },
        {
          "id": "3DbXZluBOa4aGTkxsUOQhz",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xbf7e1FA05e9c183aDD217fE56521bb7Eb2489e41",
          "description": "polygonZkEVM",
          "isPrimacyOfImpact": null
        },
        {
          "id": "011Iyx19QigpmLW90AAzmx",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x5ac4182A1dd41AeEf465E40B82fd326BF66AB82C",
          "description": "polygonZkEVMBridge",
          "isPrimacyOfImpact": null
        },
        {
          "id": "5pPekFZeoSA34z8rzoRuIK",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xbc1ea504fc54d078514efcca1f6860b5219b6bc3",
          "description": "polygonZkEVMGlobalExitRoot",
          "isPrimacyOfImpact": null
        },
        {
          "id": "1HltZf1tieThWdZHCCLBbY",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x4F9A0e7FD2Bf6067db6994CF12E4495Df938E6e9",
          "description": "fflonkVerifier",
          "isPrimacyOfImpact": null
        },
        {
          "id": "3mKqRkIpe0tjWgoAwZfroM",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xCB19eDdE626906eB1EE52357a27F62dd519608C2",
          "description": "polygonZkEVMDeployer",
          "isPrimacyOfImpact": null
        },
        {
          "id": "TaGe9NYopg5QehdqTYakL",
          "type": "smart_contract",
          "url": "https://zkevm.polygonscan.com/address/0xCB19eDdE626906eB1EE52357a27F62dd519608C2",
          "description": " polygonZkEVMDeployer",
          "isPrimacyOfImpact": null
        },
        {
          "id": "5g3T4xCgOVv1Fl8Xucetcf",
          "type": "smart_contract",
          "url": "https://zkevm.polygonscan.com/address/0x5ac4182A1dd41AeEf465E40B82fd326BF66AB82C",
          "description": "polygonZkEVMBridge",
          "isPrimacyOfImpact": null
        },
        {
          "id": "39XCW60SMxjiloK8h1ZGQP",
          "type": "smart_contract",
          "url": "https://zkevm.polygonscan.com/address/0x0200143Fa295EE4dffEF22eE2616c2E008D81688",
          "description": " PolygonZkEVMGlobalExitRootL2",
          "isPrimacyOfImpact": null
        },
        {
          "id": "1LxKZSzyWu30wUoAroDFgO",
          "type": "blockchain_dlt",
          "url": "https://immunefi.com",
          "description": "Primacy of Impact",
          "isPrimacyOfImpact": true
        },
        {
          "id": "2tIKX29PReGLcLWBSpqreY",
          "type": "smart_contract",
          "url": "https://immunefi.com",
          "description": "Primacy of Impact",
          "isPrimacyOfImpact": true
        }
      ],
      "impacts": [
        {
          "id": "4OntlZ3rXWBpHobQDECgOT",
          "title": "Network not being able to confirm new transactions (Total network shutdown requiring hard fork)",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "2Mok0ADsEHlH7q1ASZePDA",
          "title": "Unintended permanent chain split requiring hard fork (Network partition requiring hard fork)",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "fyudJur28Pbjql417wOqZ",
          "title": "Direct loss of funds",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "2hDB1TeuxXu0EcLZJAOM08",
          "title": "Permanent freezing of funds (fix requires hard fork)",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "29WvA4lEI3IJsvp9BcFVcl",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "7unSgMP70VFiDLTGyUFbBT",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "26WltyMJxI4OdsuMiyWwos",
          "title": "Protocol insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1EI5GsMTA9pWVORCiO07xE",
          "title": "Unintended chain split (Network partition)",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "3EaoOrAvaqGJxu0NpfXHnp",
          "title": "Transient consensus failures",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "1VZYc8nWguGxBrK2ozPzoA",
          "title": "Temporary freezing of funds for at least 1 week",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "Oy6tUnyxxbPkWLdT5e75l",
          "title": "Theft of user fees",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6ERKS9RT8HCebrQbusMbHJ",
          "title": "DoS and does not shut down the network",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "1KhAhw1QSJjNEnZgNsdAlR",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "6HavkyDS3usmmkoa89gPFm",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        }
      ],
      "programOverview": "Polygon zkEVM is the leading zero-knowledge scaling solution that is fully equivalent to an EVM. All existing smart contracts, developer toolings and wallets work seamlessly. Polygon zkEVM harnesses the power of zero-knowledge proofs in order to help reduce transaction costs and massively increase throughput, all while inheriting the security of Ethereum.\n\nBuilding dApps on Polygon zkEVM is similar to Ethereum. Simply switch to the Polygon zkEVM RPC and start building on a network with much higher throughput and lower fees. Polygon zkEVM provides a complete EVM-like experience for developers and users alike. \n\nFor more information about Polygon Labs and Polygon protocols, please visit [https://polygon.technology/](https://polygon.technology/). \n\n__For Whitehats:__ It is highly recommended that you review the details of this program in full. Although many Bug Bounty programs have standard terms and conditions, each also has their own unique details that are critical to your success.  \n\nPrior to submitting a report please review the Immunefi [Bug Report Template and Best Practices. ](https://immunefisupport.zendesk.com/hc/en-us/articles/12435277406481-Bug-Report-Template)\n",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table. Polygon Labs has sole discretion to determine whether a bug is in scope, the level of the bug, and the ultimate bounty amount.",
      "rewardsBody": "Please review how rewards are distributed based on the [Immunefi Vulnerability Severity Classification System V2.3](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3/). This is a simplified 4-level scale system with separate scales for Smart Contracts and Websites/Apps.\n\nPayouts over the lower bound reward are directly related to the direct funds at risk. If no funds are at risk, the Critical or High payouts are limited to the minimum, unless decided otherwise by Polygon Labs.\n\nFor the purposes of clarification, funds at risk refer to the proof of loss of funds.\n\nRewards for critical blockchain/DLT and smart contract bug reports will be further capped at 10% of direct funds at risk if the bug discovered is exploited. However, there is a minimum reward of USD 50 000.\n\n__Payouts and Payout Requirements__ \nPayouts are handled by the Polygon Labs team directly and are denominated in USD. Payouts are done in USDC or MATIC at the Polygon Labs teams' discretion. Polygon Labs commits to honoring payouts according to the terms set out in this program at the time of report submission, and to treat this program as the agreement and source of truth concerning bug reports and responsible disclosures. \n\nThis bug bounty program is only open to individuals who reside outside of the countries that are restricted by OFAC and by UNSC resolutions. If the individual is a US person, tax information may be required in order to properly issue a 1099.\n\nFor the purposes of determining report validity, this is a Primacy of Impact program.\n\nLearn more about report validity best practices here: [Best Practice - Primacy of Impact vs Primacy of Rules. ](https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact)\n\n__KYC Requirements__ \nPolygon Labs does have a Know Your Customer (KYC) requirement for bug bounty payouts. \n\n| KYC Info Required    |\n| ---------- |\n| Wallet Address    |\n| Passport (for Critical payouts)    |\n| Place of residence (for Critical payouts)    |\n\nKYC information is only required on confirmation of the validity of a bug report which Polygon Labs determines in its sole discretion.  \n\n__Responsible Publication__\n\nPolygon zkEVM adheres to __category 3__. This Policy determines what information whitehats are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our [Responsible Publication](https://immunefi.com/responsible-publication/) page.",
      "outOfScopeAndRules": "The following impacts and attack vectors are excluded from rewards by default for all Immunefi bug bounty programs: \n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist), except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\n  - Broken link hijacking is out of scope\n  - Loss of funds held by third parties\n\n__Smart Contracts and Blockchain/DLT__\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n  - Attacks using vulnerable, old or deprecated libraries, that are not exploitable\n\n__Prohibited Activities__\n\nThe following activities are prohibited by this bug bounty program. Violation of these rules can result in a temporary suspension or permanent ban from the Immunefi platform at the sole discretion of the Immunefi team, which may also result in: 1) the forfeiture and loss of access to all bug submissions, and 2) zero payout. \n\nPlease note that Immunefi has no tolerance for spam/low-quality/incomplete bug reports, “beg bounty” behavior, and misrepresentation of assets and severity. Immunefi exists to protect the global crypto community, not facilitate grift.\n\nProhibited: \n  - Any testing with mainnet or public testnet deployed code; all testing should be done on private testnets\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty\n  - [Any other actions prohibited by the Immunefi Rules](https://immunefi.com/rules/). These rules are subject to change at any time.  \n",
      "assetsBodyV2": "Impacts only apply to assets in active use by the project like contracts on mainnet or web/app assets used in production. \n\nFor GitHub repositories please ensure you are reviewing the latest published releases and not the default branch\n\nAny impact that applies to assets not in active use, like test or mock files, are out-of-scope of the bug bounty program unless explicitly mentioned as in-scope. \n\n__Blockchain/DLT__ \n\n  - Blockchain/DLT - PoC, Blockchain/DLT bug reports are to include a runnable Proof of Concept (PoC) in order to prove impact.  \n  - For more information on PoCs please visit: [Proof of Concept (PoC) Guidelines and Rules](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules)\n\n__Smart Contracts__ \n\n  - Smart Contracts - PoC, Smart Contract bug reports are to include a runnable Proof of Concept (PoC) in order to prove impact.  \n  - For more information on PoCs please visit: [Proof of Concept (PoC) Guidelines and Rules](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules)\n\n__Dev Environment and Documentation__ \nPolygon Labs has included dev documentation and/or instructions to help in reviewing code and looking for bugs:\n\n| Dev or Staging Environment Links    |\n| ---------- |\n| [https://wiki.polygon.technology/docs/zkEVM/develop/](https://wiki.polygon.technology/docs/zkEVM/develop/)        |\n\n__Impacts to other assets__ \nHackers are encouraged to submit issues outside of the outlined Impacts and Assets in Scope. \n\nIf Whitehats can demonstrate a critical impact on code in production for an asset not in scope, Polygon Labs encourages you to submit your bug report using the “primacy of impact exception” asset. \n",
      "impactsBody": "(For Blockchain/DLTR and Smart Contracts Only) This program is considered to be governed by Primacy of Impact. For more information on what this means visit: [Best Practice - Primacy of Impact vs Primacy of Rules](https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact). \n\n__Impacts to other assets__ \n\nHackers are encouraged to submit issues outside of those outlined Impacts and Assets in Scope. \n\nIf Whitehats can demonstrate a critical impact of code in production for an asset not in scope, Polygon Labs encourages you to submit your bug report using the “primacy of impact exception” asset as outlined below. \n\nThe final classification however takes into consideration the likelihood of the impact being achieved based on the table below. When submitting a bug report, select the original assigned impact level, but please be aware that its severity level may be reassigned based on the likelihood according to this table.\n\n| Impact \\ Likelihood     | Critical     | High     | Medium     | Low     | None     |\n| ---------- | ---------- | ---------- | ---------- | ---------- | ---------- |\n| Critical       | Critical       | Critical       | High       | Medium       | Informational       |\n| High       | High       | High       | High       | Medium       | Informational       |\n| Medium       | Medium       | Medium       | Medium       | Low       | Informational       |\n| Low       | Medium/Low       | Medium       | Low       | Low       | Informational       |\n| None       | Informational       | Informational       | Informational       | Informational       | Informational       |\n\nIn addition to Immunefi’s Vulnerability Severity Classification System, Polygon classifies vulnerabilities using the Common Vulnerability Scoring System (CVSS). In case of discrepancy, final determination is done by Polygon.\n",
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "L1",
          "L2"
        ],
        "projectType": [
          "Blockchain"
        ],
        "ecosystem": [
          "BSC",
          "Arbitrum"
        ],
        "programType": [
          "Blockchain/DLT",
          "Smart Contract"
        ],
        "language": [
          "C/C++",
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Blockchain/DLT"
        ],
        "blockchain_rewards": [
          {
            "level": "Critical",
            "payout": "USD $50,000 up to USD $1,000,000"
          },
          {
            "level": "High",
            "payout": "USD $20,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          }
        ],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $50,000 up to USD $1,000,000"
          },
          {
            "level": "High",
            "payout": "USD $20,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Polygon zkEVM is the leading zero-knowledge scaling solution that is fully equivalent to an EVM. All existing smart contracts, developer toolings and wallets work seamlessly. Polygon zkEVM harnesses the power of zero-knowledge proofs in order to help reduce transaction costs and massively increase throughput, all while inheriting the security of Ethereum.\"), mdx(\"p\", null, \"Building dApps on Polygon zkEVM is similar to Ethereum. Simply switch to the Polygon zkEVM RPC and start building on a network with much higher throughput and lower fees. Polygon zkEVM provides a complete EVM-like experience for developers and users alike. \"), mdx(\"p\", null, \"For more information about Polygon Labs and Polygon protocols, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://polygon.technology/\"\n  }, \"https://polygon.technology/\"), \". \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"For Whitehats:\"), \" It is highly recommended that you review the details of this program in full. Although many Bug Bounty programs have standard terms and conditions, each also has their own unique details that are critical to your success.  \"), mdx(\"p\", null, \"Prior to submitting a report please review the Immunefi \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/12435277406481-Bug-Report-Template\"\n  }, \"Bug Report Template and Best Practices. \")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Polygon zkEVM is the leading zero-knowledge scaling solution that is fully equivalent to an EVM. All existing smart contracts, developer toolings and wallets work seamlessly. Polygon zkEVM harnesses the power of zero-knowledge proofs in order to help reduce transaction costs and massively increase throughput, all while inheriting the security of Ethereum.</p><p>Building dApps on Polygon zkEVM is similar to Ethereum. Simply switch to the Polygon zkEVM RPC and start building on a network with much higher throughput and lower fees. Polygon zkEVM provides a complete EVM-like experience for developers and users alike. </p><p>For more information about Polygon Labs and Polygon protocols, please visit <a href=\"https://polygon.technology/\">https://polygon.technology/</a>. </p><p><strong>For Whitehats:</strong> It is highly recommended that you review the details of this program in full. Although many Bug Bounty programs have standard terms and conditions, each also has their own unique details that are critical to your success.  </p><p>Prior to submitting a report please review the Immunefi <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/12435277406481-Bug-Report-Template\">Bug Report Template and Best Practices. </a></p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table. Polygon Labs has sole discretion to determine whether a bug is in scope, the level of the bug, and the ultimate bounty amount.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table. Polygon Labs has sole discretion to determine whether a bug is in scope, the level of the bug, and the ultimate bounty amount.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Please review how rewards are distributed based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3/\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.3\"), \". This is a simplified 4-level scale system with separate scales for Smart Contracts and Websites/Apps.\"), mdx(\"p\", null, \"Payouts over the lower bound reward are directly related to the direct funds at risk. If no funds are at risk, the Critical or High payouts are limited to the minimum, unless decided otherwise by Polygon Labs.\"), mdx(\"p\", null, \"For the purposes of clarification, funds at risk refer to the proof of loss of funds.\"), mdx(\"p\", null, \"Rewards for critical blockchain/DLT and smart contract bug reports will be further capped at 10% of direct funds at risk if the bug discovered is exploited. However, there is a minimum reward of USD 50 000.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Payouts and Payout Requirements\"), \"\\nPayouts are handled by the Polygon Labs team directly and are denominated in USD. Payouts are done in USDC or MATIC at the Polygon Labs teams' discretion. Polygon Labs commits to honoring payouts according to the terms set out in this program at the time of report submission, and to treat this program as the agreement and source of truth concerning bug reports and responsible disclosures. \"), mdx(\"p\", null, \"This bug bounty program is only open to individuals who reside outside of the countries that are restricted by OFAC and by UNSC resolutions. If the individual is a US person, tax information may be required in order to properly issue a 1099.\"), mdx(\"p\", null, \"For the purposes of determining report validity, this is a Primacy of Impact program.\"), mdx(\"p\", null, \"Learn more about report validity best practices here: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact\"\n  }, \"Best Practice - Primacy of Impact vs Primacy of Rules. \")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"KYC Requirements\"), \"\\nPolygon Labs does have a Know Your Customer (KYC) requirement for bug bounty payouts. \"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"KYC Info Required\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Wallet Address\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Passport (for Critical payouts)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Place of residence (for Critical payouts)\")))), mdx(\"p\", null, \"KYC information is only required on confirmation of the validity of a bug report which Polygon Labs determines in its sole discretion.  \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Responsible Publication\")), mdx(\"p\", null, \"Polygon zkEVM adheres to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"category 3\"), \". This Policy determines what information whitehats are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/responsible-publication/\"\n  }, \"Responsible Publication\"), \" page.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Please review how rewards are distributed based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3/\">Immunefi Vulnerability Severity Classification System V2.3</a>. This is a simplified 4-level scale system with separate scales for Smart Contracts and Websites/Apps.</p><p>Payouts over the lower bound reward are directly related to the direct funds at risk. If no funds are at risk, the Critical or High payouts are limited to the minimum, unless decided otherwise by Polygon Labs.</p><p>For the purposes of clarification, funds at risk refer to the proof of loss of funds.</p><p>Rewards for critical blockchain/DLT and smart contract bug reports will be further capped at 10% of direct funds at risk if the bug discovered is exploited. However, there is a minimum reward of USD 50 000.</p><p><strong>Payouts and Payout Requirements</strong>\nPayouts are handled by the Polygon Labs team directly and are denominated in USD. Payouts are done in USDC or MATIC at the Polygon Labs teams&#x27; discretion. Polygon Labs commits to honoring payouts according to the terms set out in this program at the time of report submission, and to treat this program as the agreement and source of truth concerning bug reports and responsible disclosures. </p><p>This bug bounty program is only open to individuals who reside outside of the countries that are restricted by OFAC and by UNSC resolutions. If the individual is a US person, tax information may be required in order to properly issue a 1099.</p><p>For the purposes of determining report validity, this is a Primacy of Impact program.</p><p>Learn more about report validity best practices here: <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact\">Best Practice - Primacy of Impact vs Primacy of Rules. </a></p><p><strong>KYC Requirements</strong>\nPolygon Labs does have a Know Your Customer (KYC) requirement for bug bounty payouts. </p><table><thead><tr><th>KYC Info Required</th></tr></thead><tbody><tr><td>Wallet Address</td></tr><tr><td>Passport (for Critical payouts)</td></tr><tr><td>Place of residence (for Critical payouts)</td></tr></tbody></table><p>KYC information is only required on confirmation of the validity of a bug report which Polygon Labs determines in its sole discretion.  </p><p><strong>Responsible Publication</strong></p><p>Polygon zkEVM adheres to <strong>category 3</strong>. This Policy determines what information whitehats are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our <a href=\"https://immunefi.com/responsible-publication/\">Responsible Publication</a> page.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following impacts and attack vectors are excluded from rewards by default for all Immunefi bug bounty programs: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist), except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Broken link hijacking is out of scope\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of funds held by third parties\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain/DLT\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks using vulnerable, old or deprecated libraries, that are not exploitable\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Prohibited Activities\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program. Violation of these rules can result in a temporary suspension or permanent ban from the Immunefi platform at the sole discretion of the Immunefi team, which may also result in: 1) the forfeiture and loss of access to all bug submissions, and 2) zero payout. \"), mdx(\"p\", null, \"Please note that Immunefi has no tolerance for spam/low-quality/incomplete bug reports, \\u201Cbeg bounty\\u201D behavior, and misrepresentation of assets and severity. Immunefi exists to protect the global crypto community, not facilitate grift.\"), mdx(\"p\", null, \"Prohibited: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet deployed code; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://immunefi.com/rules/\"\n  }, \"Any other actions prohibited by the Immunefi Rules\"), \". These rules are subject to change at any time.  \")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following impacts and attack vectors are excluded from rewards by default for all Immunefi bug bounty programs: </p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist), except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible</li><li>Broken link hijacking is out of scope</li><li>Loss of funds held by third parties</li></ul><p><strong>Smart Contracts and Blockchain/DLT</strong></p><ul><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li><li>Attacks using vulnerable, old or deprecated libraries, that are not exploitable</li></ul><p><strong>Prohibited Activities</strong></p><p>The following activities are prohibited by this bug bounty program. Violation of these rules can result in a temporary suspension or permanent ban from the Immunefi platform at the sole discretion of the Immunefi team, which may also result in: 1) the forfeiture and loss of access to all bug submissions, and 2) zero payout. </p><p>Please note that Immunefi has no tolerance for spam/low-quality/incomplete bug reports, “beg bounty” behavior, and misrepresentation of assets and severity. Immunefi exists to protect the global crypto community, not facilitate grift.</p><p>Prohibited: </p><ul><li>Any testing with mainnet or public testnet deployed code; all testing should be done on private testnets</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li><li><a href=\"https://immunefi.com/rules/\">Any other actions prohibited by the Immunefi Rules</a>. These rules are subject to change at any time.  </li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Impacts only apply to assets in active use by the project like contracts on mainnet or web/app assets used in production. \"), mdx(\"p\", null, \"For GitHub repositories please ensure you are reviewing the latest published releases and not the default branch\"), mdx(\"p\", null, \"Any impact that applies to assets not in active use, like test or mock files, are out-of-scope of the bug bounty program unless explicitly mentioned as in-scope. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Blockchain/DLT\"), \" \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Blockchain/DLT - PoC, Blockchain/DLT bug reports are to include a runnable Proof of Concept (PoC) in order to prove impact.  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For more information on PoCs please visit: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\"\n  }, \"Proof of Concept (PoC) Guidelines and Rules\"))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts\"), \" \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contracts - PoC, Smart Contract bug reports are to include a runnable Proof of Concept (PoC) in order to prove impact.  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For more information on PoCs please visit: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\"\n  }, \"Proof of Concept (PoC) Guidelines and Rules\"))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Dev Environment and Documentation\"), \"\\nPolygon Labs has included dev documentation and/or instructions to help in reviewing code and looking for bugs:\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Dev or Staging Environment Links\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://wiki.polygon.technology/docs/zkEVM/develop/\"\n  }, \"https://wiki.polygon.technology/docs/zkEVM/develop/\"))))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Impacts to other assets\"), \"\\nHackers are encouraged to submit issues outside of the outlined Impacts and Assets in Scope. \"), mdx(\"p\", null, \"If Whitehats can demonstrate a critical impact on code in production for an asset not in scope, Polygon Labs encourages you to submit your bug report using the \\u201Cprimacy of impact exception\\u201D asset. \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Impacts only apply to assets in active use by the project like contracts on mainnet or web/app assets used in production. </p><p>For GitHub repositories please ensure you are reviewing the latest published releases and not the default branch</p><p>Any impact that applies to assets not in active use, like test or mock files, are out-of-scope of the bug bounty program unless explicitly mentioned as in-scope. </p><p><strong>Blockchain/DLT</strong> </p><ul><li>Blockchain/DLT - PoC, Blockchain/DLT bug reports are to include a runnable Proof of Concept (PoC) in order to prove impact.  </li><li>For more information on PoCs please visit: <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\">Proof of Concept (PoC) Guidelines and Rules</a></li></ul><p><strong>Smart Contracts</strong> </p><ul><li>Smart Contracts - PoC, Smart Contract bug reports are to include a runnable Proof of Concept (PoC) in order to prove impact.  </li><li>For more information on PoCs please visit: <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\">Proof of Concept (PoC) Guidelines and Rules</a></li></ul><p><strong>Dev Environment and Documentation</strong>\nPolygon Labs has included dev documentation and/or instructions to help in reviewing code and looking for bugs:</p><table><thead><tr><th>Dev or Staging Environment Links</th></tr></thead><tbody><tr><td><a href=\"https://wiki.polygon.technology/docs/zkEVM/develop/\">https://wiki.polygon.technology/docs/zkEVM/develop/</a></td></tr></tbody></table><p><strong>Impacts to other assets</strong>\nHackers are encouraged to submit issues outside of the outlined Impacts and Assets in Scope. </p><p>If Whitehats can demonstrate a critical impact on code in production for an asset not in scope, Polygon Labs encourages you to submit your bug report using the “primacy of impact exception” asset. </p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"(For Blockchain/DLTR and Smart Contracts Only) This program is considered to be governed by Primacy of Impact. For more information on what this means visit: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact\"\n  }, \"Best Practice - Primacy of Impact vs Primacy of Rules\"), \". \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Impacts to other assets\"), \" \"), mdx(\"p\", null, \"Hackers are encouraged to submit issues outside of those outlined Impacts and Assets in Scope. \"), mdx(\"p\", null, \"If Whitehats can demonstrate a critical impact of code in production for an asset not in scope, Polygon Labs encourages you to submit your bug report using the \\u201Cprimacy of impact exception\\u201D asset as outlined below. \"), mdx(\"p\", null, \"The final classification however takes into consideration the likelihood of the impact being achieved based on the table below. When submitting a bug report, select the original assigned impact level, but please be aware that its severity level may be reassigned based on the likelihood according to this table.\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Impact \\\\ Likelihood\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Critical\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"High\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Medium\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Low\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"None\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Critical\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Critical\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Critical\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"High\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Medium\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"High\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"High\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"High\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"High\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Medium\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Medium\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Medium\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Medium\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Medium\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Low\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Low\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Medium/Low\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Medium\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Low\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Low\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"None\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Informational\")))), mdx(\"p\", null, \"In addition to Immunefi\\u2019s Vulnerability Severity Classification System, Polygon classifies vulnerabilities using the Common Vulnerability Scoring System (CVSS). In case of discrepancy, final determination is done by Polygon.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>(For Blockchain/DLTR and Smart Contracts Only) This program is considered to be governed by Primacy of Impact. For more information on what this means visit: <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact\">Best Practice - Primacy of Impact vs Primacy of Rules</a>. </p><p><strong>Impacts to other assets</strong> </p><p>Hackers are encouraged to submit issues outside of those outlined Impacts and Assets in Scope. </p><p>If Whitehats can demonstrate a critical impact of code in production for an asset not in scope, Polygon Labs encourages you to submit your bug report using the “primacy of impact exception” asset as outlined below. </p><p>The final classification however takes into consideration the likelihood of the impact being achieved based on the table below. When submitting a bug report, select the original assigned impact level, but please be aware that its severity level may be reassigned based on the likelihood according to this table.</p><table><thead><tr><th>Impact \\ Likelihood</th><th>Critical</th><th>High</th><th>Medium</th><th>Low</th><th>None</th></tr></thead><tbody><tr><td>Critical</td><td>Critical</td><td>Critical</td><td>High</td><td>Medium</td><td>Informational</td></tr><tr><td>High</td><td>High</td><td>High</td><td>High</td><td>Medium</td><td>Informational</td></tr><tr><td>Medium</td><td>Medium</td><td>Medium</td><td>Medium</td><td>Low</td><td>Informational</td></tr><tr><td>Low</td><td>Medium/Low</td><td>Medium</td><td>Low</td><td>Low</td><td>Informational</td></tr><tr><td>None</td><td>Informational</td><td>Informational</td><td>Informational</td><td>Informational</td><td>Informational</td></tr></tbody></table><p>In addition to Immunefi’s Vulnerability Severity Classification System, Polygon classifies vulnerabilities using the Common Vulnerability Scoring System (CVSS). In case of discrepancy, final determination is done by Polygon.</p>",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "yieldprotocol",
      "slug": "yieldprotocol",
      "project": "Yield Protocol",
      "maxBounty": 500000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2kWvHa5ZhMGP6OVynxoCwG/16d81ac8323e0ec125ad7486c8ea9e28/Yield_Protocol_logo_update_01_2022.jpg",
      "launchDate": "2021-03-01T00:00-07:00",
      "updatedDate": "2022-11-28T11:55:38.065Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to USD $500,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $15,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $8,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "none",
          "payout": "USD $100",
          "pocRequired": false
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "73qkvzHSFa5E6jBIBKQ00O",
          "type": "smart_contract",
          "url": "https://github.com/yieldprotocol/vault-v2",
          "description": "Yield Protocol core contracts"
        },
        {
          "id": "1XZ1Qpi9pJxVZwm7slyUwS",
          "type": "smart_contract",
          "url": "https://github.com/yieldprotocol/yieldspace-tv",
          "description": "YieldSpace AMM"
        },
        {
          "id": "7l4khtmSJsw1mUtyoTvLVA",
          "type": "smart_contract",
          "url": "https://github.com/yieldprotocol/yield-utils-v2",
          "description": "Utils"
        },
        {
          "id": "vYdPgNmRc2O9iueXyTcdb",
          "type": "smart_contract",
          "url": "https://github.com/yieldprotocol/strategy-v2",
          "description": "Liquidity Providing strategies"
        }
      ],
      "impacts": [
        {
          "id": "7AeijPSPvsz7FHPcddEVh2",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield, and no lower than $100,000 in value",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1UQwxltFrErXmVJG1cd6tz",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5qxaLu3cujaG3savg0Hl2j",
          "title": "Protocol Insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1ZvpWvI2nG49I5P2rUItxF",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "7kG2DPK5qlAF210CJgKali",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "32JX2QjZznGjPersHEcIZi",
          "title": "Temporary freezing of funds",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "3r510hYIJftvd4r1VnUrd7",
          "title": "Miner-extractable value (MEV)",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "5qbVM6thCvFb1tzgnWwbzq",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "JwOqn5S8jnhoTuQ9m8BjL",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "7cP74OI66PSC3TOKFeq53k",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5TKn13VnVl4hh05lThK3Mh",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3AnmbQ2XipO9rbjBs8v7zH",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "0XOByrjKTOFMGmNa5HjHM",
          "title": "Contract fails to deliver promised returns, but doesn't lose value",
          "type": "smart_contract",
          "severity": "low"
        },
        {
          "id": "77aisoa9AGO7rG3PXbW13l",
          "title": "Function incorrect as to specification",
          "type": "smart_contract",
          "severity": "low"
        },
        {
          "id": "1DVzvUWBYAlor2UyZRPd1Q",
          "title": "Unexpected but harmless behaviour",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "Yield Protocol brings collateralized fixed-rate, fixed-term borrowing and\nlending and interest rate markets to decentralized finance.\n\nThis solves a major pain point around today's DeFi lending protocols:\npredictable interest rates. Existing DeFi protocols offer only variable\ninterest rates. These protocols may experience interest rate volatility that\ncan make it difficult for you to plan for the future, make investment\ndecisions, and properly hedge risk when borrowing and lending.\n\nYield Protocol allows you to have a \"set and forget\" experience, instead of\nconstantly rebalancing your assets across DeFi in an effort to minimize your\nborrow rates or maximize your lending yields. We accomplish that with a new\nprimitive, fixed yield tokens, or fyTokens for short. fyTokens are\nEthereum-based tokens (ERC20) that may be redeemed one-for-one for a target\nasset after a predetermined maturity date.\n\nThe bug bounty program is focused around its smart contracts and the prevention\nof loss of user funds.",
      "prioritizedVulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nCritical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of __USD 50 000__ for Critical bug reports. \n\n__Informational__\nAny vulnerabilities involving documentation errors, natspec errors, and code clarity are considered informational. \n\nPayouts are handled by the __Yield Protocol__ founding team directly and are denominated in USD. Payouts are done in __USDC__ or __Dai__. ",
      "outOfScopeAndRules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Issues included in the protocol issue registry\n  - Governance attacks or errors already described on our governance attack list, or not described but with the same preconditions and affecting the same contracts in equal or lesser degree than the attacks described.\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n\n__Resources__\n  - Website: [https://yieldprotocol.com/](https://yieldprotocol.com/)\n  - Application: [https://app.yieldprotocol.com/](https://app.yieldprotocol.com/)\n  - Documentation: [https://docs.yieldprotocol.com/](https://docs.yieldprotocol.com/)\n  - Addresses: [https://docs.yieldprotocol.com/#/developers/addresses](https://docs.yieldprotocol.com/#/developers/addresses)\n  - Batch operation: [https://docs.yieldprotocol.com/#/developers/feature_building](https://docs.yieldprotocol.com/#/developers/feature_building)\n  - Known governance attack vectors: [https://docs.yieldprotocol.com/#/operations/how_to_hack](https://docs.yieldprotocol.com/#/operations/how_to_hack)",
      "assetsBodyV2": "Any contracts inside directories named “test”, “draft” or “deprecated” are out of scope.\n",
      "impactsBody": "These accepted impacts are then based on the severity classification system of this bug bounty program. When submitting a bug report, please select the severity level you feel best corresponds to the severity classification system as long as the impact itself is one of the listed items.\n\nFor each precondition for a vulnerability, please downgrade the severity by one degree. For example, a critical vulnerability that requires governance permissions would be downgraded to a high vulnerability.\n\nThe Yield Protocol targets an unusual level of user protection, in which we accept users can suffer losses if they interact with the protocol in unexpected ways. Please read about batch operation in the resources section.",
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Lending"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Rust",
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $500,000"
          },
          {
            "level": "High",
            "payout": "USD $15,000"
          },
          {
            "level": "Medium",
            "payout": "USD $8,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          },
          {
            "level": "Informational",
            "payout": "USD $100"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Yield Protocol brings collateralized fixed-rate, fixed-term borrowing and\\nlending and interest rate markets to decentralized finance.\"), mdx(\"p\", null, \"This solves a major pain point around today's DeFi lending protocols:\\npredictable interest rates. Existing DeFi protocols offer only variable\\ninterest rates. These protocols may experience interest rate volatility that\\ncan make it difficult for you to plan for the future, make investment\\ndecisions, and properly hedge risk when borrowing and lending.\"), mdx(\"p\", null, \"Yield Protocol allows you to have a \\\"set and forget\\\" experience, instead of\\nconstantly rebalancing your assets across DeFi in an effort to minimize your\\nborrow rates or maximize your lending yields. We accomplish that with a new\\nprimitive, fixed yield tokens, or fyTokens for short. fyTokens are\\nEthereum-based tokens (ERC20) that may be redeemed one-for-one for a target\\nasset after a predetermined maturity date.\"), mdx(\"p\", null, \"The bug bounty program is focused around its smart contracts and the prevention\\nof loss of user funds.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Yield Protocol brings collateralized fixed-rate, fixed-term borrowing and\nlending and interest rate markets to decentralized finance.</p><p>This solves a major pain point around today&#x27;s DeFi lending protocols:\npredictable interest rates. Existing DeFi protocols offer only variable\ninterest rates. These protocols may experience interest rate volatility that\ncan make it difficult for you to plan for the future, make investment\ndecisions, and properly hedge risk when borrowing and lending.</p><p>Yield Protocol allows you to have a &quot;set and forget&quot; experience, instead of\nconstantly rebalancing your assets across DeFi in an effort to minimize your\nborrow rates or maximize your lending yields. We accomplish that with a new\nprimitive, fixed yield tokens, or fyTokens for short. fyTokens are\nEthereum-based tokens (ERC20) that may be redeemed one-for-one for a target\nasset after a predetermined maturity date.</p><p>The bug bounty program is focused around its smart contracts and the prevention\nof loss of user funds.</p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are especially interested in receiving and rewarding vulnerabilities of the\\nfollowing types:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts/Blockchain:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Re-entrancy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Logic errors\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including user authentication errors\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Solidity/EVM details not considered\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including integer over-/under-flow\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including unhandled exceptions\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusting trust/dependency vulnerabilities\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including composability vulnerabilities\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Oracle failure/manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Novel governance attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Economic/financial attacks\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Congestion and scalability\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including running out of gas\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including block stuffing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including susceptibility to frontrunning\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Consensus failures\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cryptography problems\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Signature malleability\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to replay attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak randomness\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak encryption\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to block timestamp manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing access controls / unprotected internal or debugging interfaces\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:</p><p><strong>Smart Contracts/Blockchain:</strong></p><ul><li>Re-entrancy</li><li>Logic errors<ul><li>including user authentication errors</li></ul></li><li>Solidity/EVM details not considered<ul><li>including integer over-/under-flow</li><li>including unhandled exceptions</li></ul></li><li>Trusting trust/dependency vulnerabilities<ul><li>including composability vulnerabilities</li></ul></li><li>Oracle failure/manipulation</li><li>Novel governance attacks</li><li>Economic/financial attacks<ul><li>including flash loan attacks</li></ul></li><li>Congestion and scalability<ul><li>including running out of gas</li><li>including block stuffing</li><li>including susceptibility to frontrunning</li></ul></li><li>Consensus failures</li><li>Cryptography problems<ul><li>Signature malleability</li><li>Susceptibility to replay attacks</li><li>Weak randomness</li><li>Weak encryption</li></ul></li><li>Susceptibility to block timestamp manipulation</li><li>Missing access controls / unprotected internal or debugging interfaces</li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \"), mdx(\"p\", null, \"Critical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 50 000\"), \" for Critical bug reports. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Informational\"), \"\\nAny vulnerabilities involving documentation errors, natspec errors, and code clarity are considered informational. \"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Yield Protocol\"), \" founding team directly and are denominated in USD. Payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \" or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Dai\"), \". \"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. </p><p>Critical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of <strong>USD 50 000</strong> for Critical bug reports. </p><p><strong>Informational</strong>\nAny vulnerabilities involving documentation errors, natspec errors, and code clarity are considered informational. </p><p>Payouts are handled by the <strong>Yield Protocol</strong> founding team directly and are denominated in USD. Payouts are done in <strong>USDC</strong> or <strong>Dai</strong>. </p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"The following vulnerabilities are excluded from the rewards for this bug\\nbounty program:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Issues included in the protocol issue registry\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Governance attacks or errors already described on our governance attack list, or not described but with the same preconditions and affecting the same contracts in equal or lesser degree than the attacks described.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"The following activities are prohibited by bug bounty program:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be\\ndone on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees\\nand/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser\\nextensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Resources\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Website: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://yieldprotocol.com/\"\n  }, \"https://yieldprotocol.com/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Application: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://app.yieldprotocol.com/\"\n  }, \"https://app.yieldprotocol.com/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Documentation: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.yieldprotocol.com/\"\n  }, \"https://docs.yieldprotocol.com/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Addresses: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.yieldprotocol.com/#/developers/addresses\"\n  }, \"https://docs.yieldprotocol.com/#/developers/addresses\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Batch operation: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.yieldprotocol.com/#/developers/feature_building\"\n  }, \"https://docs.yieldprotocol.com/#/developers/feature_building\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Known governance attack vectors: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.yieldprotocol.com/#/operations/how_to_hack\"\n  }, \"https://docs.yieldprotocol.com/#/operations/how_to_hack\"))));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p><strong>The following vulnerabilities are excluded from the rewards for this bug\nbounty program:</strong></p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Issues included in the protocol issue registry</li><li>Governance attacks or errors already described on our governance attack list, or not described but with the same preconditions and affecting the same contracts in equal or lesser degree than the attacks described.</li><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li></ul><p><strong>The following activities are prohibited by bug bounty program:</strong></p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be\ndone on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees\nand/or customers</li><li>Any testing with third party systems and applications (e.g. browser\nextensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul><p><strong>Resources</strong></p><ul><li>Website: <a href=\"https://yieldprotocol.com/\">https://yieldprotocol.com/</a></li><li>Application: <a href=\"https://app.yieldprotocol.com/\">https://app.yieldprotocol.com/</a></li><li>Documentation: <a href=\"https://docs.yieldprotocol.com/\">https://docs.yieldprotocol.com/</a></li><li>Addresses: <a href=\"https://docs.yieldprotocol.com/#/developers/addresses\">https://docs.yieldprotocol.com/#/developers/addresses</a></li><li>Batch operation: <a href=\"https://docs.yieldprotocol.com/#/developers/feature_building\">https://docs.yieldprotocol.com/#/developers/feature_building</a></li><li>Known governance attack vectors: <a href=\"https://docs.yieldprotocol.com/#/operations/how_to_hack\">https://docs.yieldprotocol.com/#/operations/how_to_hack</a></li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Any contracts inside directories named \\u201Ctest\\u201D, \\u201Cdraft\\u201D or \\u201Cdeprecated\\u201D are out of scope.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Any contracts inside directories named “test”, “draft” or “deprecated” are out of scope.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"These accepted impacts are then based on the severity classification system of this bug bounty program. When submitting a bug report, please select the severity level you feel best corresponds to the severity classification system as long as the impact itself is one of the listed items.\"), mdx(\"p\", null, \"For each precondition for a vulnerability, please downgrade the severity by one degree. For example, a critical vulnerability that requires governance permissions would be downgraded to a high vulnerability.\"), mdx(\"p\", null, \"The Yield Protocol targets an unusual level of user protection, in which we accept users can suffer losses if they interact with the protocol in unexpected ways. Please read about batch operation in the resources section.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>These accepted impacts are then based on the severity classification system of this bug bounty program. When submitting a bug report, please select the severity level you feel best corresponds to the severity classification system as long as the impact itself is one of the listed items.</p><p>For each precondition for a vulnerability, please downgrade the severity by one degree. For example, a critical vulnerability that requires governance permissions would be downgraded to a high vulnerability.</p><p>The Yield Protocol targets an unusual level of user protection, in which we accept users can suffer losses if they interact with the protocol in unexpected ways. Please read about batch operation in the resources section.</p>",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

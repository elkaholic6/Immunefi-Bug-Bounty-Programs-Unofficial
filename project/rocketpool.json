{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "rocketpool",
      "slug": "rocketpool",
      "project": "Rocket Pool",
      "maxBounty": 250000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3q1XTgKfkqJW9nCVPRp7r5/8afa695989d14412d92dc2e26d4c1a47/Rocket_Pool__1_.jpeg",
      "launchDate": "2021-09-08T09:00-05:00",
      "updatedDate": "2023-04-14T01:52:27.014Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $250,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $25,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "4AxowpWhoaiRu0vQw6gvdV",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/util/AddressSetStorage.sol",
          "description": "AddressSetStorage.sol"
        },
        {
          "id": "6d9crt5pudDbaOBy6f021g",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/util/AddressQueueStorage.sol",
          "description": "AddressQueueStorage.sol"
        },
        {
          "id": "L34KDYDNcAutDfekklCj3",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/dao/RocketDAOProposal.sol",
          "description": "RocketDAOProposal.sol"
        },
        {
          "id": "3Gs0VxNlAtlIY23PdtjJBg",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/dao/protocol/RocketDAOProtocolProposals.sol",
          "description": "RocketDAOProtocolProposals.sol"
        },
        {
          "id": "y1sgpz0EEuDSSbe7dOWs2",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/dao/protocol/settings/RocketDAOProtocolSettingsDeposit.sol",
          "description": "RocketDAOProtocolSettingsDeposit.sol"
        },
        {
          "id": "AtD4rdctPrvhZ80NkBbxC",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/dao/protocol/settings/RocketDAOProtocolSettingsMinipool.sol",
          "description": "RocketDAOProtocolSettingsMinipool.sol"
        },
        {
          "id": "1veLRPWrXpT7aIFP0qgySk",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/dao/protocol/settings/RocketDAOProtocolSettingsInflation.sol",
          "description": "RocketDAOProtocolSettingsInflation.sol"
        },
        {
          "id": "6mzItvWWMEUFQY5nCRvYbm",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/dao/protocol/settings/RocketDAOProtocolSettingsNetwork.sol",
          "description": "RocketDAOProtocolSettingsNetwork.sol"
        },
        {
          "id": "3hbqSC78UCffMv92herxSt",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/dao/protocol/settings/RocketDAOProtocolSettingsRewards.sol",
          "description": "RocketDAOProtocolSettingsRewards.sol"
        },
        {
          "id": "4dI52EkMfegY0MaXISwqC5",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/dao/protocol/settings/RocketDAOProtocolSettingsNode.sol",
          "description": "RocketDAOProtocolSettingsNode.sol"
        },
        {
          "id": "1HwX29MWXnG6E7C7bjsWE7",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/dao/protocol/settings/RocketDAOProtocolSettings.sol",
          "description": "RocketDAOProtocolSettings.sol"
        },
        {
          "id": "2PYUPYEJKCXFCyaihGeQCM",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/dao/protocol/settings/RocketDAOProtocolSettingsAuction.sol",
          "description": "RocketDAOProtocolSettingsAuction.sol"
        },
        {
          "id": "5nsctw7Lw5omdUb4VVkG3T",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/dao/protocol/RocketDAOProtocolActions.sol",
          "description": "RocketDAOProtocolActions.sol"
        },
        {
          "id": "7KPxHGDxv2Vqg1BQ9Hhocb",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/dao/protocol/RocketDAOProtocol.sol",
          "description": "RocketDAOProtocol.sol"
        },
        {
          "id": "341Dl7OMWhA8MzvifNcAuN",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/dao/node/settings/RocketDAONodeTrustedSettingsMinipool.sol",
          "description": "RocketDAONodeTrustedSettingsMinipool.sol"
        },
        {
          "id": "S6ab8ZGgbo7KdYyhT1IYs",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/dao/node/settings/RocketDAONodeTrustedSettings.sol",
          "description": "RocketDAONodeTrustedSettings.sol"
        },
        {
          "id": "5fl0WjiZeR1SCeXOmWQ3Oa",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/dao/node/settings/RocketDAONodeTrustedSettingsMembers.sol",
          "description": "RocketDAONodeTrustedSettingsMembers.sol"
        },
        {
          "id": "4fZilIbHpPXfSspJF9pUgv",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/dao/node/settings/RocketDAONodeTrustedSettingsRewards.sol",
          "description": "RocketDAONodeTrustedSettingsRewards.sol"
        },
        {
          "id": "10dkdu3HgG4y47kDkqSLbe",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/dao/node/settings/RocketDAONodeTrustedSettingsProposals.sol",
          "description": "RocketDAONodeTrustedSettingsProposals.sol"
        },
        {
          "id": "1goF7uk6Cfgx49hOYb3brN",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/dao/node/RocketDAONodeTrusted.sol",
          "description": "RocketDAONodeTrusted.sol"
        },
        {
          "id": "671WpfHaUSLgA51YJQcU7l",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/dao/node/RocketDAONodeTrustedProposals.sol",
          "description": "RocketDAONodeTrustedProposals.sol"
        },
        {
          "id": "2t9KzxDvVKsT6PDjkglEgP",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/dao/node/RocketDAONodeTrustedActions.so",
          "description": "RocketDAONodeTrustedActions.sol"
        },
        {
          "id": "7DznIPifoxfinIcRqIzEZs",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/dao/node/RocketDAONodeTrustedUpgrade.sol",
          "description": "RocketDAONodeTrustedUpgrade.sol"
        },
        {
          "id": "5DDjiMDKyIcEE4QAh4YMJZ",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/RocketVault.sol",
          "description": "RocketVault.sol"
        },
        {
          "id": "33RgRrbIJflLscAeAjAppa",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/RocketBase.sol",
          "description": "RocketBase.sol"
        },
        {
          "id": "1M5apaoTXU1RaYnCb7rJcV",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/RocketStorage.sol",
          "description": "RocketStorage.sol"
        },
        {
          "id": "7m6IxioVCwwTbrnH6TIu4p",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/node/RocketNodeDeposit.sol",
          "description": "RocketNodeDeposit.sol"
        },
        {
          "id": "7IIFWBY4Peo85otnfyJ44r",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/node/RocketNodeStaking.sol",
          "description": "RocketNodeStaking.sol"
        },
        {
          "id": "2wz9iZTSNgie5jt1qwQ29b",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/node/RocketNodeDistributorDelegate.sol",
          "description": "RocketNodeDistributorDelegate.sol"
        },
        {
          "id": "5qxkzU5qjl2VirHl54UHpu",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/node/RocketNodeDistributorFactory.sol",
          "description": "RocketNodeDistributorFactory.sol"
        },
        {
          "id": "6xg65J9UkxoJ4G5KEWKKzT",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/node/RocketNodeDistributorStorageLayout.sol",
          "description": "RocketNodeDistributorStorageLayout.sol"
        },
        {
          "id": "4OFT8574GzMjn8Phpvyzjs",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/node/RocketNodeManager.sol",
          "description": "RocketNodeManager.sol"
        },
        {
          "id": "4f2UetRXWyILQtc8ambf74",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/node/RocketNodeDistributor.sol",
          "description": "RocketNodeDistributor.sol"
        },
        {
          "id": "6wt3M4NP2cdHaZ7SvR2SL0",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/rewards/RocketMerkleDistributorMainnet.sol",
          "description": "RocketMerkleDistributorMainnet.sol"
        },
        {
          "id": "238olALghZxoYZ0OJZ6PyW",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/rewards/RocketSmoothingPool.sol",
          "description": "RocketSmoothingPool.sol"
        },
        {
          "id": "5JSTn7ObB7hHoR1K6apDnF",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/rewards/RocketRewardsPool.sol",
          "description": "RocketRewardsPool.sol"
        },
        {
          "id": "1CrJFNp1TMYDzYbx9Cz28P",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/rewards/RocketClaimDAO.sol",
          "description": "RocketClaimDAO.sol"
        },
        {
          "id": "7DxCLUqgD7ytDkWc3uqrGD",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/deposit/RocketDepositPool.sol",
          "description": "RocketDepositPool.sol"
        },
        {
          "id": "3XToqitcYTkSUMg3xB62DN",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/auction/RocketAuctionManager.sol",
          "description": "RocketAuctionManager.sol"
        },
        {
          "id": "6e4LpvrDfZbu4BuQOVr4Cx",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/network/RocketNetworkPrices.sol",
          "description": "RocketNetworkPrices.sol"
        },
        {
          "id": "7KISL67VvPkB2ANv9jTyzl",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/network/RocketNetworkFees.sol",
          "description": "RocketNetworkFees.sol"
        },
        {
          "id": "33cj7UqS5HEz3zg00bbhLN",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/network/RocketNetworkPenalties.sol",
          "description": "RocketNetworkPenalties.sol"
        },
        {
          "id": "4I2UxwjIIRCAzOjhHinEAD",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/network/RocketNetworkBalances.sol",
          "description": "RocketNetworkBalances.sol"
        },
        {
          "id": "4sBBiB34RkcJE6SC1uqqlM",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/token/RocketTokenRETH.sol",
          "description": "RocketTokenRETH.sol"
        },
        {
          "id": "1thdNIafm7jE31U4GUXIoi",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/token/RocketTokenRPL.sol",
          "description": "RocketTokenRPL.sol"
        },
        {
          "id": "55ku9b2GaGB20rvGoiSlfu",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/upgrade/RocketUpgradeOneDotTwo.sol",
          "description": "RocketUpgradeOneDotTwo.sol"
        },
        {
          "id": "nyE0Y5nmiuejTEyYHqpdu",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/minipool/RocketMinipoolFactory.sol",
          "description": "RocketMinipoolFactory.sol"
        },
        {
          "id": "26Bq4CBcv1MKDPkBj8CqXd",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/minipool/RocketMinipoolQueue.sol",
          "description": "RocketMinipoolQueue.sol"
        },
        {
          "id": "6nJgnY8X6Pg2sXinHsYPCb",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/minipool/RocketMinipoolPenalty.sol",
          "description": "RocketMinipoolPenalty.sol"
        },
        {
          "id": "6gzTXUozwhAqcGDKs5f9SX",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/minipool/RocketMinipoolStatus.sol",
          "description": "RocketMinipoolStatus.sol"
        },
        {
          "id": "6twQ8QyoIn7H8gjqAt4ITO",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/minipool/RocketMinipoolBase.sol",
          "description": "RocketMinipoolBase.sol"
        },
        {
          "id": "6QwwnpFd41PZ4nbBG8WSaI",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/minipool/RocketMinipoolManager.sol",
          "description": "RocketMinipoolManager.sol"
        },
        {
          "id": "xB5bjZwbfVBl9plw9AyBq",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/minipool/RocketMinipoolDelegate.sol",
          "description": "RocketMinipoolDelegate.sol"
        },
        {
          "id": "6K2uctwwA20jGvru7ODXHh",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/minipool/RocketMinipoolStorageLayout.sol",
          "description": "RocketMinipoolStorageLayout.sol"
        },
        {
          "id": "1503jbNK6hDvfnjjoiFaUL",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/contract/minipool/RocketMinipoolBondReducer.sol",
          "description": "RocketMinipoolBondReducer.sol"
        },
        {
          "id": "40kDH3Ym1vYJF3Yd0fvsm5",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/types/NodeDetails.sol",
          "description": "NodeDetails.sol"
        },
        {
          "id": "6V1gPz6hTSfMq8b6E4xLzR",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/types/MinipoolDetails.sol",
          "description": "MinipoolDetails.sol"
        },
        {
          "id": "61tC2NwKI3H2IqTUZCy85j",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/types/RewardSubmission.sol",
          "description": "RewardSubmission.sol"
        },
        {
          "id": "1CqA338G2zby0s70F9MNnd",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/types/MinipoolDeposit.sol",
          "description": "MinipoolDeposit.sol"
        },
        {
          "id": "1zQrKSbPcGhdvPXQQR7nsE",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/types/MinipoolStatus.sol",
          "description": "MinipoolStatus.sol"
        },
        {
          "id": "GDHuKZDLVDUakez5cGtx9",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/types/SettingType.sol",
          "description": "SettingType.sol"
        },
        {
          "id": "5NeJdorl5nWRAh9IckrMeJ",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/blob/v1.2.0/contracts/contract/old/minipool/RocketMinipoolDelegateOld.sol",
          "description": "RocketMinipoolDelegateOld.sol"
        },
        {
          "id": "1CAPLBZYlmt0nrE927Ugkp",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/util/AddressQueueStorageInterface.sol",
          "description": "AddressQueueStorageInterface.sol"
        },
        {
          "id": "3u3RAhLe3NWDBuSjSBhnmn",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/util/AddressSetStorageInterface.sol",
          "description": "AddressSetStorageInterface.sol"
        },
        {
          "id": "2ghGLs1uBfETz8rm9y29mL",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/dao/protocol/settings/RocketDAOProtocolSettingsInflationInterface.sol",
          "description": "RocketDAOProtocolSettingsInflationInterface.sol"
        },
        {
          "id": "1QK6JMgHUDyQed04yxv8jm",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/dao/protocol/settings/RocketDAOProtocolSettingsNetworkInterface.sol",
          "description": "RocketDAOProtocolSettingsNetworkInterface.sol"
        },
        {
          "id": "6FtIOUuUZxh06EoCmdf8CU",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/dao/protocol/settings/RocketDAOProtocolSettingsNodeInterface.sol",
          "description": "RocketDAOProtocolSettingsNodeInterface.sol"
        },
        {
          "id": "1yweFwX0k3Zz4ANg9JHaEs",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/dao/protocol/settings/RocketDAOProtocolSettingsInterface.sol",
          "description": "RocketDAOProtocolSettingsInterface.sol"
        },
        {
          "id": "Jo4x4oipsNeePPKjJPeyO",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/dao/protocol/settings/RocketDAOProtocolSettingsMinipoolInterface.sol",
          "description": "RocketDAOProtocolSettingsMinipoolInterface.sol"
        },
        {
          "id": "1kK4Vt65lMdmRgN2VM3s19",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/dao/protocol/settings/RocketDAOProtocolSettingsAuctionInterface.sol",
          "description": "RocketDAOProtocolSettingsAuctionInterface.sol"
        },
        {
          "id": "4FdJ6uU4jV1TRQGKpQEbiZ",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/dao/protocol/settings/RocketDAOProtocolSettingsDepositInterface.sol",
          "description": "RocketDAOProtocolSettingsDepositInterface.sol"
        },
        {
          "id": "2huWRPWmQeB5XQHMcAINkG",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/dao/protocol/settings/RocketDAOProtocolSettingsRewardsInterface.sol",
          "description": "RocketDAOProtocolSettingsRewardsInterface.sol"
        },
        {
          "id": "NcFopayV5h5p9jJoh3xbs",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/dao/protocol/RocketDAOProtocolActionsInterface.sol",
          "description": "RocketDAOProtocolActionsInterface.sol"
        },
        {
          "id": "64kEPaNuunIlMx8yc1wE6s",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/dao/protocol/RocketDAOProtocolInterface.sol",
          "description": "RocketDAOProtocolInterface.sol"
        },
        {
          "id": "5QrxSf4fJWkTQzly3Yw3fi",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/dao/protocol/RocketDAOProtocolProposalsInterface.sol",
          "description": "RocketDAOProtocolProposalsInterface.sol"
        },
        {
          "id": "26UWX80s6eF659Z5htn1Rh",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/dao/RocketDAOProposalInterface.sol",
          "description": "RocketDAOProposalInterface.sol"
        },
        {
          "id": "3VHtw8eCAdEC6W3AzvbOEI",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/dao/node/settings/RocketDAONodeTrustedSettingsMinipoolInterface.sol",
          "description": "RocketDAONodeTrustedSettingsMinipoolInterface.sol"
        },
        {
          "id": "3qCdqgKvLpW6kKkDd3MndB",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/dao/node/settings/RocketDAONodeTrustedSettingsInterface.sol",
          "description": "RocketDAONodeTrustedSettingsInterface.sol"
        },
        {
          "id": "1L2HjDnFUL2NdoQRmtnp9m",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/dao/node/settings/RocketDAONodeTrustedSettingsMembersInterface.sol",
          "description": "RocketDAONodeTrustedSettingsMembersInterface.sol"
        },
        {
          "id": "NiMoomRE9MqJNy4gL7oRB",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/dao/node/settings/RocketDAONodeTrustedSettingsProposalsInterface.sol",
          "description": "RocketDAONodeTrustedSettingsProposalsInterface.sol"
        },
        {
          "id": "33o8MaIPmksVsyhPKMZLSk",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/dao/node/settings/RocketDAONodeTrustedSettingsRewardsInterface.sol",
          "description": "RocketDAONodeTrustedSettingsRewardsInterface.sol"
        },
        {
          "id": "V3UxUrzgy1pGbhmEPkZ9t",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/dao/node/RocketDAONodeTrustedInterface.sol",
          "description": "RocketDAONodeTrustedInterface.sol"
        },
        {
          "id": "6iYknzc118Bf3pnL0JrC8x",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/dao/node/RocketDAONodeTrustedUpgradeInterface.sol",
          "description": "RocketDAONodeTrustedUpgradeInterface.sol"
        },
        {
          "id": "5wfUGhdwx2v5iGqeoTA4ZD",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/dao/node/RocketDAONodeTrustedActionsInterface.sol",
          "description": "RocketDAONodeTrustedActionsInterface.sol"
        },
        {
          "id": "7qJrBExi52xuijPYce7gHJ",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/dao/node/RocketDAONodeTrustedProposalsInterface.sol",
          "description": "RocketDAONodeTrustedProposalsInterface.sol"
        },
        {
          "id": "Lbvtqtt1OAU66v356cfse",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/casper/DepositInterface.sol",
          "description": "DepositInterface.sol"
        },
        {
          "id": "5rHssy96mjHtJNYIiHsb6t",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/RocketVaultInterface.sol",
          "description": "RocketVaultInterface.sol"
        },
        {
          "id": "637D7DU52Ui658Y67Ru8Mf",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/RocketVaultWithdrawerInterface.sol",
          "description": "RocketVaultWithdrawerInterface.sol"
        },
        {
          "id": "1HPBkM80bwFjRTcEcmDdMz",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/node/RocketNodeManagerInterface.sol",
          "description": "RocketNodeManagerInterface.sol"
        },
        {
          "id": "6lVGFfxud1zGw4in0jI4sP",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/node/RocketNodeDistributorInterface.sol",
          "description": "RocketNodeDistributorInterface.sol"
        },
        {
          "id": "76AENyFFDfHCEhBZebJFJl",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/node/RocketNodeDistributorFactoryInterface.sol",
          "description": "RocketNodeDistributorFactoryInterface.sol"
        },
        {
          "id": "43ckXMyp94mnBfYmgDL4yu",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/node/RocketNodeDepositInterface.sol",
          "description": "RocketNodeDepositInterface.sol"
        },
        {
          "id": "YxhbRxBDHnBLFpX7DgUad",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/node/RocketNodeStakingInterface.sol",
          "description": "RocketNodeStakingInterface.sol"
        },
        {
          "id": "3Hk6SO1RcWLmMfUZgTVYUT",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/rewards/RocketRewardsRelayInterface.sol",
          "description": "RocketRewardsRelayInterface.sol"
        },
        {
          "id": "2iBgaE2X14t1SdypsHrCUQ",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/rewards/claims/RocketClaimNodeInterface.sol",
          "description": "RocketClaimNodeInterface.sol"
        },
        {
          "id": "1efMdzgYHIFp0u0lLZ7Mza",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/rewards/claims/RocketClaimDAOInterface.sol",
          "description": "RocketClaimDAOInterface.sol"
        },
        {
          "id": "6RbkVfIJh5n6oztsePfKe5",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/rewards/claims/RocketClaimTrustedNodeInterface.sol",
          "description": "RocketClaimTrustedNodeInterface.sol"
        },
        {
          "id": "ETDIBYxjgud0ByRQLDlc2",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/rewards/RocketSmoothingPoolInterface.sol",
          "description": "RocketSmoothingPoolInterface.sol"
        },
        {
          "id": "WbL10iJkVCxKRdpUhCr6c",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/rewards/RocketRewardsPoolInterface.sol",
          "description": "RocketRewardsPoolInterface.sol"
        },
        {
          "id": "1BA5LNroO7vV8y9Awd7Htb",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/deposit/RocketDepositPoolInterface.sol",
          "description": "RocketDepositPoolInterface.sol"
        },
        {
          "id": "4XCtxMkiUXwwqouTjt76Us",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/auction/RocketAuctionManagerInterface.sol",
          "description": "RocketAuctionManagerInterface.sol"
        },
        {
          "id": "48g0GUMyePdpkTqUhImu7t",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/network/RocketNetworkBalancesInterface.sol",
          "description": "RocketNetworkBalancesInterface.sol"
        },
        {
          "id": "3doo9G5XWud0W40QsMnsJS",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/network/RocketNetworkPenaltiesInterface.sol",
          "description": "RocketNetworkPenaltiesInterface.sol"
        },
        {
          "id": "3FqwPyP8Ro1sPg2g76iliL",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/network/RocketNetworkFeesInterface.sol",
          "description": "RocketNetworkFeesInterface.sol"
        },
        {
          "id": "17KMK69lOhUiIP9oUVmK3M",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/network/RocketNetworkPricesInterface.sol",
          "description": "RocketNetworkPricesInterface.sol"
        },
        {
          "id": "6MqUFnNAvlIy9kDkjRkOXA",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/token/RocketTokenRETHInterface.sol",
          "description": "RocketTokenRETHInterface.sol"
        },
        {
          "id": "3b0IqYAH1dtEnqwbfdmvRF",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/token/RocketTokenRPLInterface.sol",
          "description": "RocketTokenRPLInterface.sol"
        },
        {
          "id": "7wn6UoR0d0ugudD9eAlMQu",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/RocketStorageInterface.sol",
          "description": "RocketStorageInterface.sol"
        },
        {
          "id": "5bH3M9XKGC594UkGJWmPny",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/minipool/RocketMinipoolManagerInterface.sol",
          "description": "RocketMinipoolManagerInterface.sol"
        },
        {
          "id": "5Xyw3UuhpaezHXtrwqMVuB",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/minipool/RocketMinipoolBaseInterface.sol",
          "description": "RocketMinipoolBaseInterface.sol"
        },
        {
          "id": "409renseykDEHj34SpOqmx",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/minipool/RocketMinipoolFactoryInterface.sol",
          "description": "RocketMinipoolFactoryInterface.sol"
        },
        {
          "id": "69i2lCA7lqRiyr8Xh3pcwv",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/minipool/RocketMinipoolBondReducerInterface.sol",
          "description": "RocketMinipoolBondReducerInterface.sol"
        },
        {
          "id": "2PvByeQ2Qn9axZnfLZF8WE",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/minipool/RocketMinipoolQueueInterface.sol",
          "description": "RocketMinipoolQueueInterface.sol"
        },
        {
          "id": "2AciTbisnVvkJkpxPjxyRE",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/minipool/RocketMinipoolStatusInterface.sol",
          "description": "RocketMinipoolStatusInterface.sol"
        },
        {
          "id": "5M8PX53OBRiEEFCdqdCziT",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/minipool/RocketMinipoolInterface.sol",
          "description": "RocketMinipoolInterface.sol"
        },
        {
          "id": "4kP3bDxoSRR9VFnwY2gVQz",
          "type": "smart_contract",
          "url": "https://github.com/rocket-pool/rocketpool/tree/v1.2.0/contracts/interface/minipool/RocketMinipoolPenaltyInterface.sol",
          "description": "RocketMinipoolPenaltyInterface.sol"
        }
      ],
      "impacts": [
        {
          "id": "3Miq7DD0Lu0x02pgZmqjpG",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4X5TSyisOYYuwaRC4Dmj0Q",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "7GW9qmyRou23XRI7K0agZJ",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "37emf0lO59EZAYuLECtUkS",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "syQl941udvCzWg3v4PfWR",
          "title": "Block stuffing",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "2utk49MxOnNvdzriBGCoyp",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "7B1aNM8eHRIFlLPZDvIdlk",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        }
      ],
      "programOverview": "Rocket Pool is a decentralised, non-custodial, and community owned staking protocol for Ethereum. Rocket Pool aligns the interests of two user groups; those that wish to participate in tokenised liquid staking; and those that wish to stake ETH and run a node.                                                                    \t \n  - Liquid staking - in exchange for staking ETH with Rocket Pool, users receive our liquid staking token, which is fully composable in the DeFi landscape, while accruing value from ETH rewards generated in Ethereum's Beacon Chain.\n\n  - Node operators - running a node with Rocket Pool only requires 16 ETH per validator vs 32 ETH outside the protocol. Node operators earn greater returns in Rocket Pool than solo satking; they earn rewards on their own ETH, a commission on the protocol's ETH, and RPL rewards.\n\nFor more information about Rocket Pool, please visit [https://www.rocketpool.net/](https://www.rocketpool.net/).   \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing the following impacts:\n\n  - Theft/loss of user funds\n  - Exploits leading to the protocol not honouring its commitment to liquid staking token holders and node operators",
      "prioritizedVulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n__Critical__\t \n  - Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\n  - Permanent freezing of funds\n\n__High__\n  - Theft of unclaimed yield\n\n__Medium__\t\n  - Smart contract unable to operate due to lack of token funds\n  - Block stuffing for profit\n  - Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)\n  - Unbounded gas consumption\n",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll bug reports must come with a PoC in order to be accepted for a reward. \n\nPayouts are handled by the __Rocket Pool__ team directly and are denominated in USD. However, payouts are done in __RPL__.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Attacks requiring access to privileged actors (guardian, ODAO members)\n  - Mentions of secrets in Github, will be considered out of scope without proof that they are in-use in production\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "Once Rocket Pool goes on mainnet, the mainnet contract addresses will be added to the bug bounty program. \n\nThe Rocket Pool explainer series provides information about how Rocket Pool works; purpose, general concepts, actors, and interactions:\n\n__Part 1 - Overview and users of the protocol__\n[https://medium.com/rocket-pool/rocket-pool-staking-protocol-part-1-8be4859e5fbd](https://medium.com/rocket-pool/rocket-pool-staking-protocol-part-1-8be4859e5fbd)\n\n__Part 2 - The Protocol and Oracle Node DAO's__\n[https://medium.com/rocket-pool/rocket-pool-staking-protocol-part-2-e0d346911fe1](https://medium.com/rocket-pool/rocket-pool-staking-protocol-part-2-e0d346911fe1)\n\n __Part 3 - RPL & Tokenomics__\n[ https://medium.com/rocket-pool/rocket-pool-staking-protocol-part-3-3029afb57d4c](https://medium.com/rocket-pool/rocket-pool-staking-protocol-part-3-3029afb57d4c)\n\nRocket Pool also has quick-start guides for:\n\n__Stakers__ [(https://medium.com/rocket-pool/rocket-pool-stakers-guide-2c5c324b1749)](https://medium.com/rocket-pool/rocket-pool-stakers-guide-2c5c324b1749) \n\n__Node Operators__ [(https://medium.com/rocket-pool/rocket-pool-node-quickstart-guide-d40bc3d0de6d)](https://medium.com/rocket-pool/rocket-pool-node-quickstart-guide-d40bc3d0de6d) \n\nComprehensive documentation can be found here: [https://docs.rocketpool.net/guides/](https://docs.rocketpool.net/guides/) \n\nFor additional reference, please view their GitHub here - [https://github.com/rocket-pool/rocketpool/tree/master.](https://github.com/rocket-pool/rocketpool/tree/master) \n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Staking"
        ],
        "projectType": [
          "Defi",
          "Infrastructure"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "JavaScript",
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $250,000"
          },
          {
            "level": "High",
            "payout": "USD $25,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rocket Pool is a decentralised, non-custodial, and community owned staking protocol for Ethereum. Rocket Pool aligns the interests of two user groups; those that wish to participate in tokenised liquid staking; and those that wish to stake ETH and run a node.                                                                    \\t \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Liquid staking - in exchange for staking ETH with Rocket Pool, users receive our liquid staking token, which is fully composable in the DeFi landscape, while accruing value from ETH rewards generated in Ethereum's Beacon Chain.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Node operators - running a node with Rocket Pool only requires 16 ETH per validator vs 32 ETH outside the protocol. Node operators earn greater returns in Rocket Pool than solo satking; they earn rewards on their own ETH, a commission on the protocol's ETH, and RPL rewards.\"))), mdx(\"p\", null, \"For more information about Rocket Pool, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.rocketpool.net/\"\n  }, \"https://www.rocketpool.net/\"), \".   \"), mdx(\"p\", null, \"This bug bounty program is focused on their smart contracts and is focused on preventing the following impacts:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft/loss of user funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Exploits leading to the protocol not honouring its commitment to liquid staking token holders and node operators\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rocket Pool is a decentralised, non-custodial, and community owned staking protocol for Ethereum. Rocket Pool aligns the interests of two user groups; those that wish to participate in tokenised liquid staking; and those that wish to stake ETH and run a node.                                                                    \t </p><ul><li><p>Liquid staking - in exchange for staking ETH with Rocket Pool, users receive our liquid staking token, which is fully composable in the DeFi landscape, while accruing value from ETH rewards generated in Ethereum&#x27;s Beacon Chain.</p></li><li><p>Node operators - running a node with Rocket Pool only requires 16 ETH per validator vs 32 ETH outside the protocol. Node operators earn greater returns in Rocket Pool than solo satking; they earn rewards on their own ETH, a commission on the protocol&#x27;s ETH, and RPL rewards.</p></li></ul><p>For more information about Rocket Pool, please visit <a href=\"https://www.rocketpool.net/\">https://www.rocketpool.net/</a>.   </p><p>This bug bounty program is focused on their smart contracts and is focused on preventing the following impacts:</p><ul><li>Theft/loss of user funds</li><li>Exploits leading to the protocol not honouring its commitment to liquid staking token holders and node operators</li></ul>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Impacts in Scope\")), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Critical\"), \"\\t \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of funds\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"High\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of unclaimed yield\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Medium\"), \"\\t\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract unable to operate due to lack of token funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Block stuffing for profit\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unbounded gas consumption\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p><strong>Impacts in Scope</strong></p><p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p><p><strong>Smart Contracts</strong></p><p><strong>Critical</strong>\t </p><ul><li>Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield</li><li>Permanent freezing of funds</li></ul><p><strong>High</strong></p><ul><li>Theft of unclaimed yield</li></ul><p><strong>Medium</strong>\t</p><ul><li>Smart contract unable to operate due to lack of token funds</li><li>Block stuffing for profit</li><li>Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)</li><li>Unbounded gas consumption</li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\"), mdx(\"p\", null, \"All bug reports must come with a PoC in order to be accepted for a reward. \"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Rocket Pool\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"RPL\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.</p><p>All bug reports must come with a PoC in order to be accepted for a reward. </p><p>Payouts are handled by the <strong>Rocket Pool</strong> team directly and are denominated in USD. However, payouts are done in <strong>RPL</strong>.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged actors (guardian, ODAO members)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentions of secrets in Github, will be considered out of scope without proof that they are in-use in production\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Attacks requiring access to privileged actors (guardian, ODAO members)</li><li>Mentions of secrets in Github, will be considered out of scope without proof that they are in-use in production</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Once Rocket Pool goes on mainnet, the mainnet contract addresses will be added to the bug bounty program. \"), mdx(\"p\", null, \"The Rocket Pool explainer series provides information about how Rocket Pool works; purpose, general concepts, actors, and interactions:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Part 1 - Overview and users of the protocol\"), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://medium.com/rocket-pool/rocket-pool-staking-protocol-part-1-8be4859e5fbd\"\n  }, \"https://medium.com/rocket-pool/rocket-pool-staking-protocol-part-1-8be4859e5fbd\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Part 2 - The Protocol and Oracle Node DAO's\"), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://medium.com/rocket-pool/rocket-pool-staking-protocol-part-2-e0d346911fe1\"\n  }, \"https://medium.com/rocket-pool/rocket-pool-staking-protocol-part-2-e0d346911fe1\")), mdx(\"p\", null, \" \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Part 3 - RPL & Tokenomics\"), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://medium.com/rocket-pool/rocket-pool-staking-protocol-part-3-3029afb57d4c\"\n  }, \" https://medium.com/rocket-pool/rocket-pool-staking-protocol-part-3-3029afb57d4c\")), mdx(\"p\", null, \"Rocket Pool also has quick-start guides for:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Stakers\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://medium.com/rocket-pool/rocket-pool-stakers-guide-2c5c324b1749\"\n  }, \"(https://medium.com/rocket-pool/rocket-pool-stakers-guide-2c5c324b1749)\"), \" \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Node Operators\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://medium.com/rocket-pool/rocket-pool-node-quickstart-guide-d40bc3d0de6d\"\n  }, \"(https://medium.com/rocket-pool/rocket-pool-node-quickstart-guide-d40bc3d0de6d)\"), \" \"), mdx(\"p\", null, \"Comprehensive documentation can be found here: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.rocketpool.net/guides/\"\n  }, \"https://docs.rocketpool.net/guides/\"), \" \"), mdx(\"p\", null, \"For additional reference, please view their GitHub here - \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/rocket-pool/rocketpool/tree/master\"\n  }, \"https://github.com/rocket-pool/rocketpool/tree/master.\"), \" \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Once Rocket Pool goes on mainnet, the mainnet contract addresses will be added to the bug bounty program. </p><p>The Rocket Pool explainer series provides information about how Rocket Pool works; purpose, general concepts, actors, and interactions:</p><p><strong>Part 1 - Overview and users of the protocol</strong>\n<a href=\"https://medium.com/rocket-pool/rocket-pool-staking-protocol-part-1-8be4859e5fbd\">https://medium.com/rocket-pool/rocket-pool-staking-protocol-part-1-8be4859e5fbd</a></p><p><strong>Part 2 - The Protocol and Oracle Node DAO&#x27;s</strong>\n<a href=\"https://medium.com/rocket-pool/rocket-pool-staking-protocol-part-2-e0d346911fe1\">https://medium.com/rocket-pool/rocket-pool-staking-protocol-part-2-e0d346911fe1</a></p><p> <strong>Part 3 - RPL &amp; Tokenomics</strong>\n<a href=\"https://medium.com/rocket-pool/rocket-pool-staking-protocol-part-3-3029afb57d4c\"> https://medium.com/rocket-pool/rocket-pool-staking-protocol-part-3-3029afb57d4c</a></p><p>Rocket Pool also has quick-start guides for:</p><p><strong>Stakers</strong> <a href=\"https://medium.com/rocket-pool/rocket-pool-stakers-guide-2c5c324b1749\">(https://medium.com/rocket-pool/rocket-pool-stakers-guide-2c5c324b1749)</a> </p><p><strong>Node Operators</strong> <a href=\"https://medium.com/rocket-pool/rocket-pool-node-quickstart-guide-d40bc3d0de6d\">(https://medium.com/rocket-pool/rocket-pool-node-quickstart-guide-d40bc3d0de6d)</a> </p><p>Comprehensive documentation can be found here: <a href=\"https://docs.rocketpool.net/guides/\">https://docs.rocketpool.net/guides/</a> </p><p>For additional reference, please view their GitHub here - <a href=\"https://github.com/rocket-pool/rocketpool/tree/master\">https://github.com/rocket-pool/rocketpool/tree/master.</a> </p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "raydium",
      "slug": "raydium",
      "project": "Raydium",
      "maxBounty": 505000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4X5hbah3bOvGiEZIPrFmeW/30eb4e2d5a47c3eca8d10b3fcff3ee7c/Raydium_logo.jpeg",
      "launchDate": "2023-04-25T15:00+03:00",
      "updatedDate": "2023-04-25T12:04:46.557Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $50,000 to USD $505,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $40,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "21MMDLCRBfDz3XwZo8zYLe",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/instructions/admin/collect_fund_fee.rs",
          "description": "collect_fund_fee "
        },
        {
          "id": "6Tf5pUWeCUJ9Gb3XlMZUNi",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/instructions/admin/collect_protocol_fee.rs",
          "description": "collect_protocol_fee"
        },
        {
          "id": "xut8H2wW9oRIQmZzfyQ8c",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/instructions/admin/create_operation_account.rs",
          "description": "create_operation_account"
        },
        {
          "id": "76hXj66l5zMVXHw4YuMCEO",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/instructions/admin/mod.rs",
          "description": "admin/mod"
        },
        {
          "id": "kTmKooV5Fcrbf0tAlWQaQ",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/instructions/admin/transfer_reward_owner.rs",
          "description": "transfer_reward_owner"
        },
        {
          "id": "60EQc3Zbtg7DYfkyjCyqAf",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/instructions/admin/update_amm_config.rs",
          "description": "update_amm_config"
        },
        {
          "id": "456Vqsr4rz5Up6CXGYOSy9",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/instructions/admin/update_operation_account.rs",
          "description": "update_operation_account"
        },
        {
          "id": "01bbpcWp0jlxbfxAZXMm4w",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/instructions/admin/update_pool_status.rs",
          "description": "update_pool_status"
        },
        {
          "id": "1uvuqU0ibJ4qCicqeuOC9m",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/instructions/close_position.rs",
          "description": "close_position"
        },
        {
          "id": "777KtUlC5PDxV8MnBXYt5U",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/instructions/collect_remaining_rewards.rs",
          "description": "collect_remaining_rewards"
        },
        {
          "id": "6Qxk3KzKdFYIp0fkLGjeIo",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/instructions/create_pool.rs",
          "description": "create_pool"
        },
        {
          "id": "ZYrm8zPDGR6egygGu2rnK",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/instructions/decrease_liquidity.rs",
          "description": "decrease_liquidity"
        },
        {
          "id": "17r3lQmHxnKD2QeLsGZrpD",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/instructions/increase_liquidity.rs",
          "description": "increase_liquidity"
        },
        {
          "id": "486uIoRgvUtjmIvHC4bZ2x",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/instructions/initialize_reward.rs",
          "description": "initialize_reward"
        },
        {
          "id": "7xTxC5eJrXc86LD241XR7s",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/instructions/mod.rs",
          "description": "instructions/mod"
        },
        {
          "id": "4RTH4Nu0DsGQd4lCo3oTUV",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/instructions/open_position.rs",
          "description": "open_position"
        },
        {
          "id": "1NRrkBkpHyGNrBq76B6Xdr",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/instructions/set_reward_params.rs",
          "description": "set_reward_params"
        },
        {
          "id": "4WmIe4fjB4PfsNdarr4LlZ",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/instructions/swap.rs",
          "description": "swap"
        },
        {
          "id": "6VRucZLFFaMjESc3GMiaoK",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/instructions/swap_router_base_in.rs",
          "description": "swap_router_base_in"
        },
        {
          "id": "5tMIpwpq8RteoCBv3m50ZQ",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/instructions/update_reward_info.rs",
          "description": "update_reward_info"
        },
        {
          "id": "5W29Quicr6WoSQFJFFdVNl",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/libraries/big_num.rs",
          "description": "big_num"
        },
        {
          "id": "3hvY6aszP94IzYX2oVqG4K",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/libraries/fixed_point_64.rs",
          "description": "fixed_point"
        },
        {
          "id": "6vzzX6yIA2xX71lyuQtLPh",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/libraries/full_math.rs",
          "description": "full_math"
        },
        {
          "id": "vVAY48h0kx71IvDfUlz33",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/libraries/liquidity_math.rs",
          "description": "liquidity_math"
        },
        {
          "id": "5H77grUbcFLNdnC9ZgTx4Z",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/libraries/mod.rs",
          "description": "libraries/mod"
        },
        {
          "id": "4zaot7ZveNYB7GN1FGgqVM",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/libraries/sqrt_price_math.rs",
          "description": "sqrt_price_math"
        },
        {
          "id": "3l44sXLD4uZr0kF7qsuETT",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/libraries/swap_math.rs",
          "description": "swap_math"
        },
        {
          "id": "5rmYt3tZU8q154xTdgsdVP",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/libraries/tick_array_bit_map.rs",
          "description": "tick_array_bit_map"
        },
        {
          "id": "2v7NQj97yFofCA82oLn3gK",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/libraries/tick_math.rs",
          "description": "tick_math"
        },
        {
          "id": "oyh7egCVYdzvgbvLf4Oig",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/libraries/unsafe_math.rs",
          "description": "unsafe_math"
        },
        {
          "id": "2LyTTDlTOacMVKhsRIs8sX",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/states/config.rs",
          "description": "config"
        },
        {
          "id": "4uq14lU4rxDhzw2Nj7wb1J",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/states/mod.rs",
          "description": "states/mod"
        },
        {
          "id": "4qDiQTyljJS3Sn77T45N85",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/states/operation_account.rs",
          "description": "operation_account"
        },
        {
          "id": "6gUcTO8ciIi9tKIGtisWH0",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/states/oracle.rs",
          "description": "oracle"
        },
        {
          "id": "3200dQUv168H69hZ7ORtiS",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/states/personal_position.rs",
          "description": "personal_position"
        },
        {
          "id": "3bn4uMuqBirZIoB8cJ8mrd",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/states/pool.rs",
          "description": "pool"
        },
        {
          "id": "3O4pimGr5LIxlvCUsthbio",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/states/protocol_position.rs",
          "description": "protocol_position"
        },
        {
          "id": "1xRKcrIYTZq0sd3eBYiqnr",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/states/tick_array.rs",
          "description": "tick_array"
        },
        {
          "id": "17NTiVe3nyUQ4wprk1Y8dg",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/util/access_control.rs",
          "description": "access_control"
        },
        {
          "id": "49b3I1QxyayoOWPZRd2wdt",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/util/mod.rs",
          "description": "util/mod"
        },
        {
          "id": "3g1n6tTpba2Zka9mAQdX54",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/util/system.rs",
          "description": "system"
        },
        {
          "id": "3m9Rt7cqpj7mnWBqk5bGz4",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/util/token.rs",
          "description": "token"
        },
        {
          "id": "2xsSLk6HFny6NUrH9viwqW",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/error.rs",
          "description": "error"
        },
        {
          "id": "5f23K4urUvjF7Hfzjqyyd7",
          "type": "smart_contract",
          "url": "https://github.com/raydium-io/raydium-amm-v3/blob/master/programs/amm/src/lib.rs",
          "description": "lib"
        }
      ],
      "impacts": [
        {
          "id": "5QAPhVo23BYfdqF178FG8F",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "VczD33ydvh21swbT6Famp",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2tzdAg9w6sQHJmcfOikTP9",
          "title": "Vulnerabilities that could freeze user funds permanently or involve the draining or theft of funds without user transaction approval",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5ggDNuBa5FMnA8WwqjqPDB",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "3ubGaL0TSFsqSH25i5YcId",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "5ObZIOJibto4LmxxeKQ7yg",
          "title": "Temporary freezing of funds for any amount of time",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "16JDNFSUDuIGcx1DTYR4Jy",
          "title": "Vulnerabilities that could freeze user funds temporarily or intentionally alter the value of user funds",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "0RoP0XU8pQm9XFzwvmQOe",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "44out7wRyEw67Rr7mCB3Fc",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "1tVa5rp77c4lUnoJ4ptk6q",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "1AERvcOYhF1GBhksnExhAw",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "50SVo3VfR3pycZkQSBrL4n",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        }
      ],
      "programOverview": "Raydium is an automated market maker (AMM) built on the Solana blockchain which leverages a central limit order book to enable lightning-fast trades, shared liquidity and new features for earning yield.\n\nFor more information about Raydium, please visit [https://raydium.io/.](https://raydium.io/)  \n",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [ Immunefi Vulnerability Severity Classification System V2.3.](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3/) This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. \n\nAll bug reports must include a Proof of Concept (PoC) demonstrating how the vulnerability can be exploited to impact an asset-in-scope to be eligible for a reward. Critical and High severity bug reports should also include a suggestion for a fix. Explanations and statements are not accepted as PoC and code is required.\n\nRewards for critical smart contract bug reports will be further capped at __10%__ of direct funds at risk if the bug discovered is exploited. However, there is a minimum reward of __USD 50 000__.\n\nThe following vulnerabilities are not eligible for a reward:\n- All vulnerabilities marked in the [Ottersec security review](https://drive.google.com/file/d/1d9SiGarziu9TgPKO_6sAG8odr2qBdMO0/view?usp=share_link) are not eligible for a reward.\n- The CLMM contract emits trading fee and farming yield tokens to LPs. If tokens from the vault or fees were drained by an attacker however, users would not be able to claim yield and transactions would fail. This is by design and not a vulnerability\n\nPayouts are handled by the __Raydium__ team directly and are denominated in USD. However, payouts are done in __RAY__.\n",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n- Incorrect data supplied by third party oracles\n   - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n- Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n- Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n",
      "assetsBodyV2": "Documentation and instruction for PoC can be found here:\n- [Raydium CLMM v3 overview document ](https://drive.google.com/file/d/1UdCB2coRFZzxCmM11gUhZdd_6aaePe5O/view?usp=share_link)\n\nA public testnet of Raydium can be found at [https://explorer.solana.com/address/proKtffCScMcwkFkPHFcuHawN7mWxRkhyh8PGxkTwYx.](https://explorer.solana.com/address/proKtffCScMcwkFkPHFcuHawN7mWxRkhyh8PGxkTwYx) However, note that testing on the public testnet is prohibited by the program rules. The public testnet is provided for reference only.\n\nIf a Critical Impact can be caused to any other asset managed by Raydium that isn’t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project. This only applies to Critical impacts. ",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "AMM"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "Solana"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Rust"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $50,000 to USD $505,000"
          },
          {
            "level": "High",
            "payout": "USD $40,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Raydium is an automated market maker (AMM) built on the Solana blockchain which leverages a central limit order book to enable lightning-fast trades, shared liquidity and new features for earning yield.\"), mdx(\"p\", null, \"For more information about Raydium, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://raydium.io/\"\n  }, \"https://raydium.io/.\"), \"  \"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Raydium is an automated market maker (AMM) built on the Solana blockchain which leverages a central limit order book to enable lightning-fast trades, shared liquidity and new features for earning yield.</p><p>For more information about Raydium, please visit <a href=\"https://raydium.io/\">https://raydium.io/.</a>  </p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3/\"\n  }, \" Immunefi Vulnerability Severity Classification System V2.3.\"), \" This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. \"), mdx(\"p\", null, \"All bug reports must include a Proof of Concept (PoC) demonstrating how the vulnerability can be exploited to impact an asset-in-scope to be eligible for a reward. Critical and High severity bug reports should also include a suggestion for a fix. Explanations and statements are not accepted as PoC and code is required.\"), mdx(\"p\", null, \"Rewards for critical smart contract bug reports will be further capped at \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"10%\"), \" of direct funds at risk if the bug discovered is exploited. However, there is a minimum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 50 000\"), \".\"), mdx(\"p\", null, \"The following vulnerabilities are not eligible for a reward:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All vulnerabilities marked in the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://drive.google.com/file/d/1d9SiGarziu9TgPKO_6sAG8odr2qBdMO0/view?usp=share_link\"\n  }, \"Ottersec security review\"), \" are not eligible for a reward.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The CLMM contract emits trading fee and farming yield tokens to LPs. If tokens from the vault or fees were drained by an attacker however, users would not be able to claim yield and transactions would fail. This is by design and not a vulnerability\")), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Raydium\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"RAY\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3/\"> Immunefi Vulnerability Severity Classification System V2.3.</a> This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. </p><p>All bug reports must include a Proof of Concept (PoC) demonstrating how the vulnerability can be exploited to impact an asset-in-scope to be eligible for a reward. Critical and High severity bug reports should also include a suggestion for a fix. Explanations and statements are not accepted as PoC and code is required.</p><p>Rewards for critical smart contract bug reports will be further capped at <strong>10%</strong> of direct funds at risk if the bug discovered is exploited. However, there is a minimum reward of <strong>USD 50 000</strong>.</p><p>The following vulnerabilities are not eligible for a reward:</p><ul><li>All vulnerabilities marked in the <a href=\"https://drive.google.com/file/d/1d9SiGarziu9TgPKO_6sAG8odr2qBdMO0/view?usp=share_link\">Ottersec security review</a> are not eligible for a reward.</li><li>The CLMM contract emits trading fee and farming yield tokens to LPs. If tokens from the vault or fees were drained by an attacker however, users would not be able to claim yield and transactions would fail. This is by design and not a vulnerability</li></ul><p>Payouts are handled by the <strong>Raydium</strong> team directly and are denominated in USD. However, payouts are done in <strong>RAY</strong>.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Documentation and instruction for PoC can be found here:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://drive.google.com/file/d/1UdCB2coRFZzxCmM11gUhZdd_6aaePe5O/view?usp=share_link\"\n  }, \"Raydium CLMM v3 overview document \"))), mdx(\"p\", null, \"A public testnet of Raydium can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://explorer.solana.com/address/proKtffCScMcwkFkPHFcuHawN7mWxRkhyh8PGxkTwYx\"\n  }, \"https://explorer.solana.com/address/proKtffCScMcwkFkPHFcuHawN7mWxRkhyh8PGxkTwYx.\"), \" However, note that testing on the public testnet is prohibited by the program rules. The public testnet is provided for reference only.\"), mdx(\"p\", null, \"If a Critical Impact can be caused to any other asset managed by Raydium that isn\\u2019t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project. This only applies to Critical impacts. \"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Documentation and instruction for PoC can be found here:</p><ul><li><a href=\"https://drive.google.com/file/d/1UdCB2coRFZzxCmM11gUhZdd_6aaePe5O/view?usp=share_link\">Raydium CLMM v3 overview document </a></li></ul><p>A public testnet of Raydium can be found at <a href=\"https://explorer.solana.com/address/proKtffCScMcwkFkPHFcuHawN7mWxRkhyh8PGxkTwYx\">https://explorer.solana.com/address/proKtffCScMcwkFkPHFcuHawN7mWxRkhyh8PGxkTwYx.</a> However, note that testing on the public testnet is prohibited by the program rules. The public testnet is provided for reference only.</p><p>If a Critical Impact can be caused to any other asset managed by Raydium that isn’t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project. This only applies to Critical impacts. </p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

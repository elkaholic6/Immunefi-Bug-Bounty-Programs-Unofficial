{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "filecoin",
      "slug": "filecoin",
      "project": "Filecoin",
      "maxBounty": 500000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3qI8wK3cAr9keSN6QLBCSE/6d1ca48363a4450ae1516814cc548c07/filecoin-logo.svg",
      "launchDate": "2023-04-14T14:00-06:00",
      "updatedDate": "2023-04-14T18:02:33.229Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "blockchain_dlt",
          "level": "critical",
          "payout": "USD $100,000 to USD $500,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "high",
          "payout": "USD $25,000 to USD $100,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "medium",
          "payout": "USD $10,000 to USD $25,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "low",
          "payout": "USD $1,000 to USD $10,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "1ZG4ft1ruINx3nbIvOxdxz",
          "type": "blockchain_dlt",
          "url": "https://github.com/filecoin-project/ref-fvm",
          "description": "FVM reference implementation"
        },
        {
          "id": "5LiPZftRuQ7hPeULEhn5mn",
          "type": "blockchain_dlt",
          "url": "https://github.com/filecoin-project/builtin-actors",
          "description": "Built-in Filecoin actors - written in Rust, Wasm-compiled built-in actors (smart contracts, in Filecoin lingo) that are used by all Filecoin clients"
        },
        {
          "id": "6ogKDXW0YGTvlH45RG5AyD",
          "type": "blockchain_dlt",
          "url": "https://github.com/filecoin-project/lotus",
          "description": "Lotus is the reference node implementation for the Filecoin network"
        }
      ],
      "impacts": [
        {
          "id": "6dyLHkOTYdWA9MW6ZCKZl3",
          "title": "Network not being able to confirm new transactions (Total network shutdown)",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "65gwXMX6NXIpApEtyHZlEU",
          "title": "Unintended permanent chain split requiring hard fork (Network partition requiring hard fork)",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "4W3P1DH8otLHjjRP9UoB2u",
          "title": "Direct loss of funds",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "36tXTlYGOpMj3MTLiIA9KW",
          "title": "Permanent, repeatable freezing of funds affecting core protocol areas (fix requires hard fork)",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "6K5S28GhiKtTrKiP0QOPUS",
          "title": "RPC API crash capable of impacting block production",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "59nEPggzzsuZTmMVAexEiL",
          "title": "Protocol-level bug that causes a general breakage of all contracts deployed on the chain",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "4eqY1KqjDuyRjmuToHbnib",
          "title": "Protocol-level bug that enables tricking contracts into sending funds to arbitrary addresses",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "2guabBwy35T1YQmPSwLS2i",
          "title": "Unintended chain split (Network partition) with localized impact",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "3AJwG22R8HGzMQb2HKuS5C",
          "title": "Transient consensus failures",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "7F1nMKquh89lsKuG1ubvhN",
          "title": "Inability to propagate new transactions",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "6GuG9tYw9qHdsSH8rjgvB7",
          "title": "Protocol-level bug preventing contracts from using their funds",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "6UKMGeKSmsCcnOk6eaYNuj",
          "title": "Protocol-level bug causing a general inability for developers to deploy new smart contracts",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "3K1FYwWMSgMF3JKYxVf0bW",
          "title": "Protocol-level bug rendering a single contract unusable after the exploit (i.e. contract bricked)",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "4p9uAaaJ61591QC4eer4wH",
          "title": "High compute consumption by validator/mining nodes",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "4OQDVAWRLwAoQHtOiiVo2T",
          "title": "Attacks against thin clients",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "4RzcfmVqFlXkl7DWFtz2Lk",
          "title": "DoS of greater than 30% of validator or miner nodes and does not shut down the network",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "3fS01S14PVTGLg9I4ose8U",
          "title": "Inability to deploy a contract under a specific circumstances",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "1fv3zoEdRKZJ6TEJE09kUI",
          "title": "DoS of greater than 10% but less than 30% of validator or miner nodes and does not shut down the network",
          "type": "blockchain_dlt",
          "severity": "low"
        },
        {
          "id": "3KDq6o2kaBH3T13L9BLZF",
          "title": "Underpricing transaction fees relative to computation time",
          "type": "blockchain_dlt",
          "severity": "low"
        },
        {
          "id": "1qD4rjbYVryplO6rIC2Jx1",
          "title": "Contract on the platform fails to deliver promised returns, but doesn’t lose values",
          "type": "blockchain_dlt",
          "severity": "low"
        },
        {
          "id": "77p3kCPjvhM3Mh4C4VxnIo",
          "title": "EVM instruction fails to execute when provided with specific parameters",
          "type": "blockchain_dlt",
          "severity": "low"
        }
      ],
      "programOverview": "Filecoin is a decentralized storage network designed to store humanity's most important data. As such, security is of paramount importance to us.\n\nThe Filecoin network shipped the [Filecoin Virtual Machine](https://fvm.dev) in May 2022. It is based on WebAssembly (Wasm), and is inspired by VM hypervisors and OS virtualization. FVM can support actors written for a variety of execution environments, including Ethereum Virtual Machine (EVM), Secure EcmaScript (SES), eBPF, and actors that compile to WebAssembly. This enables developers to write software that automates the storage, retrieval, and ultimately the transformation of data in a web3-native way.\n\nWith the M2.1 release of the FVM roadmap in March 2023, Filecoin launched the Ethereum Virtual Machine (EVM) runtime on top of FVM. Developers can port existing EVM contracts with no changes, while connecting them to Filecoin state and storage services. This makes Filecoin compatible with EVM tools, including wallets like MetaMask, and developer tools like Hardhat or Foundry, making deploying and interacting with EVM-based actors easy. \n\nThis bug bounty program is focused on the Filecoin Virtual Machine (FVM) and the Filecoin EVM runtime (FEVM). Smart contracts deployed on FEVM are excluded. \n\nFor more information about Filecoin, please visit [https://filecoin.io/](https://filecoin.io/). For more information about the FVM, visit [https://fvm.dev.](https://fvm.dev)\n\n__For Whitehats:__ It is highly recommended that you review the details of this program in full. Although many Bug Bounty programs have standard terms and conditions, each also has their own unique details that are critical to your success.  \n\nPrior to submitting a report please review the [Immunefi Bug Report Template and Best Practices. ](https://immunefisupport.zendesk.com/hc/en-us/articles/12435277406481-Bug-Report-Template)\n",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are considered out-of-scope and ineligible for payout.\n",
      "rewardsBody": "Please review how rewards are distributed based on the [Immunefi Vulnerability Severity Classification System V2.2.](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/) This is a simplified 5-level scale system with separate scales for Smart Contracts and Websites/Apps.\n\nAll rewards for the project bug bounty program are scaled based on an internally established team criteria, taking into account the exploitability of the bug, the impact it causes, and the likelihood of the vulnerability presenting itself, which is especially factored in with bug reports requiring multiple conditions to be met that are currently not in-place. However, there is a minimum reward for each severity level, rewards will be provided at the determined fair value by the team depending on these conditions, assuming that the bug report is in-scope of the bug bounty program.\n\n__Payouts and Payout Requirements:__\n\nPayouts are handled by the Filecoin team directly and are denominated in USD. However, payouts are done in FIL. Filecoin commits to honoring payouts according to the terms set out in this program at the time of report submission, and to treat this program as the agreement and source of truth concerning bug reports and responsible disclosures. \n\nFor the purposes of determining report validity, this is a Primacy of Rules program. \n\nLearn more about report validity best practices here: B[est Practice - Primacy of Impact vs Primacy of Rules.](https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact) \n\n__KYC Requirements__\n\nFilecoin does have a Know Your Customer (KYC) requirement for bug bounty payouts. \n\nKYC Info Required:\n- Legal Name\n- Country of residence\n- W9, W8BEN, or W8BENE forms \n\nKYC information is only required on confirmation of the validity of a bug report.   \n\n__Audit Discoveries and Known Issues:__\n\nBug reports covering previously-discovered bugs are not eligible for any reward through the bug bounty program. If a bug report covers a known issue, it may be rejected together with proof of the issue being known before escalation of the bug report via Immunefi. \n\n__Previous audits and known issues can be found at the following links:__\n\n| Description of known issue/repository     | Related Impact-in-Scope: Issues created in the following repos     |\n| ---------- | ---------- |\n| All issues, PRs and code comments that are already mentioned and listed in the FVM reference implementation repo       | https://github.com/filecoin-project/ref-fvm       |\n| All issues, PRs and code comments that are already mentioned and listed in the FVM reference implementation in the Built-in Filecoin actors repo       | https://github.com/filecoin-project/builtin-actors       |\n| All issues, PRs and code comments that are already mentioned and listed in Lotus, which is our reference node implementation for the Filecoin network       | https://github.com/filecoin-project/lotus       |\n| Issues and recommendations that are listed in the following audit report       | https://hackmd.io/@DraganZ/FEVM_M21_Audit_Dashboard_AlexW/edit       |\n| Issues and recommendations that are listed in the following audit:       | https://github.com/oak-security/audit-reports/blob/master/Filecoin%20Foundation/2023-03-09%20Audit%20Report%20-%20Filecoin%20EVM%20(FEVM)%20v1.1.pdf       |\n",
      "outOfScopeAndRules": "The following impacts and attack vectors are excluded from rewards by default for all Immunefi bug bounty programs: \n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist), except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\n- Any smart contract deployed on the FVM platform is out of scope for this bug bounty\n- Broken link hijacking is out of scope\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n- Centralization risks\n\n__Prohibited Activities:__\n\nThe following activities are prohibited by this bug bounty program. Violation of these rules can result in a temporary suspension or permanent ban from the Immunefi platform at the sole discretion of the Immunefi team, which may also result in: 1) the forfeiture and loss of access to all bug submissions, and 2) zero payout. \n\nPlease note that Immunefi has no tolerance for spam/low-quality/incomplete bug reports, “beg bounty” behavior, and misrepresentation of assets and severity. Immunefi exists to protect the global crypto community, not facilitate grift.\n\nProhibited: \n- Any testing with mainnet or public testnet deployed code; all testing should be done on private testnets\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- [Any other actions prohibited by the Immunefi Rules.](https://immunefi.com/rules/) These rules are subject to change at any time.  ",
      "assetsBodyV2": "Only those listed in the Assets in Scope table are considered to be in-scope of the bug bounty program. \n\n__Blockchain/DLT__ \n\n- Blockchain/DLT - PoC, Blockchain/DLT bug reports are to include a runnable Proof of Concept (PoC) in order to prove impact.  \n- For more information on PoCs please visit:[ Proof of Concept (PoC) Guidelines and Rules](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules)\n- The list of all deployed code can be found at:\n\n| Blockchain/DLT Asset     | Github Repo     |\n| ---------- | ---------- |\n| FVM reference implementation       | https://github.com/filecoin-project/ref-fvm       |\n| Built-in Filecoin actors - which are written in Rust; Wasm-compiled actors (smart contracts, in Filecoin lingo) that are used by all Filecoin clients       | https://github.com/filecoin-project/builtin-actors       |\n| Lotus is the reference node implementation for the Filecoin network       | https://github.com/filecoin-project/lotus       |\n\n__Dev Environments and Documentation__\n\nFilecoin has included dev documentation and/or instructions to help in reviewing code and exploring for bugs:\n\n- [Filecoin virtual machine -  Docs](https://docs.filecoin.io/developers/smart-contracts/filecoin-virtual-machine/)\n- [Introduction to Filecoin](https://docs.filecoin.io/intro/intro-to-filecoin/what-is-filecoin/)\n- [FVM website](https://fvm.filecoin.io/)\n- [Hyperspace dev environment](https://github.com/filecoin-project/testnet-hyperspace)\n- [FEVM Hardhat kit](https://github.com/filecoin-project/FEVM-Hardhat-Kit)\n- [FVM Hackathon Cheat Sheet](https://github.com/filecoin-project/community/discussions/585)\n- [FVM Implementation FIP](https://github.com/filecoin-project/FIPs/blob/master/FIPS/fip-0030.md)\n\n__Impacts in Scope__\n\nThis program is considered to be governed by Primacy of Rules. For more information on what this means visit: [Best Practice - Primacy of Impact vs Primacy of Rules. ](https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact)\n\nImpacts are based on the [Immunefi Vulnerability Severity Classification System V2.2.](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/)\n\nAt Immunefi, we classify bugs on a simplified 5-level scale:\n- Critical\n- High\n- Medium\n- Low\n- None\n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "L1"
        ],
        "projectType": [
          "Blockchain"
        ],
        "ecosystem": null,
        "programType": [
          "Blockchain/DLT"
        ],
        "language": [
          "Solidity",
          "Rust"
        ]
      },
      "legacy": {
        "technologies": [
          "Blockchain/DLT"
        ],
        "blockchain_rewards": [
          {
            "level": "Critical",
            "payout": "USD $100,000 to USD $500,000"
          },
          {
            "level": "High",
            "payout": "USD $25,000 to USD $100,000"
          },
          {
            "level": "Medium",
            "payout": "USD $10,000 to USD $25,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000 to USD $10,000"
          }
        ],
        "smartcontract_rewards": [],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Filecoin is a decentralized storage network designed to store humanity's most important data. As such, security is of paramount importance to us.\"), mdx(\"p\", null, \"The Filecoin network shipped the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://fvm.dev\"\n  }, \"Filecoin Virtual Machine\"), \" in May 2022. It is based on WebAssembly (Wasm), and is inspired by VM hypervisors and OS virtualization. FVM can support actors written for a variety of execution environments, including Ethereum Virtual Machine (EVM), Secure EcmaScript (SES), eBPF, and actors that compile to WebAssembly. This enables developers to write software that automates the storage, retrieval, and ultimately the transformation of data in a web3-native way.\"), mdx(\"p\", null, \"With the M2.1 release of the FVM roadmap in March 2023, Filecoin launched the Ethereum Virtual Machine (EVM) runtime on top of FVM. Developers can port existing EVM contracts with no changes, while connecting them to Filecoin state and storage services. This makes Filecoin compatible with EVM tools, including wallets like MetaMask, and developer tools like Hardhat or Foundry, making deploying and interacting with EVM-based actors easy. \"), mdx(\"p\", null, \"This bug bounty program is focused on the Filecoin Virtual Machine (FVM) and the Filecoin EVM runtime (FEVM). Smart contracts deployed on FEVM are excluded. \"), mdx(\"p\", null, \"For more information about Filecoin, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://filecoin.io/\"\n  }, \"https://filecoin.io/\"), \". For more information about the FVM, visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://fvm.dev\"\n  }, \"https://fvm.dev.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"For Whitehats:\"), \" It is highly recommended that you review the details of this program in full. Although many Bug Bounty programs have standard terms and conditions, each also has their own unique details that are critical to your success.  \"), mdx(\"p\", null, \"Prior to submitting a report please review the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/12435277406481-Bug-Report-Template\"\n  }, \"Immunefi Bug Report Template and Best Practices. \")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Filecoin is a decentralized storage network designed to store humanity&#x27;s most important data. As such, security is of paramount importance to us.</p><p>The Filecoin network shipped the <a href=\"https://fvm.dev\">Filecoin Virtual Machine</a> in May 2022. It is based on WebAssembly (Wasm), and is inspired by VM hypervisors and OS virtualization. FVM can support actors written for a variety of execution environments, including Ethereum Virtual Machine (EVM), Secure EcmaScript (SES), eBPF, and actors that compile to WebAssembly. This enables developers to write software that automates the storage, retrieval, and ultimately the transformation of data in a web3-native way.</p><p>With the M2.1 release of the FVM roadmap in March 2023, Filecoin launched the Ethereum Virtual Machine (EVM) runtime on top of FVM. Developers can port existing EVM contracts with no changes, while connecting them to Filecoin state and storage services. This makes Filecoin compatible with EVM tools, including wallets like MetaMask, and developer tools like Hardhat or Foundry, making deploying and interacting with EVM-based actors easy. </p><p>This bug bounty program is focused on the Filecoin Virtual Machine (FVM) and the Filecoin EVM runtime (FEVM). Smart contracts deployed on FEVM are excluded. </p><p>For more information about Filecoin, please visit <a href=\"https://filecoin.io/\">https://filecoin.io/</a>. For more information about the FVM, visit <a href=\"https://fvm.dev\">https://fvm.dev.</a></p><p><strong>For Whitehats:</strong> It is highly recommended that you review the details of this program in full. Although many Bug Bounty programs have standard terms and conditions, each also has their own unique details that are critical to your success.  </p><p>Prior to submitting a report please review the <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/12435277406481-Bug-Report-Template\">Immunefi Bug Report Template and Best Practices. </a></p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are considered out-of-scope and ineligible for payout.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are considered out-of-scope and ineligible for payout.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Please review how rewards are distributed based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2.\"), \" This is a simplified 5-level scale system with separate scales for Smart Contracts and Websites/Apps.\"), mdx(\"p\", null, \"All rewards for the project bug bounty program are scaled based on an internally established team criteria, taking into account the exploitability of the bug, the impact it causes, and the likelihood of the vulnerability presenting itself, which is especially factored in with bug reports requiring multiple conditions to be met that are currently not in-place. However, there is a minimum reward for each severity level, rewards will be provided at the determined fair value by the team depending on these conditions, assuming that the bug report is in-scope of the bug bounty program.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Payouts and Payout Requirements:\")), mdx(\"p\", null, \"Payouts are handled by the Filecoin team directly and are denominated in USD. However, payouts are done in FIL. Filecoin commits to honoring payouts according to the terms set out in this program at the time of report submission, and to treat this program as the agreement and source of truth concerning bug reports and responsible disclosures. \"), mdx(\"p\", null, \"For the purposes of determining report validity, this is a Primacy of Rules program. \"), mdx(\"p\", null, \"Learn more about report validity best practices here: B\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact\"\n  }, \"est Practice - Primacy of Impact vs Primacy of Rules.\"), \" \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"KYC Requirements\")), mdx(\"p\", null, \"Filecoin does have a Know Your Customer (KYC) requirement for bug bounty payouts. \"), mdx(\"p\", null, \"KYC Info Required:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Legal Name\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Country of residence\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"W9, W8BEN, or W8BENE forms \")), mdx(\"p\", null, \"KYC information is only required on confirmation of the validity of a bug report.   \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Audit Discoveries and Known Issues:\")), mdx(\"p\", null, \"Bug reports covering previously-discovered bugs are not eligible for any reward through the bug bounty program. If a bug report covers a known issue, it may be rejected together with proof of the issue being known before escalation of the bug report via Immunefi. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Previous audits and known issues can be found at the following links:\")), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Description of known issue/repository\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Related Impact-in-Scope: Issues created in the following repos\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"All issues, PRs and code comments that are already mentioned and listed in the FVM reference implementation repo\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://github.com/filecoin-project/ref-fvm\"\n  }, \"https://github.com/filecoin-project/ref-fvm\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"All issues, PRs and code comments that are already mentioned and listed in the FVM reference implementation in the Built-in Filecoin actors repo\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://github.com/filecoin-project/builtin-actors\"\n  }, \"https://github.com/filecoin-project/builtin-actors\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"All issues, PRs and code comments that are already mentioned and listed in Lotus, which is our reference node implementation for the Filecoin network\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://github.com/filecoin-project/lotus\"\n  }, \"https://github.com/filecoin-project/lotus\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Issues and recommendations that are listed in the following audit report\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://hackmd.io/@DraganZ/FEVM_M21_Audit_Dashboard_AlexW/edit\"\n  }, \"https://hackmd.io/@DraganZ/FEVM_M21_Audit_Dashboard_AlexW/edit\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Issues and recommendations that are listed in the following audit:\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://github.com/oak-security/audit-reports/blob/master/Filecoin%20Foundation/2023-03-09%20Audit%20Report%20-%20Filecoin%20EVM%20(FEVM)%20v1.1.pdf\"\n  }, \"https://github.com/oak-security/audit-reports/blob/master/Filecoin%20Foundation/2023-03-09%20Audit%20Report%20-%20Filecoin%20EVM%20(FEVM)%20v1.1.pdf\"))))));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Please review how rewards are distributed based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/\">Immunefi Vulnerability Severity Classification System V2.2.</a> This is a simplified 5-level scale system with separate scales for Smart Contracts and Websites/Apps.</p><p>All rewards for the project bug bounty program are scaled based on an internally established team criteria, taking into account the exploitability of the bug, the impact it causes, and the likelihood of the vulnerability presenting itself, which is especially factored in with bug reports requiring multiple conditions to be met that are currently not in-place. However, there is a minimum reward for each severity level, rewards will be provided at the determined fair value by the team depending on these conditions, assuming that the bug report is in-scope of the bug bounty program.</p><p><strong>Payouts and Payout Requirements:</strong></p><p>Payouts are handled by the Filecoin team directly and are denominated in USD. However, payouts are done in FIL. Filecoin commits to honoring payouts according to the terms set out in this program at the time of report submission, and to treat this program as the agreement and source of truth concerning bug reports and responsible disclosures. </p><p>For the purposes of determining report validity, this is a Primacy of Rules program. </p><p>Learn more about report validity best practices here: B<a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact\">est Practice - Primacy of Impact vs Primacy of Rules.</a> </p><p><strong>KYC Requirements</strong></p><p>Filecoin does have a Know Your Customer (KYC) requirement for bug bounty payouts. </p><p>KYC Info Required:</p><ul><li>Legal Name</li><li>Country of residence</li><li>W9, W8BEN, or W8BENE forms </li></ul><p>KYC information is only required on confirmation of the validity of a bug report.   </p><p><strong>Audit Discoveries and Known Issues:</strong></p><p>Bug reports covering previously-discovered bugs are not eligible for any reward through the bug bounty program. If a bug report covers a known issue, it may be rejected together with proof of the issue being known before escalation of the bug report via Immunefi. </p><p><strong>Previous audits and known issues can be found at the following links:</strong></p><table><thead><tr><th>Description of known issue/repository</th><th>Related Impact-in-Scope: Issues created in the following repos</th></tr></thead><tbody><tr><td>All issues, PRs and code comments that are already mentioned and listed in the FVM reference implementation repo</td><td><a href=\"https://github.com/filecoin-project/ref-fvm\">https://github.com/filecoin-project/ref-fvm</a></td></tr><tr><td>All issues, PRs and code comments that are already mentioned and listed in the FVM reference implementation in the Built-in Filecoin actors repo</td><td><a href=\"https://github.com/filecoin-project/builtin-actors\">https://github.com/filecoin-project/builtin-actors</a></td></tr><tr><td>All issues, PRs and code comments that are already mentioned and listed in Lotus, which is our reference node implementation for the Filecoin network</td><td><a href=\"https://github.com/filecoin-project/lotus\">https://github.com/filecoin-project/lotus</a></td></tr><tr><td>Issues and recommendations that are listed in the following audit report</td><td><a href=\"https://hackmd.io/@DraganZ/FEVM_M21_Audit_Dashboard_AlexW/edit\">https://hackmd.io/@DraganZ/FEVM_M21_Audit_Dashboard_AlexW/edit</a></td></tr><tr><td>Issues and recommendations that are listed in the following audit:</td><td><a href=\"https://github.com/oak-security/audit-reports/blob/master/Filecoin%20Foundation/2023-03-09%20Audit%20Report%20-%20Filecoin%20EVM%20(FEVM)%20v1.1.pdf\">https://github.com/oak-security/audit-reports/blob/master/Filecoin%20Foundation/2023-03-09%20Audit%20Report%20-%20Filecoin%20EVM%20(FEVM)%20v1.1.pdf</a></td></tr></tbody></table>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following impacts and attack vectors are excluded from rewards by default for all Immunefi bug bounty programs: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist), except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any smart contract deployed on the FVM platform is out of scope for this bug bounty\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Broken link hijacking is out of scope\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Prohibited Activities:\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program. Violation of these rules can result in a temporary suspension or permanent ban from the Immunefi platform at the sole discretion of the Immunefi team, which may also result in: 1) the forfeiture and loss of access to all bug submissions, and 2) zero payout. \"), mdx(\"p\", null, \"Please note that Immunefi has no tolerance for spam/low-quality/incomplete bug reports, \\u201Cbeg bounty\\u201D behavior, and misrepresentation of assets and severity. Immunefi exists to protect the global crypto community, not facilitate grift.\"), mdx(\"p\", null, \"Prohibited: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet deployed code; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://immunefi.com/rules/\"\n  }, \"Any other actions prohibited by the Immunefi Rules.\"), \" These rules are subject to change at any time.  \")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following impacts and attack vectors are excluded from rewards by default for all Immunefi bug bounty programs: </p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist), except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible</li><li>Any smart contract deployed on the FVM platform is out of scope for this bug bounty</li><li>Broken link hijacking is out of scope</li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p><strong>Prohibited Activities:</strong></p><p>The following activities are prohibited by this bug bounty program. Violation of these rules can result in a temporary suspension or permanent ban from the Immunefi platform at the sole discretion of the Immunefi team, which may also result in: 1) the forfeiture and loss of access to all bug submissions, and 2) zero payout. </p><p>Please note that Immunefi has no tolerance for spam/low-quality/incomplete bug reports, “beg bounty” behavior, and misrepresentation of assets and severity. Immunefi exists to protect the global crypto community, not facilitate grift.</p><p>Prohibited: </p><ul><li>Any testing with mainnet or public testnet deployed code; all testing should be done on private testnets</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li><li><a href=\"https://immunefi.com/rules/\">Any other actions prohibited by the Immunefi Rules.</a> These rules are subject to change at any time.  </li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only those listed in the Assets in Scope table are considered to be in-scope of the bug bounty program. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Blockchain/DLT\"), \" \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Blockchain/DLT - PoC, Blockchain/DLT bug reports are to include a runnable Proof of Concept (PoC) in order to prove impact.  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For more information on PoCs please visit:\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\"\n  }, \" Proof of Concept (PoC) Guidelines and Rules\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The list of all deployed code can be found at:\")), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Blockchain/DLT Asset\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Github Repo\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"FVM reference implementation\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://github.com/filecoin-project/ref-fvm\"\n  }, \"https://github.com/filecoin-project/ref-fvm\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Built-in Filecoin actors - which are written in Rust; Wasm-compiled actors (smart contracts, in Filecoin lingo) that are used by all Filecoin clients\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://github.com/filecoin-project/builtin-actors\"\n  }, \"https://github.com/filecoin-project/builtin-actors\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Lotus is the reference node implementation for the Filecoin network\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://github.com/filecoin-project/lotus\"\n  }, \"https://github.com/filecoin-project/lotus\"))))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Dev Environments and Documentation\")), mdx(\"p\", null, \"Filecoin has included dev documentation and/or instructions to help in reviewing code and exploring for bugs:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.filecoin.io/developers/smart-contracts/filecoin-virtual-machine/\"\n  }, \"Filecoin virtual machine -  Docs\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.filecoin.io/intro/intro-to-filecoin/what-is-filecoin/\"\n  }, \"Introduction to Filecoin\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://fvm.filecoin.io/\"\n  }, \"FVM website\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/filecoin-project/testnet-hyperspace\"\n  }, \"Hyperspace dev environment\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/filecoin-project/FEVM-Hardhat-Kit\"\n  }, \"FEVM Hardhat kit\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/filecoin-project/community/discussions/585\"\n  }, \"FVM Hackathon Cheat Sheet\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/filecoin-project/FIPs/blob/master/FIPS/fip-0030.md\"\n  }, \"FVM Implementation FIP\"))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Impacts in Scope\")), mdx(\"p\", null, \"This program is considered to be governed by Primacy of Rules. For more information on what this means visit: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact\"\n  }, \"Best Practice - Primacy of Impact vs Primacy of Rules. \")), mdx(\"p\", null, \"Impacts are based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2.\")), mdx(\"p\", null, \"At Immunefi, we classify bugs on a simplified 5-level scale:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Critical\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"High\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Medium\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Low\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"None\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only those listed in the Assets in Scope table are considered to be in-scope of the bug bounty program. </p><p><strong>Blockchain/DLT</strong> </p><ul><li>Blockchain/DLT - PoC, Blockchain/DLT bug reports are to include a runnable Proof of Concept (PoC) in order to prove impact.  </li><li>For more information on PoCs please visit:<a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\"> Proof of Concept (PoC) Guidelines and Rules</a></li><li>The list of all deployed code can be found at:</li></ul><table><thead><tr><th>Blockchain/DLT Asset</th><th>Github Repo</th></tr></thead><tbody><tr><td>FVM reference implementation</td><td><a href=\"https://github.com/filecoin-project/ref-fvm\">https://github.com/filecoin-project/ref-fvm</a></td></tr><tr><td>Built-in Filecoin actors - which are written in Rust; Wasm-compiled actors (smart contracts, in Filecoin lingo) that are used by all Filecoin clients</td><td><a href=\"https://github.com/filecoin-project/builtin-actors\">https://github.com/filecoin-project/builtin-actors</a></td></tr><tr><td>Lotus is the reference node implementation for the Filecoin network</td><td><a href=\"https://github.com/filecoin-project/lotus\">https://github.com/filecoin-project/lotus</a></td></tr></tbody></table><p><strong>Dev Environments and Documentation</strong></p><p>Filecoin has included dev documentation and/or instructions to help in reviewing code and exploring for bugs:</p><ul><li><a href=\"https://docs.filecoin.io/developers/smart-contracts/filecoin-virtual-machine/\">Filecoin virtual machine -  Docs</a></li><li><a href=\"https://docs.filecoin.io/intro/intro-to-filecoin/what-is-filecoin/\">Introduction to Filecoin</a></li><li><a href=\"https://fvm.filecoin.io/\">FVM website</a></li><li><a href=\"https://github.com/filecoin-project/testnet-hyperspace\">Hyperspace dev environment</a></li><li><a href=\"https://github.com/filecoin-project/FEVM-Hardhat-Kit\">FEVM Hardhat kit</a></li><li><a href=\"https://github.com/filecoin-project/community/discussions/585\">FVM Hackathon Cheat Sheet</a></li><li><a href=\"https://github.com/filecoin-project/FIPs/blob/master/FIPS/fip-0030.md\">FVM Implementation FIP</a></li></ul><p><strong>Impacts in Scope</strong></p><p>This program is considered to be governed by Primacy of Rules. For more information on what this means visit: <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact\">Best Practice - Primacy of Impact vs Primacy of Rules. </a></p><p>Impacts are based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/\">Immunefi Vulnerability Severity Classification System V2.2.</a></p><p>At Immunefi, we classify bugs on a simplified 5-level scale:</p><ul><li>Critical</li><li>High</li><li>Medium</li><li>Low</li><li>None</li></ul>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

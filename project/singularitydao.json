{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "singularitydao",
      "slug": "singularitydao",
      "project": "SingularityDAO",
      "maxBounty": 25000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3rxB5ftzr6LquSM38Y66yH/7c557b7d1205cb94d4313471a54876f0/SDAOLogoHorizontalTransparentBG.svg",
      "launchDate": "2023-03-08T15:00-05:00",
      "updatedDate": "2023-03-09T07:59:05.148Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $25,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $10,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "7DppioXID6Ed8M0bEnKemi",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x38Df9f77E687576fdB888E569709CC26D5e73e28",
          "description": "chainlinkOracle"
        },
        {
          "id": "2j3XzeunA5MlHwd7IBfxb0",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x96263113aE253b82A5345fb036A69Dd5852a0A33",
          "description": "uniswapv3Oracle"
        },
        {
          "id": "EpontLJBtaxQVHXQthXU3",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x4C168F4cC5a9c648F985B363bd528f21D6b198Dd",
          "description": "uniswapv2Oracle"
        },
        {
          "id": "4uWNOxhvVTf0c56OPgjjBa",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x2989d5b5cD2a1d0735661067F9f9471f57851981",
          "description": "usdcOracle"
        },
        {
          "id": "6p16P3EUPF6KrqtnlP6KMh",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xb245Ab0d2e9dfB99b1212eb3d7732c22591557A2",
          "description": "dynasetFactory"
        },
        {
          "id": "4qF3xJaRvhQJX4ekV0Ujk0",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xDa49AF8773Cb162ca56f8431442c750896F8C87A",
          "description": "dynBTC_dynaset"
        },
        {
          "id": "3pLcV4g1DnBgrhKbjsHrjr",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xa37F48577a9141bd94e7D6A2C976852C77D2BAA2",
          "description": "dynBTC_oracle"
        },
        {
          "id": "3k3XjJOc51FaYVFlPBHDa7",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x5d94F225caBd9010c8206c1036c6352F66C06E57",
          "description": "dynBTC_forge"
        },
        {
          "id": "3KTiewOmFGpdZY6ixWAiYU",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x7bb1A6b19e37028B3aA5c580339c640720E35203",
          "description": "dynETH_dynaset"
        },
        {
          "id": "2L0CQLZqFfzPuWDBexMNmE",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x92cfd89ee8E809dF40c2Fc0abD5A9C806687dAD6",
          "description": "dynETH_oracle"
        },
        {
          "id": "4zPsGXL0CrwKw6GfButzoL",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xa5a94Da27E2533ceD5c68D6DFAbDB5FB4269Dd97",
          "description": "dynETH_forge"
        },
        {
          "id": "485rWTCMrP5da8Wg4azJmo",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xbBbfa5d0Bfd30B9ebce64b06E3E9Fc85E7f0F396",
          "description": "dynETHc_dynaset"
        },
        {
          "id": "5b0sQy8c9vl46O6FJkNN3",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x8F230dE6D87ABF5aA4486450bd8Da53dB5Fcf532",
          "description": "dynETHc_oracle"
        },
        {
          "id": "3RjBh6jItlGjMtYvMIFjls",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xd32050abDeBCC751D7889BC928BE807812337e8d",
          "description": "dynETHc_forge"
        },
        {
          "id": "mDQAKbMfXM6LTPqtE36Sl",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xD6aaAeC9ee40F11A59524b1E564A89c5A7fCD8DC",
          "description": "dynasetDydxFactory"
        },
        {
          "id": "3mGnShN9FcLAjvB9ZNStZk",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x976a95786DA6f6eE1c0755cCFB9A22adac2BF7B2",
          "description": "dynDYDX_dynaset"
        },
        {
          "id": "7540SdAFwOw4y5I7caLqeY",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x189E59BdE619d56760c742128246aF0E2DCb052e",
          "description": "dynDYDX_oracle"
        },
        {
          "id": "yJKQUZ4E0NHRQaLvESeKL",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xe125044733366071793Afd1f9CB41521078Dd029",
          "description": "dynDYDX_forge"
        }
      ],
      "impacts": [
        {
          "id": "a686GQqUb6F4UWhfetv6f",
          "title": "Any governance voting result manipulation (excluding manipulating third party websites)",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "rnfavDG9m4UqTVK7yJPNm",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6kFclIOZjYYAIeJ3zkHjrt",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1cML83qQSCpqGY0jOVvWBI",
          "title": "Protocol insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6nZtmKnRrOjU8teFZxjBRX",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6iiOAMaFWNwW8ARUQOZcsc",
          "title": "Theft of unclaimed royalties",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "27bvrw39MMx493MyKSMwQ4",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "7epHk8bmkSRj6QYqjwQ9uC",
          "title": "Permanent freezing of unclaimed royalties",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6sTP2QNqQvnVjIAm58JihM",
          "title": "Temporary freezing of funds for at least 120 minutes (excluding vaults that requires and features users to lock/freeze their funds)",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "7gUzoHpblN9lbhOfzLFbW2",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "4TYbu5GUja0nB5YrpAo5Ai",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "77hDYPDmvgGdacbR67v5K1",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5A3y4qhy8sKgirVTCHKFFR",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "7oPGYSs12f2HiboAJoHebP",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "4vz0tuflSct3eF8zBSvhit",
          "title": "Smart contract fails to deliver promised returns, but doesnâ€™t lose value",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "SingularityDAO is a decentralised Portfolio Management Protocol designed to enable anybody to safely and easily manage crypto assets, supported by superior risk management and analytics tools; smart money, on-chain. A non-custodial protocol to foster a new ecosystem of Digital Asset Managers to offer automated trading strategies leveraging AI-enchanted data analytics services.\n\nFor more information about SingularityDAO, please visit [https://singularitydao.ai/](https://singularitydao.ai/)\n",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the  [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\n\nAll bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nKnown issues highlighted in the following audit reports are considered out of scope: \n- [https://hacken.io/wp-content/uploads/2022/04/SDAO-TokenConversion_16032022SCAudit_Report_3.pdf](https://hacken.io/wp-content/uploads/2022/04/SDAO-TokenConversion_16032022SCAudit_Report_3.pdf)\n- [https://hacken.io/wp-content/uploads/2022/04/SDAO-UpgradableTokens_10032022SCAudit_Report.pdf](https://hacken.io/wp-content/uploads/2022/04/SDAO-UpgradableTokens_10032022SCAudit_Report.pdf)\n- [https://hacken.io/wp-content/uploads/2022/04/SDAO-Dynaset_15122021SCAudit_Report_2.pdf](https://hacken.io/wp-content/uploads/2022/04/SDAO-Dynaset_15122021SCAudit_Report_2.pdf)\n- [https://hacken.io/wp-content/uploads/2022/04/SDAO-Airdrop_14012022SCAudit_Report_3.pdf](https://hacken.io/wp-content/uploads/2022/04/SDAO-Airdrop_14012022SCAudit_Report_3.pdf)\n- [https://hacken.io/wp-content/uploads/2022/04/SDAO_30082022_SCAudit_Report-2.pdf](https://hacken.io/wp-content/uploads/2022/04/SDAO_30082022_SCAudit_Report-2.pdf)\n- [https://hacken.io/wp-content/uploads/2022/04/SDAO_Dydx_30082022_SCAudit_Report-2.pdf ](https://hacken.io/wp-content/uploads/2022/04/SDAO_Dydx_30082022_SCAudit_Report-2.pdf)\n\nPayouts are handled by the __SingularityDAO__ team directly and are denominated in USD. However, payouts are done in __USDC__ or __SDAO__, at the discretion of the project.\n",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Attacks on governance by manipulating third-party websites\n\n__Smart Contracts and Blockchain__\n\n- Incorrect data supplied by third party oracles\n   - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n- Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n- Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- Interacting with accounts that you do not own\n",
      "assetsBodyV2": "All smart contracts of SingularityDAO can be found at [https://github.com/Singularity-DAO/dynaset-contracts](https://github.com/Singularity-DAO/dynaset-contracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\nIf an impact can be caused to any other asset managed by SingularityDAO that isnâ€™t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project. Bugs found in third party assets are not accepted. ",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Asset Management"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": null
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $25,000"
          },
          {
            "level": "High",
            "payout": "USD $10,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"SingularityDAO is a decentralised Portfolio Management Protocol designed to enable anybody to safely and easily manage crypto assets, supported by superior risk management and analytics tools; smart money, on-chain. A non-custodial protocol to foster a new ecosystem of Digital Asset Managers to offer automated trading strategies leveraging AI-enchanted data analytics services.\"), mdx(\"p\", null, \"For more information about SingularityDAO, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://singularitydao.ai/\"\n  }, \"https://singularitydao.ai/\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>SingularityDAO is a decentralised Portfolio Management Protocol designed to enable anybody to safely and easily manage crypto assets, supported by superior risk management and analytics tools; smart money, on-chain. A non-custodial protocol to foster a new ecosystem of Digital Asset Managers to offer automated trading strategies leveraging AI-enchanted data analytics services.</p><p>For more information about SingularityDAO, please visit <a href=\"https://singularitydao.ai/\">https://singularitydao.ai/</a></p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the  \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\"), mdx(\"p\", null, \"All bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\"), mdx(\"p\", null, \"Known issues highlighted in the following audit reports are considered out of scope: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://hacken.io/wp-content/uploads/2022/04/SDAO-TokenConversion_16032022SCAudit_Report_3.pdf\"\n  }, \"https://hacken.io/wp-content/uploads/2022/04/SDAO-TokenConversion_16032022SCAudit_Report_3.pdf\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://hacken.io/wp-content/uploads/2022/04/SDAO-UpgradableTokens_10032022SCAudit_Report.pdf\"\n  }, \"https://hacken.io/wp-content/uploads/2022/04/SDAO-UpgradableTokens_10032022SCAudit_Report.pdf\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://hacken.io/wp-content/uploads/2022/04/SDAO-Dynaset_15122021SCAudit_Report_2.pdf\"\n  }, \"https://hacken.io/wp-content/uploads/2022/04/SDAO-Dynaset_15122021SCAudit_Report_2.pdf\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://hacken.io/wp-content/uploads/2022/04/SDAO-Airdrop_14012022SCAudit_Report_3.pdf\"\n  }, \"https://hacken.io/wp-content/uploads/2022/04/SDAO-Airdrop_14012022SCAudit_Report_3.pdf\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://hacken.io/wp-content/uploads/2022/04/SDAO_30082022_SCAudit_Report-2.pdf\"\n  }, \"https://hacken.io/wp-content/uploads/2022/04/SDAO_30082022_SCAudit_Report-2.pdf\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://hacken.io/wp-content/uploads/2022/04/SDAO_Dydx_30082022_SCAudit_Report-2.pdf\"\n  }, \"https://hacken.io/wp-content/uploads/2022/04/SDAO_Dydx_30082022_SCAudit_Report-2.pdf \"))), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"SingularityDAO\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \" or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"SDAO\"), \", at the discretion of the project.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the  <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.</p><p>All bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.</p><p>Known issues highlighted in the following audit reports are considered out of scope: </p><ul><li><a href=\"https://hacken.io/wp-content/uploads/2022/04/SDAO-TokenConversion_16032022SCAudit_Report_3.pdf\">https://hacken.io/wp-content/uploads/2022/04/SDAO-TokenConversion_16032022SCAudit_Report_3.pdf</a></li><li><a href=\"https://hacken.io/wp-content/uploads/2022/04/SDAO-UpgradableTokens_10032022SCAudit_Report.pdf\">https://hacken.io/wp-content/uploads/2022/04/SDAO-UpgradableTokens_10032022SCAudit_Report.pdf</a></li><li><a href=\"https://hacken.io/wp-content/uploads/2022/04/SDAO-Dynaset_15122021SCAudit_Report_2.pdf\">https://hacken.io/wp-content/uploads/2022/04/SDAO-Dynaset_15122021SCAudit_Report_2.pdf</a></li><li><a href=\"https://hacken.io/wp-content/uploads/2022/04/SDAO-Airdrop_14012022SCAudit_Report_3.pdf\">https://hacken.io/wp-content/uploads/2022/04/SDAO-Airdrop_14012022SCAudit_Report_3.pdf</a></li><li><a href=\"https://hacken.io/wp-content/uploads/2022/04/SDAO_30082022_SCAudit_Report-2.pdf\">https://hacken.io/wp-content/uploads/2022/04/SDAO_30082022_SCAudit_Report-2.pdf</a></li><li><a href=\"https://hacken.io/wp-content/uploads/2022/04/SDAO_Dydx_30082022_SCAudit_Report-2.pdf\">https://hacken.io/wp-content/uploads/2022/04/SDAO_Dydx_30082022_SCAudit_Report-2.pdf </a></li></ul><p>Payouts are handled by the <strong>SingularityDAO</strong> team directly and are denominated in USD. However, payouts are done in <strong>USDC</strong> or <strong>SDAO</strong>, at the discretion of the project.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks on governance by manipulating third-party websites\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Interacting with accounts that you do not own\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li><li>Attacks on governance by manipulating third-party websites</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li><li>Interacting with accounts that you do not own</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of SingularityDAO can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/Singularity-DAO/dynaset-contracts\"\n  }, \"https://github.com/Singularity-DAO/dynaset-contracts\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\"), mdx(\"p\", null, \"If an impact can be caused to any other asset managed by SingularityDAO that isn\\u2019t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project. Bugs found in third party assets are not accepted. \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of SingularityDAO can be found at <a href=\"https://github.com/Singularity-DAO/dynaset-contracts\">https://github.com/Singularity-DAO/dynaset-contracts</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.</p><p>If an impact can be caused to any other asset managed by SingularityDAO that isnâ€™t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project. Bugs found in third party assets are not accepted. </p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "gainsnetwork",
      "slug": "gainsnetwork",
      "project": "Gains Network",
      "maxBounty": 400000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/53Lo497dIPH3nrT78lr8qx/8009fbbcd62a15a011fa8c394e5c5c59/Gains_Network_logo.jpeg",
      "launchDate": "2022-03-10T13:00-07:00",
      "updatedDate": "2023-08-01T21:42:07.807Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to USD $400,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $50,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $25,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $10,000",
          "pocRequired": false
        },
        {
          "assetType": "websites_and_applications",
          "level": "critical",
          "payout": "USD $40,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "high",
          "payout": "USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "medium",
          "payout": "USD $2,500",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "1xiu2gRT5gxq4N3docaq91",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xE5417Af564e4bFDA1c483642db72007871397896",
          "description": "GainsNetworkToken"
        },
        {
          "id": "6JPQAu5DqWAKfgvuHYQkms",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x18c11FD286C5EC11c3b683Caa813B77f5163A122",
          "description": "GainsNetworkToken"
        },
        {
          "id": "6EW3s1mUhhxknFzctu5sqv",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x7075cAB6bCCA06613e2d071bd918D1a0241379E2",
          "description": "GFarm2Token"
        },
        {
          "id": "7KFWks7gaIU1E2MwE4k0Sa",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x831091da075665168e01898c6dac004a867f1e1b",
          "description": "GFarmToken"
        },
        {
          "id": "2AJ58XJW6zE5FpYJaS4293",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xF9A4c522E327935BD1F5a338c121E14e4cc1f898",
          "description": "GFarmNft1"
        },
        {
          "id": "2IeDgZNGxvVyTGk1Y8JWSX",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x75cbcc5414C539C2B302A5fA60E30B949D2D6F89",
          "description": "GainsNetworkNft1"
        },
        {
          "id": "23SyOsxCuliiHTb5vB8Gt4",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x77cd42B925e1A82f41d852D6BE727CFc88fddBbC",
          "description": "GFarmNft2"
        },
        {
          "id": "62BugvlcXXyYLuZHJ5RQvO",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xD1F024ba4Dbb1593B486cB5031b3AC5aC28e8A4e",
          "description": "GainsNetworkNft2"
        },
        {
          "id": "6bra6r43qnvSZw3Sytail2",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x3378AD81D09DE23725Ee9B9270635c97Ed601921",
          "description": "GFarmNft3"
        },
        {
          "id": "4G6nzjO2y2HTrh3z5pv918",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x9834159EAF9811cf4C568294D5C7C9158F84b384",
          "description": "GainsNetworkNft3"
        },
        {
          "id": "28stkVxB94YRAUVRyaIJ2y",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x02e2c5825C1a3b69C0417706DbE1327C2Af3e6C2",
          "description": "GFarmNft4"
        },
        {
          "id": "6pehV9Ts6JHKhlnOZb4GSB",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x40F0AeaB6383Be2f254cE40B79089070Fa1a21A1",
          "description": "GainsNetworkNft4"
        },
        {
          "id": "2uuWKEcRykQrEzqqDry5rV",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x2D266A94469d05C9e06D52A4D0d9C23b157767c2",
          "description": "GFarmNft5"
        },
        {
          "id": "32GxOa6VAntTwfQUDviV23",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x5e3b541Ad6AcC4381C110247946C863e05ffc9BE",
          "description": "GainsNetworkNft5"
        },
        {
          "id": "73mDbxgm6A1CUKwx86SFvP",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x43ccd9ea8f64b8918267f7ee4a071d3e9168f9cd",
          "description": "GFarmNFT"
        },
        {
          "id": "1MPuC1F8sajwrnfMgYYNKG",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xDF774A4F3EA5095535f5B8f5b9149caF90FF75Bd",
          "description": "ERC20Bridge"
        },
        {
          "id": "4HrBJsPjGsm5ZZSc78g6vj",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x01cAaaA682Ceba8cd6c02f93BB1393fB415fA5e2",
          "description": "ERC20Bridge"
        },
        {
          "id": "3rPrrluZMg8Zaw8jRTkvuf",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xa33f7069f075A54481868e4C0b8D26925A218362",
          "description": "ERC721LockingBridge"
        },
        {
          "id": "FOcM1N3ihWaUMKSK9Xbkx",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x0F9E4375facBeB90DAA850f677819b438ce50827",
          "description": "ERC721MintingBridge"
        },
        {
          "id": "3KjWOSvlizntaA8N1q1Vj4",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x91993f2101cc758D0dEB7279d41e880F7dEFe827",
          "description": "GToken (gDAI)"
        },
        {
          "id": "TEApTAscbsT0v0tmJC1SZ",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xd85E038593d7A098614721EaE955EC2022B9B91B",
          "description": "GToken (gDAI)"
        },
        {
          "id": "TNU4pT6qYMHPiVm8Pit7m",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x8d687276543b92819F2f2B5C3faad4AD27F4440c",
          "description": "GTokenOpenPnlFeed (gDAI)"
        },
        {
          "id": "Y9CvHbk7tQB2XRre1VH5G",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x990BA9Edd8a9615A23E4c452E63A80e519A4a23D",
          "description": "GTokenOpenPnlFeed (gDAI)"
        },
        {
          "id": "5LVCTIHPVlJ2y1n5V7RYtj",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xDd42AA3920C1d5b5FD95055d852135416369Bcc1",
          "description": "GTokenLockedDepositNft (gNFT-DAI)"
        },
        {
          "id": "6eUzCMzNo6uiyRH4vYatCN",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x673cf5AB7b44Caac43C80dE5b99A37Ed5B3E4Cc6",
          "description": " GTokenLockedDepositNft (gNFT-DAI)"
        },
        {
          "id": "2vEvfrQS2nNYEREmv3Ap3j",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x82e59334da8c667797009bbe82473b55c7a6b311",
          "description": "GNSTradingCallbacksV6_3_2"
        },
        {
          "id": "4EdCMstNt4dXAOhghGzstj",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x298a695906e16aea0a184a2815a76ead1a0b7522",
          "description": "GNSTradingCallbacksV6_3_2"
        },
        {
          "id": "2q9mZx0JdtGpf5fIyycsjw",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x631e885028E75fCbB34C06d8ecB8e20eA18f6632",
          "description": "GNSPriceAggregatorV6_3"
        },
        {
          "id": "6Up75CtBezbP1VU1XUDZ9j",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xcef1C791CDd8c3EA92D6AB32399119Fd30E1Ff21",
          "description": "GNSPriceAggregatorV6_3"
        },
        {
          "id": "6pKgDTt18Xa9cAMWJOvgQx",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x5C58A8acAc721928b6f4495370C10762795d83dA",
          "description": "GNSTradingV6_3_2"
        },
        {
          "id": "Lm5ZRf6sFCzmx3MMYRiW4",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xcDCB434D576c5B1CF387cB272756199B7E72C44d",
          "description": "GNSTradingV6_3_2"
        },
        {
          "id": "730hLc1PXcuVTlsNMMam0P",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xFb06a737f549Eb2512Eb6082A808fc7F16C0819D",
          "description": "GNSStakingV6_2"
        },
        {
          "id": "1L1OjPLhGu9O2hNjkM13eA",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x6B8D3C08072a020aC065c467ce922e3A36D3F9d6",
          "description": "GNSStakingV6_2"
        },
        {
          "id": "1moAR9Ss558hw8IMHpuibV",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x0F9498b1206Bf9FfDE2a2321fDB56F573A052425",
          "description": "GNSReferralsV6_2"
        },
        {
          "id": "WQtP6nzyfmUIrqICHdOxn",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xAA379DD7Ec0bae467490e89bB2055A7e01231b8f",
          "description": "GNSReferralsV6_2"
        },
        {
          "id": "1ovjEY1KR0pCIVH4TDQdx9",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xEe7442aCcC1C27f2C69423576d3b1D25b563E977",
          "description": "GNSPairInfosV6_1"
        },
        {
          "id": "L8SPU6qx0aqickIdZHUFt",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x04a5e3cf21B0080B72fAcDca634349A56982D497",
          "description": "GNSPairInfosV6_1"
        },
        {
          "id": "3UvHCljh4rxwxLPTv544wJ",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x6e5326e944F528c243B9Ca5d14fe5C9269a8c922",
          "description": "GNSPairsStorageV6"
        },
        {
          "id": "7oBQN2BMHcBCaB9U9VJ0Zk",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xf67Df2a4339eC1591615d94599081Dd037960d4b",
          "description": "GNSPairsStorageV6"
        },
        {
          "id": "5mjCDG8g3aedCoIzb1j0Zk",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x5FB47355828c0902AcBBE759CEe1b8342c41178b",
          "description": "Aggregator"
        },
        {
          "id": "2kEJMYRcy5pQnrfqSMcHIg",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xcFa6ebD475d89dB04cAd5A756fff1cb2BC5bE33c",
          "description": "GNSTradingStorageV5"
        },
        {
          "id": "3GWzNEi82BNp35ag3TA51E",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xd285f881886505b9ef6684e1aaa7949a56b0c7da",
          "description": "GFarmTokenMigration"
        },
        {
          "id": "3eRhIp6igmJwoSMOS6T3Tb",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x1E887E7115321B4ee5d58DD446eC09e12B45d81B",
          "description": "GFarm"
        },
        {
          "id": "5mbGfJ8gcexnekdYKGLi3U",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x14e2f9B0381Af4227D26BEE7d8E4D424466A7F3F",
          "description": "GFarmNftSwap"
        },
        {
          "id": "3AkRO1MYnbm6bP3W1YI7Q2",
          "type": "websites_and_applications",
          "url": "https://gains.trade/",
          "description": "Trade Web"
        },
        {
          "id": "3MC0xqRu8S9UaeZ2Dpx5i9",
          "type": "websites_and_applications",
          "url": "https://gainsnetwork.io/",
          "description": "Main Web/App"
        },
        {
          "id": "LmrleMwbDFcfbU5svwmzP",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x83AE6fADB88872D77299550Dc746b95D0196FE15",
          "description": "GNSBorrowingFeesV6_3_2"
        },
        {
          "id": "3OeYp9Bh5JJhzP1zp9Sges",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xA03e32a42C75FDdDc9a39973ddd082F147393154",
          "description": "GNSBorrowingFeesV6_3_2"
        },
        {
          "id": "XOY3urAhpuJascWA3wmCN",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x8103c0665a544201bbf606d90845d1b2d8005f1c",
          "description": "GNSNftRewardsV6_3_1"
        },
        {
          "id": "1bI0S5CxbwlXF7u5Ds37G7",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xde5750071caca8db173fc6543d23d0bcacacfec3",
          "description": "GNSNftRewardsV6_3_1"
        }
      ],
      "impacts": [
        {
          "id": "6TKPT3YwhroRclC6jyMCYo",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "7oyhMEpFtxScnkh3uXQJrZ",
          "title": "Insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4Tu5UBnF8ib7D8sJbzIFMJ",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2H26wOioZpBE2ef1thcRxZ",
          "title": "Ability to execute system commands",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "68MwKKqKXFQLwyyK8khTLK",
          "title": "Extract Sensitive data/files from the server such as /etc/passwd",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "oyrP3NsBu6gSTWlq0Q65v",
          "title": "Taking Down the application/website",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "49rnEDFVvpo1VEwXxb0FyV",
          "title": "Stealing User Cookies",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "4imuT4HjtFbQPbrh7jOtje",
          "title": "Signing transactions for other users",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "2znVLeupEmbUHb9RQ2L8Xi",
          "title": "Redirection of user deposits and withdrawals",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "6wUkSlCYYJYdpcn12T0xOS",
          "title": "Wallet interaction modification resulting in financial loss",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "7sP3KckPXnNwgBE9NoEX5O",
          "title": "Subdomain takeover resulting in financial loss (applicable for subdomains with addresses published)",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "5Zvd2SUv28jQ4cvGNiqDqW",
          "title": "Direct theft of user funds",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "2gtOnizfhWwO1QT5JyNfjB",
          "title": "Tampering with transactions submitted to the user’s wallet",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "1uoO3uzoFpnCbhMFVygrrS",
          "title": "Submitting malicious transactions to an already-connected wallet",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "1nk5EbllUviotCbQXeY0iE",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "MBGWfkZAQSzueGXxzex32",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "2Br34uDFyJ6HyXqTTOVdKA",
          "title": "Temporary freezing of funds for at least 1 day",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "482FQ2OttMfl06vKeIjZxw",
          "title": "Spoofing content on the target application (Persistent)",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "28Vnb0qyYd9jAM9ICrsabO",
          "title": "Users Confidential information disclosure such as Email",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "4g9Xy1YvdQyq97mcagIH87",
          "title": "Subdomain Takeover without financial loss (applicable for subdomains with no addresses published)",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "5urEoYZJcbjCodvAfFafUc",
          "title": "Privilege escalation to access unauthorized functionalities",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "2bdxXhQDzqw6XClhTLo7zj",
          "title": "Miner-extractable value (MEV)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5BxbnhGptFxsCC2itpRZoE",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5i8oALSOEU7Gn0lUO7yNQA",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "1S1rUKK7mR8qKFHJ6RRSKe",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "6A0Y44jBb7GNPZ6USg4a1m",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "somgI19AxHI51ng1oH2rZ",
          "title": "Changing details of other users without direct financial impact (CSRF)",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "3jT38a99wfN6kA0nFHLHTO",
          "title": "Third-Party API keys leakage that demonstrates loss of funds or modification on the website",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "5Tftmcdr571Hpbwp8t2IaT",
          "title": "Redirecting users to malicious websites (Open Redirect)",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "7g7XHAhHrMmpIflCrHX1ki",
          "title": "Smart contract unable to operate due to lack of funds",
          "type": "smart_contract",
          "severity": "low"
        },
        {
          "id": "8ggfDR3y0pATZZn9PCO3P",
          "title": "Smart contract fails to deliver promised returns, but doesn’t lose value",
          "type": "smart_contract",
          "severity": "low"
        },
        {
          "id": "56WhCMPVI0eFyWjGMAP3EN",
          "title": "Framing sensitive pages leading to financial loss (ClickJacking)",
          "type": "websites_and_applications",
          "severity": "low"
        },
        {
          "id": "5yBIAxnlpxPdz3eQuzk8lt",
          "title": "Any impact involving a publicly released CVE without a working PoC",
          "type": "websites_and_applications",
          "severity": "low"
        }
      ],
      "programOverview": "Gains Network is building the decentralized finance ecosystem of the future. Their first product, gTrade is a capital-efficient decentralized leveraged trading platform on Polygon and Arbitrum.\n\nFor more information about Gains Network, please visit [https://gains.trade/](https://gains.trade/).  \n\nThis bug bounty program is focused on their smart contracts, website and app and is focused on preventing:\n\n  - Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\n  - Permanent freezing of funds\n  - Insolvency\n  - Theft of unclaimed yield\n  - Permanent freezing of unclaimed yield\n  - Temporary freezing of funds for at least 1 day",
      "prioritizedVulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n__Critical__\n  - Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\n  - Permanent freezing of funds\n  - Insolvency\n\n__High__\n  - Theft of unclaimed yield\n  - Permanent freezing of unclaimed yield\n  - Temporary freezing of funds for at least 1 day\n\n__Medium__\n  - Miner-extractable value (MEV)\n  - Block stuffing for profit\n  - Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)\n  - Theft of gas\n  - Unbounded gas consumption \n\n__Low__\n  - Smart contract unable to operate due to lack of funds\n  - Smart contract fails to deliver promised returns, but doesn’t lose value\n\n__Websites and Applications__\n\n__Critical__\n  - Ability to execute system commands\n  - Extract Sensitive data/files from the server such as /etc/passwd\n  - Stealing User Cookies\n  - Taking Down the application/website\n  - Signing transactions for other users\n  - Redirection of user deposits and withdrawals\n  - Subdomain takeover resulting in financial loss (applicable for subdomains with addresses published)\n  - Wallet interaction modification resulting in financial loss\n  - Direct theft of user funds \n  - Tampering with transactions submitted to the user’s wallet\n  - Submitting malicious transactions to an already-connected wallet\n\n__High__\n  - Spoofing content on the target application (Persistent)\n  - Users Confidential information disclosure such as Email\n  - Subdomain Takeover without financial loss (applicable for subdomains with no addresses published)\n  - Privilege escalation to access unauthorized functionalities\n\n__Medium__\n  - Changing details of other users without direct financial impact (CSRF)\n  - Third-Party API keys leakage that demonstrates loss of funds or modification on the website.\n  - Redirecting users to malicious websites (Open Redirect)\n\n__Low__\n  - Framing sensitive pages leading to financial loss (ClickJacking)\n  - Any impact involving a publicly released CVE without a working PoC\n\nIn case of discrepancy between [Immunefi Vulnerability Severity Classification System V2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2/) and Gains Network’s classification above, Gains Network classification will be followed. ",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\n\nAll web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nCritical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. However, there is a minimum reward of USD 50 000.\n\nPayouts are handled by the __Gains Network__ team directly and are denominated in USD. However, payouts are done in __GNS and DAI__, with the choice of the ratio at the discretion of the team.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\n__Websites and Apps__\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n  - Vulnerabilities primarily caused by browser/plugin defects\n  - Any vulnerability exploit requiring CSP bypass resulting from a browser bug\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "All of the smart contracts of Gains Network can be found at [https://github.com/GainsNetwork](https://github.com/GainsNetwork) and [https://github.com/GainsNetwork/GNS-ethereum](https://github.com/GainsNetwork/GNS-ethereum). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "DEX",
          "L2",
          "Options",
          "Perpetuals",
          "Staking"
        ],
        "projectType": [
          "Defi",
          "NFT"
        ],
        "ecosystem": [
          "Polygon"
        ],
        "programType": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $400,000"
          },
          {
            "level": "High",
            "payout": "USD $50,000"
          },
          {
            "level": "Medium",
            "payout": "USD $25,000"
          },
          {
            "level": "Low",
            "payout": "USD $10,000"
          }
        ],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "USD $40,000"
          },
          {
            "level": "High",
            "payout": "USD $5,000"
          },
          {
            "level": "Medium",
            "payout": "USD $2,500"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ]
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Gains Network is building the decentralized finance ecosystem of the future. Their first product, gTrade is a capital-efficient decentralized leveraged trading platform on Polygon and Arbitrum.\"), mdx(\"p\", null, \"For more information about Gains Network, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://gains.trade/\"\n  }, \"https://gains.trade/\"), \".  \"), mdx(\"p\", null, \"This bug bounty program is focused on their smart contracts, website and app and is focused on preventing:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Insolvency\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Temporary freezing of funds for at least 1 day\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Gains Network is building the decentralized finance ecosystem of the future. Their first product, gTrade is a capital-efficient decentralized leveraged trading platform on Polygon and Arbitrum.</p><p>For more information about Gains Network, please visit <a href=\"https://gains.trade/\">https://gains.trade/</a>.  </p><p>This bug bounty program is focused on their smart contracts, website and app and is focused on preventing:</p><ul><li>Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield</li><li>Permanent freezing of funds</li><li>Insolvency</li><li>Theft of unclaimed yield</li><li>Permanent freezing of unclaimed yield</li><li>Temporary freezing of funds for at least 1 day</li></ul>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Impacts in Scope\")), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Critical\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Insolvency\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"High\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Temporary freezing of funds for at least 1 day\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Medium\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Miner-extractable value (MEV)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Block stuffing for profit\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of gas\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unbounded gas consumption \")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Low\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract unable to operate due to lack of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract fails to deliver promised returns, but doesn\\u2019t lose value\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Applications\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Critical\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ability to execute system commands\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Extract Sensitive data/files from the server such as /etc/passwd\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Stealing User Cookies\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Taking Down the application/website\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Signing transactions for other users\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Redirection of user deposits and withdrawals\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Subdomain takeover resulting in financial loss (applicable for subdomains with addresses published)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wallet interaction modification resulting in financial loss\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct theft of user funds \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tampering with transactions submitted to the user\\u2019s wallet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Submitting malicious transactions to an already-connected wallet\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"High\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Spoofing content on the target application (Persistent)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Users Confidential information disclosure such as Email\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Subdomain Takeover without financial loss (applicable for subdomains with no addresses published)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Privilege escalation to access unauthorized functionalities\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Medium\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Changing details of other users without direct financial impact (CSRF)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Third-Party API keys leakage that demonstrates loss of funds or modification on the website.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Redirecting users to malicious websites (Open Redirect)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Low\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Framing sensitive pages leading to financial loss (ClickJacking)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any impact involving a publicly released CVE without a working PoC\")), mdx(\"p\", null, \"In case of discrepancy between \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2/\"\n  }, \"Immunefi Vulnerability Severity Classification System V2\"), \" and Gains Network\\u2019s classification above, Gains Network classification will be followed. \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p><strong>Impacts in Scope</strong></p><p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p><p><strong>Smart Contracts</strong></p><p><strong>Critical</strong></p><ul><li>Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield</li><li>Permanent freezing of funds</li><li>Insolvency</li></ul><p><strong>High</strong></p><ul><li>Theft of unclaimed yield</li><li>Permanent freezing of unclaimed yield</li><li>Temporary freezing of funds for at least 1 day</li></ul><p><strong>Medium</strong></p><ul><li>Miner-extractable value (MEV)</li><li>Block stuffing for profit</li><li>Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)</li><li>Theft of gas</li><li>Unbounded gas consumption </li></ul><p><strong>Low</strong></p><ul><li>Smart contract unable to operate due to lack of funds</li><li>Smart contract fails to deliver promised returns, but doesn’t lose value</li></ul><p><strong>Websites and Applications</strong></p><p><strong>Critical</strong></p><ul><li>Ability to execute system commands</li><li>Extract Sensitive data/files from the server such as /etc/passwd</li><li>Stealing User Cookies</li><li>Taking Down the application/website</li><li>Signing transactions for other users</li><li>Redirection of user deposits and withdrawals</li><li>Subdomain takeover resulting in financial loss (applicable for subdomains with addresses published)</li><li>Wallet interaction modification resulting in financial loss</li><li>Direct theft of user funds </li><li>Tampering with transactions submitted to the user’s wallet</li><li>Submitting malicious transactions to an already-connected wallet</li></ul><p><strong>High</strong></p><ul><li>Spoofing content on the target application (Persistent)</li><li>Users Confidential information disclosure such as Email</li><li>Subdomain Takeover without financial loss (applicable for subdomains with no addresses published)</li><li>Privilege escalation to access unauthorized functionalities</li></ul><p><strong>Medium</strong></p><ul><li>Changing details of other users without direct financial impact (CSRF)</li><li>Third-Party API keys leakage that demonstrates loss of funds or modification on the website.</li><li>Redirecting users to malicious websites (Open Redirect)</li></ul><p><strong>Low</strong></p><ul><li>Framing sensitive pages leading to financial loss (ClickJacking)</li><li>Any impact involving a publicly released CVE without a working PoC</li></ul><p>In case of discrepancy between <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2/\">Immunefi Vulnerability Severity Classification System V2</a> and Gains Network’s classification above, Gains Network classification will be followed. </p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\"), mdx(\"p\", null, \"All web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\"), mdx(\"p\", null, \"Critical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. However, there is a minimum reward of USD 50 000.\"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Gains Network\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"GNS and DAI\"), \", with the choice of the ratio at the discretion of the team.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.</p><p>All web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.</p><p>Critical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. However, there is a minimum reward of USD 50 000.</p><p>Payouts are handled by the <strong>Gains Network</strong> team directly and are denominated in USD. However, payouts are done in <strong>GNS and DAI</strong>, with the choice of the ratio at the discretion of the team.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theoretical vulnerabilities without any proof or demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Content spoofing / Text injection issues\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Self-XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Captcha bypass using OCR\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with no security impact (logout CSRF, change language, etc.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as \\u201Chttponly\\u201D)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Server-side information disclosure such as IPs, server names, and most stack traces\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities used to enumerate or confirm the existence of users or tenants\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities requiring unlikely user actions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of SSL/TLS best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DDoS vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring privileged access from within the organization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Feature requests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities primarily caused by browser/plugin defects\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any vulnerability exploit requiring CSP bypass resulting from a browser bug\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p><strong>Websites and Apps</strong></p><ul><li>Theoretical vulnerabilities without any proof or demonstration</li><li>Content spoofing / Text injection issues</li><li>Self-XSS</li><li>Captcha bypass using OCR</li><li>CSRF with no security impact (logout CSRF, change language, etc.)</li><li>Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)</li><li>Server-side information disclosure such as IPs, server names, and most stack traces</li><li>Vulnerabilities used to enumerate or confirm the existence of users or tenants</li><li>Vulnerabilities requiring unlikely user actions</li><li>URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)</li><li>Lack of SSL/TLS best practices</li><li>DDoS vulnerabilities</li><li>Attacks requiring privileged access from within the organization</li><li>Feature requests</li><li>Best practices</li><li>Vulnerabilities primarily caused by browser/plugin defects</li><li>Any vulnerability exploit requiring CSP bypass resulting from a browser bug</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All of the smart contracts of Gains Network can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/GainsNetwork\"\n  }, \"https://github.com/GainsNetwork\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/GainsNetwork/GNS-ethereum\"\n  }, \"https://github.com/GainsNetwork/GNS-ethereum\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All of the smart contracts of Gains Network can be found at <a href=\"https://github.com/GainsNetwork\">https://github.com/GainsNetwork</a> and <a href=\"https://github.com/GainsNetwork/GNS-ethereum\">https://github.com/GainsNetwork/GNS-ethereum</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "orca",
      "slug": "orca",
      "project": "Orca",
      "maxBounty": 500000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/195CvqgtipygePealaDWE7/deb10cf2868ffeadda73644c1595bcd2/Orca_Logo.png",
      "launchDate": "2022-05-19T11:30-06:00",
      "updatedDate": "2022-10-13T14:02:26.419Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to USD $500,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $50,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $10,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "4eK3GC9by8LolQ50dwjq9E",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/constants/mod.rs",
          "description": "Constants - mod"
        },
        {
          "id": "11rRdM6tG1CxVDbe1xvMZj",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/constants/test_constants.rs",
          "description": "Constants - test_constants"
        },
        {
          "id": "1xT3z4ekFaVHE32tgYcyBI",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/instructions/close_position.rs",
          "description": "Instructions - close_position"
        },
        {
          "id": "6uqn2PhriiShECd0RWp8Df",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/instructions/collect_fees.rs",
          "description": "Instructions - collect_fees"
        },
        {
          "id": "78jQRrW3KKytz58axTgI3K",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/instructions/collect_protocol_fees.rs",
          "description": "Instructions - collect_protocol_fees"
        },
        {
          "id": "bmA76gBfO64cQ2LEjEF0S",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/instructions/collect_reward.rs",
          "description": "Instructions - collect_reward"
        },
        {
          "id": "1biR1uGNUiBjJC8vodnovv",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/instructions/decrease_liquidity.rs",
          "description": "Instructions - decrease_liquidity"
        },
        {
          "id": "nuMPYGM0fUAOOg3oQxdbM",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/instructions/increase_liquidity.rs",
          "description": "Instructions - increase_liquidity"
        },
        {
          "id": "4McF5gad4sezYECpq0xMAd",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/instructions/initialize_config.rs",
          "description": "Instructions - initialize_config"
        },
        {
          "id": "5S21tBC7faUZ0hKM4lHCyI",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/instructions/initialize_fee_tier.rs",
          "description": "Instructions - initialize_fee_tier"
        },
        {
          "id": "pbamdiCPhKOYqCPRp1e7z",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/instructions/initialize_pool.rs",
          "description": "Instructions - initialize_pool"
        },
        {
          "id": "1UrzsDIK6RRcMoOYdTSIQd",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/instructions/initialize_reward.rs",
          "description": "Instructions - initialize_reward"
        },
        {
          "id": "5PjpMzno9enPerQ0I8uORL",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/instructions/initialize_tick_array.rs",
          "description": "Instructions - initialize_tick_array"
        },
        {
          "id": "7KgdoeiiKlbbfcmaYFjykl",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/instructions/mod.rs",
          "description": "Instructions - mod"
        },
        {
          "id": "7kGfJBNPJyxL9K1hNW3Smg",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/instructions/open_position.rs",
          "description": "Instructions - open_position"
        },
        {
          "id": "26Vqicozn4okjYVOxa33cE",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/instructions/open_position_with_metadata.rs",
          "description": "Instructions - open_position_with_metadata"
        },
        {
          "id": "1hjjFd3d2WzsssAY5oc9Cy",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/instructions/set_collect_protocol_fees_authority.rs",
          "description": "Instructions - set_collect_protocol_fees_authority"
        },
        {
          "id": "4PhNhbzJQGpppxPhULZFMe",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/instructions/set_default_fee_rate.rs",
          "description": "Instructions - set_default_fee_rate"
        },
        {
          "id": "3FsMEkNV2i45bbnY4uDHBK",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/instructions/set_default_protocol_fee_rate.rs",
          "description": "Instructions - set_default_protocol_fee_rate"
        },
        {
          "id": "5KughGJjsMz0wpu1kpQvMX",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/instructions/set_fee_authority.rs",
          "description": "Instructions - set_fee_authority"
        },
        {
          "id": "3n3USVoQx94dKHsiUfnChl",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/instructions/set_fee_rate.rs",
          "description": "Instructions - set_fee_rate"
        },
        {
          "id": "1XFLJPCoDKNN2qzxtfo5yC",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/instructions/set_protocol_fee_rate.rs",
          "description": "Instructions - set_protocol_fee_rate"
        },
        {
          "id": "2yodUoPN0QqJrOwvBoqKTo",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/instructions/set_reward_authority.rs",
          "description": "Instructions - set_reward_authority"
        },
        {
          "id": "5tc2Awrnt5rGSEsXf8iN8q",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/instructions/set_reward_authority_by_super_authority.rs",
          "description": "Instructions - set_reward_authority_by_super_authority"
        },
        {
          "id": "KcL6aqF8wnMiU6xKPxBtT",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/instructions/set_reward_emissions.rs",
          "description": "Instructions - set_reward_emissions"
        },
        {
          "id": "1qZE78mH0iyxDZCJMng7I3",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/instructions/set_reward_emissions_super_authority.rs",
          "description": "Instructions - set_reward_emissions_super_authority"
        },
        {
          "id": "1vzqhduK9EIWkA7H2r9DLX",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/instructions/swap.rs",
          "description": "Instructions - swap"
        },
        {
          "id": "1yK9Chqo70J910A0xrIacA",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/instructions/update_fees_and_rewards.rs",
          "description": "Instructions - update_fees_and_rewards"
        },
        {
          "id": "44ciltUBLgDYZdA72i25Ux",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/manager/liquidity_manager.rs",
          "description": "Manager - liquidity_manager"
        },
        {
          "id": "5IDNZXPRgmJ3u9l9v8KMwm",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/manager/mod.rs",
          "description": "Manager - mod"
        },
        {
          "id": "1zkfrBUrpWMyvCd58J6tjE",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/manager/position_manager.rs",
          "description": "Manager - position_manager"
        },
        {
          "id": "3fsPV1pKa5vdOyp0I7qEUf",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/manager/swap_manager.rs",
          "description": "Manager - swap_manager"
        },
        {
          "id": "7j8as8A7m5jfTnsnL1L3m",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/manager/tick_manager.rs",
          "description": "Manager - tick_manager"
        },
        {
          "id": "4zPQ8La0bGrqVRgxSc8Cuq",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/manager/whirlpool_manager.rs",
          "description": "Manager - whirlpool_manager"
        },
        {
          "id": "7CGcIFMRhSWz2yUdgOFc6c",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/math/bit_math.rs",
          "description": "Math - bit_math"
        },
        {
          "id": "En4jRwcwaGgemgAXu3gBs",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/math/bn.rs",
          "description": "Math - bn"
        },
        {
          "id": "3alybWlmDf7JNuxHrEbdEn",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/math/liquidity_math.rs",
          "description": "Math - liquidity_math"
        },
        {
          "id": "X4yNxaiHN2UTl0MsPy2Wk",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/math/mod.rs",
          "description": "Math - mod"
        },
        {
          "id": "5hMAN8cziRMUf0c31Sapfj",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/math/swap_math.rs",
          "description": "Math - swap_math"
        },
        {
          "id": "4qRMa7rh4uKRJ2WvdQjf19",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/math/tick_math.rs",
          "description": "Math - tick_math"
        },
        {
          "id": "zlZYCuWhK7APmXpPGeBS0",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/math/token_math.rs",
          "description": "Math - token_math"
        },
        {
          "id": "3s0SziVFPUhy2JWeEVWBqP",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/math/u256_math.rs",
          "description": "Math - u256_math"
        },
        {
          "id": "42mUZGQe0gxk86R84suqkS",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/state/config.rs",
          "description": "State - config"
        },
        {
          "id": "22Qayvs8agoo2LoYMHbAZt",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/state/fee_tier.rs",
          "description": "State - fee_tier"
        },
        {
          "id": "7C8djquQC73CmuISEt9O9n",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/state/mod.rs",
          "description": "State - mod"
        },
        {
          "id": "15NMhz3q6Qqg6XxOW4693R",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/state/position.rs",
          "description": "State - position"
        },
        {
          "id": "6KnXqPz68Txr9gi2Y0sAa5",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/state/tick.rs",
          "description": "State - tick"
        },
        {
          "id": "2JPi6wF5uzmHNuJ3EOQx1p",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/state/whirlpool.rs",
          "description": "State - whirlpool"
        },
        {
          "id": "4IrKTTedrmOKwCO7aQZ7qc",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/util/mod.rs",
          "description": "Util - mod"
        },
        {
          "id": "2ZhWFvNaGU7nghyi83eGvX",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/util/swap_tick_sequence.rs",
          "description": "Util - swap_tick_sequence"
        },
        {
          "id": "39iALEpxTLgpVrZgKqF4A",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/util/token.rs",
          "description": "Util - token"
        },
        {
          "id": "71HdiF9OH08YO89vEYaceI",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/util/util.rs",
          "description": "Util - util"
        },
        {
          "id": "JrFXXTMFem9yZurQieOjw",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/util/test_utils/liquidity_test_fixture.rs",
          "description": "Test_Utils - liquidity_test_fixture"
        },
        {
          "id": "38ySjm1HB1ug1TYW9Ur2rZ",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/util/test_utils/mod.rs",
          "description": "Test_Utils - mod"
        },
        {
          "id": "6bi86H0zyHhkIoff9j4r3E",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/util/test_utils/swap_test_fixture.rs",
          "description": "Test_Utils - swap_test_fixture"
        },
        {
          "id": "1CAx2hp02SulVx8Of0SCYm",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/errors.rs",
          "description": "error"
        },
        {
          "id": "3fiBzLBaxqY6LkdEfKrJIV",
          "type": "smart_contract",
          "url": "https://github.com/orca-so/whirlpools/blob/main/programs/whirlpool/src/lib.rs",
          "description": "lib"
        }
      ],
      "impacts": [
        {
          "id": "7tj1RD6OO9R3HwY384AY77",
          "title": "Bugs that freeze user funds or drain the contract's holdings or involve theft of funds without user signatures",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "ps8uilEq6UTXY5cfQ1fXy",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "53rwC7sbFiFWCXZtg8xNy4",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "dzA18xHNanMT4OkVuR6Jm",
          "title": "Bugs that could temporarily freeze user funds or incorrectly assign value to user funds",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "1xSF7A68DZHF4Sh7tP1zGN",
          "title": "Temporary freezing of unclaimed yield for any amount of time",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6mPdHTIdPWOCiCVB8bPA7A",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "37emf0lO59EZAYuLECtUkS",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3dzEa4LTwxC7keavlfmHUb",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "2sdyEmIt45FKn9pmcmMaS",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5Wj0qwqQOpPgG3OPso755y",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "2IqEITkxJWpytQuqnUp1u0",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        }
      ],
      "programOverview": "Orca is one of the first general-purpose AMMs launched on Solana. Users can swap assets, provide liquidity, and earn yield through an easy-to-use interface. Orca has created custom smart contracts for its concentrated liquidity product, [Whirlpools](https://www.orca.so/whirlpools). In traditional AMM liquidity pools, a user provides liquidity across the entire continuous price curve. With Whirlpools, each user can specify the price range where they will provide liquidity.\n\nFor more information on Orca, please visit [https://orca.so/](https://orca.so/) or [Orca’s Twitter](https://twitter.com/orca_so).",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.1](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-1/). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\n\nAll bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nAll known issues previously highlighted in the following audits are considered as out of scope: \n  - [Neodyme Audit](https://orca-so.gitbook.io/orca-developer-portal/whirlpools/overview#security-audits)\n  - [Kudelski Security](https://drive.google.com/file/d/1u0ja4_3GoogVWVU9prMezDrBaqE5BxdW/view)\n\nRewards for critical smart contract vulnerabilities can be further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of __USD 100 000__ for Critical smart contract bug reports. \n\nPayouts are handled by the __Orca__ team directly and are denominated in USD. Payouts of up to __USD 250 000__ are done in __ORCA__ or __USDC__ (SPL Version) at the discretion of the team. Payouts above __USD 250 000__ will be done in __ORCA__ and will be vested monthly over a 12-month period. ",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials (phishing)\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "All smart contracts of Orca can be found at [https://github.com/orca-so/whirlpools](https://github.com/orca-so/). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\nIf any Critical/High severity impact can be caused to any other asset managed by Orca that isn’t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project.",
      "impactsBody": null,
      "immunefiStandard": null,
      "tags": {
        "productType": [
          "AMM",
          "Crosschain Liquidity"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "Solana"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Rust"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $500,000"
          },
          {
            "level": "High",
            "payout": "USD $50,000"
          },
          {
            "level": "Medium",
            "payout": "USD $10,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Orca is one of the first general-purpose AMMs launched on Solana. Users can swap assets, provide liquidity, and earn yield through an easy-to-use interface. Orca has created custom smart contracts for its concentrated liquidity product, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.orca.so/whirlpools\"\n  }, \"Whirlpools\"), \". In traditional AMM liquidity pools, a user provides liquidity across the entire continuous price curve. With Whirlpools, each user can specify the price range where they will provide liquidity.\"), mdx(\"p\", null, \"For more information on Orca, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://orca.so/\"\n  }, \"https://orca.so/\"), \" or \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://twitter.com/orca_so\"\n  }, \"Orca\\u2019s Twitter\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Orca is one of the first general-purpose AMMs launched on Solana. Users can swap assets, provide liquidity, and earn yield through an easy-to-use interface. Orca has created custom smart contracts for its concentrated liquidity product, <a href=\"https://www.orca.so/whirlpools\">Whirlpools</a>. In traditional AMM liquidity pools, a user provides liquidity across the entire continuous price curve. With Whirlpools, each user can specify the price range where they will provide liquidity.</p><p>For more information on Orca, please visit <a href=\"https://orca.so/\">https://orca.so/</a> or <a href=\"https://twitter.com/orca_so\">Orca’s Twitter</a>.</p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-1/\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.1\"), \". This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\"), mdx(\"p\", null, \"All bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\"), mdx(\"p\", null, \"All known issues previously highlighted in the following audits are considered as out of scope: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://orca-so.gitbook.io/orca-developer-portal/whirlpools/overview#security-audits\"\n  }, \"Neodyme Audit\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://drive.google.com/file/d/1u0ja4_3GoogVWVU9prMezDrBaqE5BxdW/view\"\n  }, \"Kudelski Security\"))), mdx(\"p\", null, \"Rewards for critical smart contract vulnerabilities can be further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 100 000\"), \" for Critical smart contract bug reports. \"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Orca\"), \" team directly and are denominated in USD. Payouts of up to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 250 000\"), \" are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ORCA\"), \" or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \" (SPL Version) at the discretion of the team. Payouts above \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 250 000\"), \" will be done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ORCA\"), \" and will be vested monthly over a 12-month period. \"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-1/\">Immunefi Vulnerability Severity Classification System V2.1</a>. This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.</p><p>All bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.</p><p>All known issues previously highlighted in the following audits are considered as out of scope: </p><ul><li><a href=\"https://orca-so.gitbook.io/orca-developer-portal/whirlpools/overview#security-audits\">Neodyme Audit</a></li><li><a href=\"https://drive.google.com/file/d/1u0ja4_3GoogVWVU9prMezDrBaqE5BxdW/view\">Kudelski Security</a></li></ul><p>Rewards for critical smart contract vulnerabilities can be further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of <strong>USD 100 000</strong> for Critical smart contract bug reports. </p><p>Payouts are handled by the <strong>Orca</strong> team directly and are denominated in USD. Payouts of up to <strong>USD 250 000</strong> are done in <strong>ORCA</strong> or <strong>USDC</strong> (SPL Version) at the discretion of the team. Payouts above <strong>USD 250 000</strong> will be done in <strong>ORCA</strong> and will be vested monthly over a 12-month period. </p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials (phishing)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials (phishing)</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of Orca can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/orca-so/\"\n  }, \"https://github.com/orca-so/whirlpools\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\"), mdx(\"p\", null, \"If any Critical/High severity impact can be caused to any other asset managed by Orca that isn\\u2019t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of Orca can be found at <a href=\"https://github.com/orca-so/\">https://github.com/orca-so/whirlpools</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.</p><p>If any Critical/High severity impact can be caused to any other asset managed by Orca that isn’t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "maple",
      "slug": "maple",
      "project": "Maple",
      "maxBounty": 500000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/eUOQ1h8f4Rp7j6crz0YSq/1871255d0d1e47581d75bd1e9cfb51cd/Maple_Logo.jpg",
      "launchDate": "2022-01-25T16:00-05:00",
      "updatedDate": "2023-06-21T00:45:52.638Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $50,000 to USD $500,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $25,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "3pXn8DK5rwTJZA8mrsv0oJ",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xa2091116649b070D2a27Fc5C85c9820302114c63",
          "description": "LiquidatorFactory"
        },
        {
          "id": "1OvkwMf2OGQSr9uX1K403f",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xe6a03Ba967172a1FF218FEE686445f444258021A",
          "description": "LiquidatorImplementation (v200)"
        },
        {
          "id": "7tNfaJ2REGVpyUONNfD0Q1",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xED9D14F83eddd08572c403175FFf41c42a35a149",
          "description": "LiquidatorInitializer (v200)"
        },
        {
          "id": "H4nFfmWgqFNhWSNREhVhZ",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x1551717AE4FdCB65ed028F7fB7abA39908f6A7A6",
          "description": "LoanManagerFactory (Fixed Term)"
        },
        {
          "id": "1Ef8Ueo0qLKlvNC4jJjGg7",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x5b97c9DccE2693844b90Cea40ba1fD15Bf99Eb01",
          "description": "LoanManagerImplementation (v301 Fixed Term)"
        },
        {
          "id": "6NfbTZ7qBY8V593A5Au8YJ",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xcbe920B1931DA57069b12A19Bc6d11Ad7B5adaBD",
          "description": " LoanManagerInitializer (v300 Fixed Term)"
        },
        {
          "id": "9d2hxKltMKALJuNMyn4SX",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x562374079a8A07417ec4A69d5d52F9CBa796d364",
          "description": "MapleGlobalsImplementation (v200)"
        },
        {
          "id": "5YnTMI5eTkZ0guhcNf43w",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x804a6F5F667170F545Bf14e5DDB48C70B788390C",
          "description": "MapleGlobalsProxy (v2)"
        },
        {
          "id": "1eU5tiZl6DuZIUuNTZ1y4y",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x36a7350309B2Eb30F3B908aB0154851B5ED81db0",
          "description": "MapleLoanFactory"
        },
        {
          "id": "7mMY9rE4LlbCPg19jAqjQX",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x98b7893C5717aF41d3e351c6e3445Be02a062A90",
          "description": "MapleLoanImplementation (v501 Fixed Term)"
        },
        {
          "id": "3PIh2hDoWlzuBKXgFpNod4",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x8F596D2f57C26FB1CD22F25c9a686e38A62Ce137",
          "description": "MapleLoanInitializer (v500 Fixed Term)"
        },
        {
          "id": "h0lR35S8QGVeWKLuUWl2m",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xAf19511EA6Ad222695A762Ce01b33fd2d777992c",
          "description": "MapleLoanMigrator (v501 Fixed Term)"
        },
        {
          "id": "160zkbYMKpLuDLPXedOOTU",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x87826F821AF105802064785A3905C794eF259D5C",
          "description": "PoolDeployer"
        },
        {
          "id": "6sfynQqD9eeVYejIRFd5lJ",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xE463cD473EcC1d1A4ecF20b62624D84DD20a8339",
          "description": "PoolManagerFactory"
        },
        {
          "id": "4Bd4fINcMsDtRFL0T36g8I",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xb918c805B33B02895F6F06c2EfA31d178678c947",
          "description": "PoolManagerImplementation (v200)"
        },
        {
          "id": "6pnkAa6b49S3HIQOgFLKZY",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x0B240bf499773905802eE4DE43f96407C436d549",
          "description": "PoolManagerInitializer (v100)"
        },
        {
          "id": "1zPXahMTPe6oIpiaPrJohr",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x27ea6e67FB62AB2A603d4ACBc9377D7a9A0fd5e3",
          "description": "Refinancer (Fixed term)"
        },
        {
          "id": "2HVu74dJWFwPb7ivQDUDf1",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xb9e25B584dc4a7C9d47aEF577f111fBE5705773B",
          "description": "WithdrawalManagerFactory"
        },
        {
          "id": "4glVzFa41n1f8gegoi5YTl",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xB12EC38e3508b0919fa989A0e60fde489b46F430",
          "description": "WithdrawalManagerImplementation (v100)"
        },
        {
          "id": "20wiRBiL3TaHehJMQ6euSK",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x1063dCa836894b12f29003CA2899ff806A2B0B31",
          "description": "WithdrawalManagerInitializer (v100)"
        },
        {
          "id": "4JgBfyYFAAhWErU6LRLuuu",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xd3cd37a7299B963bbc69592e5Ba933388f70dc88",
          "description": "Pool (For reference)"
        },
        {
          "id": "2C62990I4hf3aBf4y4sjOR",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x00d950A41a0d277ed91bF9fD366a5523FEF0371e",
          "description": "PoolManager (For reference)"
        },
        {
          "id": "5O3M7z8zOUduwnrpIfCVYA",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x74CB3c1938A15e532CC1b465e3B641C2c7e40C2b",
          "description": "LoanManager ( Fixed-Term for reference)"
        },
        {
          "id": "6ZFl96enBCqSui4SSaQiEy",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x7ED195a0AE212D265511b0978Af577F59876C9BB",
          "description": "WithdrawalManager (For reference)"
        },
        {
          "id": "3GrDvpMygNUgwwspDUbZng",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x9c74C5147653041239bb31C799c54767D9953f7D",
          "description": "PoolDelegateCover (For reference)"
        },
        {
          "id": "5UCiK5lWrvLMQA6YTQnwq1",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x3F542d451344Ea0Cb58323d049033Fd46Ae56Ec3",
          "description": "Loan (Fixed-Term for reference)"
        },
        {
          "id": "1mwtKthXApSUrLTGbJeW7x",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x90b14505221a24039a2d11ad5862339db97cc160",
          "description": "LoanManagerFactory (Open-Term)"
        },
        {
          "id": "2UsRMYhruhxgst0PO9ePb6",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xbad003da1e107f537ae2f687f5fe7a7affe9b241",
          "description": "LoanManagerImplementation (v100 - Open-Term)"
        },
        {
          "id": "2R5lWAmysmgok0bdoKjx5i",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x20d0b31c2620c28d22489babfef9445c7d952921",
          "description": "LoanManagerInitializer (v100 - Open-Term)"
        },
        {
          "id": "6qoD5sd2EqQDoHA4D2XYzy",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x6fad515fc046dd17166453a79725f50b917b7cf6",
          "description": "MapleLoanFactory (Open-Term)"
        },
        {
          "id": "59csNYCrTXEG1D1RDW9kfp",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x085176e2a201c90ce506be00bfc4f411bf9b3998",
          "description": "MapleLoanImplementation (v101 - Open-Term)"
        },
        {
          "id": "3DiXvDrfRuuCL9mrRf3MeK",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x92d40038e411612e8ce633ccc29158c6a55cd9f3",
          "description": "MapleLoanInitializer (v100 - Open-Term)"
        },
        {
          "id": "1MnvtMd7kz85xvN4lBzDVJ",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x653D4947620B73a433cAbBc9DFb068c3e9c18984",
          "description": "MapleRefinancer (Open-Term)"
        },
        {
          "id": "zr5NtZOZ1OJEmtv0gV9mD",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xfAB269CB4Ab4D33A61e1648114f6147742F5eeCC",
          "description": "LoanManager (Open-Term For reference)"
        },
        {
          "id": "1ktKZdjIDSSpLOSPN12fTi",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xDA8f7941192590408DCe701A60FB3892455669Ce",
          "description": "Loan (Open-Term For reference)"
        }
      ],
      "impacts": [
        {
          "id": "6Ut1xUyZ1pJqEa6ojXoBYq",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2kUE0DQBvjiBtIK3DuUx4H",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2hgAURCKrt07WDjT0pFDWi",
          "title": "Miner-extractable value (MEV)",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5K1Y1QNEr5YIbxOUWaaeaU",
          "title": "Protocol insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "pmGxba5PokgmsV7vz2W6v",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6xGrUVacZlRwo7Mr0fxBha",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "2FgcTEqaqEZJolormqjowQ",
          "title": "Temporary freezing of funds for at least 24 hours",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "4AxkazVPx96bWG1BuJ2yEX",
          "title": "Unintended changes in smart contract permissioning",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "Gcz4WYqDLDs8WEKl70OQQ",
          "title": "Unintended changes in proxy/upgradeability functionality",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "3eVmxxEWs9Jd2UZUZpkie0",
          "title": "Unfair liquidations of collateral",
          "type": "smart_contract",
          "severity": "high"
        }
      ],
      "programOverview": "Founded in 2019 and led by a team of former bankers and credit investment professionals aiming to improve upon legacy capital markets, Maple is an institutional capital network that provides the infrastructure for credit experts to run on-chain lending businesses and connects institutional lenders and borrowers. Built with both traditional financial institutions and decentralized finance leaders, Maple is transforming capital markets by combining industry-standard compliance and due diligence with the transparent and frictionless lending enabled by smart contracts and blockchain technology. Maple is the gateway to growth for financial institutions, pool delegates and companies seeking capital on-chain.\n\nFor more information about Maple, please visit [https://maple.finance/](https://maple.finance/).  \n",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward.\n\nRewards for critical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of __USD 50 000__ and a maximum reward of __USD 500 000__.\n\nMaple requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed is a government-issued photo ID as well as a proof of address issued within the last 3 months (eg. utility bill). \n\nAll known issues highlighted in the following audit reports are considered to be out-of-scope:\n- [https://github.com/maple-labs/maple-v2-audits/blob/main/README.md](https://github.com/maple-labs/maple-v2-audits/blob/main/README.md) \n\nIn addition, all issues related to 4626 compliance are considered out of scope of this program. \n\nPayouts are handled by the __Maple__ team directly and are denominated in USD. However, payouts are done in __USDC__ or __MPL__, at the discretion of the team. \n",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n- Incorrect data supplied by third party oracles\n   - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n- Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n- Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n",
      "assetsBodyV2": "All contracts listed above are in scope, as well as all proxy and contract instances deployed from all factories. Though only the proxy contracts are listed as in-scope, current implementation and any further updates to the implementation contracts are considered in scope. When reporting a bug, please make sure to select the relevant proxy smart contract as the target.\n\nAll contracts that are marked as “(*For reference*)” are instances of contracts that have been deployed by protocol factories and are in scope for the audit. All other instances that are deployed in the same fashion are in scope of the audit, including:\n- Liquidator (Not deployed currently, deployed during loan liquidations of collateral)\n- Loan (Fixed-Term & Open-Term)\n- LoanManager (Fixed-Term & Open-Term)\n- Pool\n- PoolManager\n- PoolDelegateCover\n- WithdrawalManager\n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Lending"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "JavaScript",
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $50,000 to USD $500,000"
          },
          {
            "level": "High",
            "payout": "USD $25,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Founded in 2019 and led by a team of former bankers and credit investment professionals aiming to improve upon legacy capital markets, Maple is an institutional capital network that provides the infrastructure for credit experts to run on-chain lending businesses and connects institutional lenders and borrowers. Built with both traditional financial institutions and decentralized finance leaders, Maple is transforming capital markets by combining industry-standard compliance and due diligence with the transparent and frictionless lending enabled by smart contracts and blockchain technology. Maple is the gateway to growth for financial institutions, pool delegates and companies seeking capital on-chain.\"), mdx(\"p\", null, \"For more information about Maple, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://maple.finance/\"\n  }, \"https://maple.finance/\"), \".  \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Founded in 2019 and led by a team of former bankers and credit investment professionals aiming to improve upon legacy capital markets, Maple is an institutional capital network that provides the infrastructure for credit experts to run on-chain lending businesses and connects institutional lenders and borrowers. Built with both traditional financial institutions and decentralized finance leaders, Maple is transforming capital markets by combining industry-standard compliance and due diligence with the transparent and frictionless lending enabled by smart contracts and blockchain technology. Maple is the gateway to growth for financial institutions, pool delegates and companies seeking capital on-chain.</p><p>For more information about Maple, please visit <a href=\"https://maple.finance/\">https://maple.finance/</a>.  </p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\"), mdx(\"p\", null, \"All bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward.\"), mdx(\"p\", null, \"Rewards for critical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 50 000\"), \" and a maximum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 500 000\"), \".\"), mdx(\"p\", null, \"Maple requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed is a government-issued photo ID as well as a proof of address issued within the last 3 months (eg. utility bill). \"), mdx(\"p\", null, \"All known issues highlighted in the following audit reports are considered to be out-of-scope:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/maple-labs/maple-v2-audits/blob/main/README.md\"\n  }, \"https://github.com/maple-labs/maple-v2-audits/blob/main/README.md\"), \" \")), mdx(\"p\", null, \"In addition, all issues related to 4626 compliance are considered out of scope of this program. \"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Maple\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \" or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"MPL\"), \", at the discretion of the team. \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.</p><p>All bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward.</p><p>Rewards for critical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of <strong>USD 50 000</strong> and a maximum reward of <strong>USD 500 000</strong>.</p><p>Maple requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed is a government-issued photo ID as well as a proof of address issued within the last 3 months (eg. utility bill). </p><p>All known issues highlighted in the following audit reports are considered to be out-of-scope:</p><ul><li><a href=\"https://github.com/maple-labs/maple-v2-audits/blob/main/README.md\">https://github.com/maple-labs/maple-v2-audits/blob/main/README.md</a> </li></ul><p>In addition, all issues related to 4626 compliance are considered out of scope of this program. </p><p>Payouts are handled by the <strong>Maple</strong> team directly and are denominated in USD. However, payouts are done in <strong>USDC</strong> or <strong>MPL</strong>, at the discretion of the team. </p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All contracts listed above are in scope, as well as all proxy and contract instances deployed from all factories. Though only the proxy contracts are listed as in-scope, current implementation and any further updates to the implementation contracts are considered in scope. When reporting a bug, please make sure to select the relevant proxy smart contract as the target.\"), mdx(\"p\", null, \"All contracts that are marked as \\u201C(\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"For reference\"), \")\\u201D are instances of contracts that have been deployed by protocol factories and are in scope for the audit. All other instances that are deployed in the same fashion are in scope of the audit, including:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Liquidator (Not deployed currently, deployed during loan liquidations of collateral)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loan (Fixed-Term & Open-Term)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LoanManager (Fixed-Term & Open-Term)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pool\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"PoolManager\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"PoolDelegateCover\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"WithdrawalManager\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All contracts listed above are in scope, as well as all proxy and contract instances deployed from all factories. Though only the proxy contracts are listed as in-scope, current implementation and any further updates to the implementation contracts are considered in scope. When reporting a bug, please make sure to select the relevant proxy smart contract as the target.</p><p>All contracts that are marked as “(<em>For reference</em>)” are instances of contracts that have been deployed by protocol factories and are in scope for the audit. All other instances that are deployed in the same fashion are in scope of the audit, including:</p><ul><li>Liquidator (Not deployed currently, deployed during loan liquidations of collateral)</li><li>Loan (Fixed-Term &amp; Open-Term)</li><li>LoanManager (Fixed-Term &amp; Open-Term)</li><li>Pool</li><li>PoolManager</li><li>PoolDelegateCover</li><li>WithdrawalManager</li></ul>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

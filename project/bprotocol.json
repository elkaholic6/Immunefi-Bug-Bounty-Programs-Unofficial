{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "bprotocol",
      "slug": "bprotocol",
      "project": "BProtocol",
      "maxBounty": 100000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/e3gtts1LOktqW1EYme2cA/8f4540dfc1fc33435393d7a97eb4d182/BProtocol__1_.jpeg",
      "launchDate": "2021-07-14T06:00-05:00",
      "updatedDate": "2023-02-16T15:45:31.152Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to USD $100,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $10,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": false
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "2pobsG7AIRUO25DAJbvjNW",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/BComptroller.sol",
          "description": "BComptroller.sol"
        },
        {
          "id": "3ztZFRZoGLlzrEZRNXrbz8",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/Import.sol",
          "description": "Import.sol"
        },
        {
          "id": "65rfXiHUVU3bjKFB9JPIWv",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/Pool.sol",
          "description": "Pool.sol"
        },
        {
          "id": "2uWhbi3aQdwL0qE8Sofna6",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/Registry.sol",
          "description": "Registry.sol"
        },
        {
          "id": "3lymzl2pT2yc2SuLSS5RNM",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/avatar/AbsAvatarBase.sol",
          "description": "AbsAvatarBase.sol"
        },
        {
          "id": "49CM0oQlnmndGfGEdr8NzB",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/avatar/AbsCToken.sol",
          "description": "AbsCToken.sol"
        },
        {
          "id": "2emZZeVEQUu7eTnpiiavWL",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/avatar/AbsComptroller.sol",
          "description": "AbsComptroller.sol"
        },
        {
          "id": "1S98bMnrwtVgYwpQBiH2Do",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/avatar/Avatar.sol",
          "description": "Avatar.sol"
        },
        {
          "id": "1DbsUOJFBEEH23UlAsHYoY",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/btoken/AbsBToken.sol",
          "description": "AbsBToken.sol"
        },
        {
          "id": "5O096PJBIQy4YFcDjpM1RA",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/btoken/BErc20.sol",
          "description": "BErc20.sol"
        },
        {
          "id": "4BXFYej9Ou9e6wlyrDfaBf",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/btoken/BEther.sol",
          "description": "BEther.sol"
        },
        {
          "id": "4VQuMSTQ8LQvnl8jmBIa1q",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/connector/JarConnector.sol",
          "description": "JarConnector.sol"
        },
        {
          "id": "6yiRQUVHady7aAYHrMjF17",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/governance/GovernanceExecutor.sol",
          "description": "GovernanceExecutor.sol"
        },
        {
          "id": "4zUwSd1MZe0FIvpEydWH7L",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/governance/Migrate.sol",
          "description": "Migrate.sol"
        },
        {
          "id": "4XbTvFtaUJXyGnjD0pZVwV",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/info/LiquidatorInfo.sol",
          "description": "LiquidatorInfo.sol"
        },
        {
          "id": "7r34uSMKz44gYT999CbwkX",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/info/UserInfo.sol",
          "description": "UserInfo.sol"
        },
        {
          "id": "5lNLUhHvrY4wIEeLLyPsh8",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/interfaces/CTokenInterfaces.sol",
          "description": "CTokenInterfaces.sol"
        },
        {
          "id": "7M4xDuY4ObGN6lVyNtQdwh",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/interfaces/IAvatar.sol",
          "description": "IAvatar.sol"
        },
        {
          "id": "6sBSL8kpXO0M4Yby7AxOJu",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/interfaces/IBComptroller.sol",
          "description": "IBComptroller.sol"
        },
        {
          "id": "v5fOqWaLYdu8C1zKsniS8",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/interfaces/IBToken.sol",
          "description": "IBToken.sol"
        },
        {
          "id": "3AYiy9wwbvHl43HR9eC1Xn",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/interfaces/IComp.sol",
          "description": "IComp.sol"
        },
        {
          "id": "4BXso0SKycfKzvt82SSfZW",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/interfaces/IComptroller.sol",
          "description": "IComptroller.sol"
        },
        {
          "id": "2Wo4SgZhieVPP3g0XD80i3",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/interfaces/IRegistry.sol",
          "description": "IRegistry.sol"
        },
        {
          "id": "3vDcmxQtRMQnBwClj5fHC8",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/interfaces/IScore.sol",
          "description": "IScore.sol"
        },
        {
          "id": "2QbBD91T6pw6cbkUKuV39M",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/interfaces/IUniswapAnchoredView.sol",
          "description": "IUniswapAnchoredView.sol"
        },
        {
          "id": "15GupMIZgzueAe5WCHM4Jy",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/lib/CarefulMath.sol",
          "description": "CarefulMath.sol"
        },
        {
          "id": "3zz64HSjMH5ICkGHHfJEIL",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/lib/Exponential.sol",
          "description": "Exponential.sol"
        },
        {
          "id": "1Cxq9hK5jNTcbEZiAlXTPq",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/proxy/GnosisSafeProxy.sol",
          "description": "GnosisSafeProxy.sol"
        },
        {
          "id": "4Ph7zh6DHjRRqp4yFMv800",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/scoring/BScore.sol",
          "description": "BScore.sol"
        },
        {
          "id": "3bjWbFnNjg6n8yFN1O19Fe",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/scoring/IBTokenScore.sol",
          "description": "IBTokenScore.sol"
        },
        {
          "id": "3OyAmcVK9hvfPIhXmMLCNZ",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/scoring/IScoreConfig.sol",
          "description": "IScoreConfig.sol"
        },
        {
          "id": "2eKD9iIAZl7u7lUdceMNmW",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/dss-cdp-manager/blob/bprotocol/src/BCdpManager.sol",
          "description": "BCdpManager.sol"
        },
        {
          "id": "21xiyyUTUcNK74nYPS3Cu5",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/dss-cdp-manager/blob/bprotocol/src/BCdpScore.sol",
          "description": "BCdpScore.sol"
        },
        {
          "id": "3F5YKACMQLnyISUgTtpozz",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/dss-cdp-manager/blob/bprotocol/src/BCdpScoreConnector.sol",
          "description": "BCdpScoreConnector.sol"
        },
        {
          "id": "2ZucSdORonuy4ZPiHNgfkJ",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/dss-cdp-manager/blob/bprotocol/src/ChainLogConnector.sol",
          "description": "ChainLogConnector.sol"
        },
        {
          "id": "31h09KUexT6kt1OpS1f5J7",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/dss-cdp-manager/blob/bprotocol/src/DssCdpManager.sol",
          "description": "DssCdpManager.sol"
        },
        {
          "id": "1hJrPp11MLZcoFRYxxx7zj",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/dss-cdp-manager/blob/bprotocol/src/GetCdps.sol",
          "description": "GetCdps.sol"
        },
        {
          "id": "3sssAdrWkxpnHXAjoRYjSS",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/dss-cdp-manager/blob/bprotocol/src/LiquidationMachine.sol",
          "description": "LiquidationMachine.sol"
        },
        {
          "id": "54AqBmUSxLWae6K6MDZjq5",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/dss-cdp-manager/blob/bprotocol/src/Math.sol",
          "description": "Math.sol"
        },
        {
          "id": "ub0WvS1Txh9UjtFTErVFd",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/dss-cdp-manager/blob/bprotocol/src/bud/BudConnector.sol",
          "description": "BudConnector.sol"
        },
        {
          "id": "33ctman0TwM7RIuHFFgphi",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/dss-cdp-manager/blob/bprotocol/src/governance/GovernanceExecutor.sol",
          "description": "GovernanceExecutor.sol"
        },
        {
          "id": "2U5wEWQxORcyUzjvLWLOJ2",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/dss-cdp-manager/blob/bprotocol/src/info/LiquidatorInfo.sol",
          "description": "LiquidatorInfo.sol"
        },
        {
          "id": "50Uhv3dc1KsuiTyBwkgIvh",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/dss-cdp-manager/blob/bprotocol/src/info/UserInfo.sol",
          "description": "UserInfo.sol"
        },
        {
          "id": "5bCwX7Rz7GwvpCY0jJ5mlc",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/dss-cdp-manager/blob/bprotocol/src/pool/Pool.sol",
          "description": "Pool.sol"
        },
        {
          "id": "5VwExVGteQDPOe1hDhkfH3",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/dev/blob/main/packages/contracts/contracts/B.Protocol/BAMM.sol",
          "description": "BAMM.sol"
        },
        {
          "id": "2eYO5IHkWwnlBqPaikcO6X",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/dev/blob/main/packages/contracts/contracts/B.Protocol/CropJoinAdapter.sol",
          "description": "CropJoinAdapter.sol"
        },
        {
          "id": "58z8aHBLKWCJhqUj6FodGB",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/dev/blob/main/packages/contracts/contracts/B.Protocol/PBAMM.sol",
          "description": "PBAMM.sol"
        },
        {
          "id": "481SBOKyC6KUMMAAKU6mUn",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/dev/blob/main/packages/contracts/contracts/B.Protocol/PriceFormula.sol",
          "description": "PriceFormula.sol"
        },
        {
          "id": "4TZ3PiMM4DhzvWQNo6S5QB",
          "type": "smart_contract",
          "url": "https://github.com/backstop-protocol/dev/blob/main/packages/contracts/contracts/B.Protocol/crop.sol",
          "description": "crop.sol"
        }
      ],
      "impacts": [
        {
          "id": "o2qkNykWTBkVQE1YT2wFg",
          "title": "Critical Smart Contract Impact",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "71GxeSbn3MLgdftLp9yaR5",
          "title": "High Smart Contract Impact",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "2XPcmHHYZik8LAYWWwxTwT",
          "title": "Medium Smart Contract Impact",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "68DdhFZx1VoaoJck5bGfXV",
          "title": "Low Smart Contract Impact",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "B.Protocol is DeFi’s Backstop Liquidity protocol, handling liquidations in scale for DeFi lending platforms. By creating a transparent, committed, smart contract-based liquidation system, B.Protocol enables better capital efficiency for DeFi users, while creating another layer of stability for the lending platforms themselves. \n\nB.Protocol is integrated with existing lending platforms (MakerDAO, Compound, and soon others) via a dedicated smart contract interface where users give priority to the Backstop liquidators in the liquidation process. As this eliminates the gas wars between liquidators and gives them more certainty in the liquidations process, the Backstop liquidators share their proceeds with the Users in return, creating a win-win situation for all parties involved - User, Liquidators, and Platforms alike. The protocol API to end-users is identical to the lending platform API, and the only difference is that the users are interacting with different addresses.\nFor more information about BProtocol, please visit [https://www.bprotocol.org/](https://www.bprotocol.org/). \n\nThe bug bounty program covers its smart contracts and is focused on the prevention of the negative impacts stated in the Impacts in Scope section.\n",
      "prioritizedVulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nCritical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into account the funds at risk. Other considerations such as PR and branding concerns may also be considered by the team at its discretion. \n\nPaid auditor(s) of this code is(are) not eligible for rewards in this table.  Determinations of eligibility and final reward amount (for critical vulnerabilities) and all terms related to an award are at the sole and final discretion of the B.Protocol team.\n\nPayouts are handled by the __BProtocol__ team directly and are denominated in USD. Payouts are done in __USDC__ or __DAI__ for payouts up to USD 10 000 and BPRO/stablecoin mix (90%/10%) for all other critical payouts, capped by up to 50 000 BPRO.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty\n",
      "assetsBodyV2": "The contracts in this table can be found on the following links:\n\n[https://github.com/backstop-protocol/BCompound/tree/master/contracts/bprotocol ](https://github.com/backstop-protocol/BCompound/tree/master/contracts/bprotocol)\n\n[https://github.com/backstop-protocol/dss-cdp-manager/tree/bprotocol/src ](https://github.com/backstop-protocol/dss-cdp-manager/tree/bprotocol/src)\n\n[https://github.com/backstop-protocol/dev/tree/main/packages/contracts/contracts/B.Protocol](https://github.com/backstop-protocol/dev/tree/main/packages/contracts/contracts/B.Protocol) \n\nHowever, only the smart contracts within the assets in scope table itself are considered as in-scope for the bug bounty program.\n",
      "impactsBody": null,
      "immunefiStandard": null,
      "tags": {
        "productType": [
          "Lending"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $100,000"
          },
          {
            "level": "High",
            "payout": "USD $10,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"B.Protocol is DeFi\\u2019s Backstop Liquidity protocol, handling liquidations in scale for DeFi lending platforms. By creating a transparent, committed, smart contract-based liquidation system, B.Protocol enables better capital efficiency for DeFi users, while creating another layer of stability for the lending platforms themselves. \"), mdx(\"p\", null, \"B.Protocol is integrated with existing lending platforms (MakerDAO, Compound, and soon others) via a dedicated smart contract interface where users give priority to the Backstop liquidators in the liquidation process. As this eliminates the gas wars between liquidators and gives them more certainty in the liquidations process, the Backstop liquidators share their proceeds with the Users in return, creating a win-win situation for all parties involved - User, Liquidators, and Platforms alike. The protocol API to end-users is identical to the lending platform API, and the only difference is that the users are interacting with different addresses.\\nFor more information about BProtocol, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.bprotocol.org/\"\n  }, \"https://www.bprotocol.org/\"), \". \"), mdx(\"p\", null, \"The bug bounty program covers its smart contracts and is focused on the prevention of the negative impacts stated in the Impacts in Scope section.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>B.Protocol is DeFi’s Backstop Liquidity protocol, handling liquidations in scale for DeFi lending platforms. By creating a transparent, committed, smart contract-based liquidation system, B.Protocol enables better capital efficiency for DeFi users, while creating another layer of stability for the lending platforms themselves. </p><p>B.Protocol is integrated with existing lending platforms (MakerDAO, Compound, and soon others) via a dedicated smart contract interface where users give priority to the Backstop liquidators in the liquidation process. As this eliminates the gas wars between liquidators and gives them more certainty in the liquidations process, the Backstop liquidators share their proceeds with the Users in return, creating a win-win situation for all parties involved - User, Liquidators, and Platforms alike. The protocol API to end-users is identical to the lending platform API, and the only difference is that the users are interacting with different addresses.\nFor more information about BProtocol, please visit <a href=\"https://www.bprotocol.org/\">https://www.bprotocol.org/</a>. </p><p>The bug bounty program covers its smart contracts and is focused on the prevention of the negative impacts stated in the Impacts in Scope section.</p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are especially interested in receiving and rewarding vulnerabilities of the following types:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\"), \" \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Re-entrancy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Logic errors\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including user authentication errors\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Solidity/EVM details not considered\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including integer over-/under-flow\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including rounding errors\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including unhandled exceptions\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusting trust/dependency vulnerabilities\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including composability vulnerabilities\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Oracle failure/manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Novel governance attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Economic/financial attacks\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Congestion and scalability\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including running out of gas\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including block stuffing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including susceptibility to frontrunning\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Consensus failures\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cryptography problems\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Signature malleability\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to replay attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak randomness\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak encryption\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to block timestamp manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing access controls / unprotected internal or debugging interfaces\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>We are especially interested in receiving and rewarding vulnerabilities of the following types:</p><p><strong>Smart Contracts and Blockchain</strong> </p><ul><li>Re-entrancy</li><li>Logic errors<ul><li>including user authentication errors</li></ul></li><li>Solidity/EVM details not considered<ul><li>including integer over-/under-flow</li><li>including rounding errors</li><li>including unhandled exceptions</li></ul></li><li>Trusting trust/dependency vulnerabilities<ul><li>including composability vulnerabilities</li></ul></li><li>Oracle failure/manipulation</li><li>Novel governance attacks</li><li>Economic/financial attacks<ul><li>including flash loan attacks</li></ul></li><li>Congestion and scalability<ul><li>including running out of gas</li><li>including block stuffing</li><li>including susceptibility to frontrunning</li></ul></li><li>Consensus failures</li><li>Cryptography problems<ul><li>Signature malleability</li><li>Susceptibility to replay attacks</li><li>Weak randomness</li><li>Weak encryption</li></ul></li><li>Susceptibility to block timestamp manipulation</li><li>Missing access controls / unprotected internal or debugging interfaces</li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/severity-updated/\"\n  }, \"Immunefi Vulnerability Severity Classification System\"), \". This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\"), mdx(\"p\", null, \"Critical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into account the funds at risk. Other considerations such as PR and branding concerns may also be considered by the team at its discretion. \"), mdx(\"p\", null, \"Paid auditor(s) of this code is(are) not eligible for rewards in this table.  Determinations of eligibility and final reward amount (for critical vulnerabilities) and all terms related to an award are at the sole and final discretion of the B.Protocol team.\"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"BProtocol\"), \" team directly and are denominated in USD. Payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \" or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"DAI\"), \" for payouts up to USD 10 000 and BPRO/stablecoin mix (90%/10%) for all other critical payouts, capped by up to 50 000 BPRO.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/severity-updated/\">Immunefi Vulnerability Severity Classification System</a>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.</p><p>Critical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into account the funds at risk. Other considerations such as PR and branding concerns may also be considered by the team at its discretion. </p><p>Paid auditor(s) of this code is(are) not eligible for rewards in this table.  Determinations of eligibility and final reward amount (for critical vulnerabilities) and all terms related to an award are at the sole and final discretion of the B.Protocol team.</p><p>Payouts are handled by the <strong>BProtocol</strong> team directly and are denominated in USD. Payouts are done in <strong>USDC</strong> or <strong>DAI</strong> for payouts up to USD 10 000 and BPRO/stablecoin mix (90%/10%) for all other critical payouts, capped by up to 50 000 BPRO.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The contracts in this table can be found on the following links:\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/backstop-protocol/BCompound/tree/master/contracts/bprotocol\"\n  }, \"https://github.com/backstop-protocol/BCompound/tree/master/contracts/bprotocol \")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/backstop-protocol/dss-cdp-manager/tree/bprotocol/src\"\n  }, \"https://github.com/backstop-protocol/dss-cdp-manager/tree/bprotocol/src \")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/backstop-protocol/dev/tree/main/packages/contracts/contracts/B.Protocol\"\n  }, \"https://github.com/backstop-protocol/dev/tree/main/packages/contracts/contracts/B.Protocol\"), \" \"), mdx(\"p\", null, \"However, only the smart contracts within the assets in scope table itself are considered as in-scope for the bug bounty program.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The contracts in this table can be found on the following links:</p><p><a href=\"https://github.com/backstop-protocol/BCompound/tree/master/contracts/bprotocol\">https://github.com/backstop-protocol/BCompound/tree/master/contracts/bprotocol </a></p><p><a href=\"https://github.com/backstop-protocol/dss-cdp-manager/tree/bprotocol/src\">https://github.com/backstop-protocol/dss-cdp-manager/tree/bprotocol/src </a></p><p><a href=\"https://github.com/backstop-protocol/dev/tree/main/packages/contracts/contracts/B.Protocol\">https://github.com/backstop-protocol/dev/tree/main/packages/contracts/contracts/B.Protocol</a> </p><p>However, only the smart contracts within the assets in scope table itself are considered as in-scope for the bug bounty program.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

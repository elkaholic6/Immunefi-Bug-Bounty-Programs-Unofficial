{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "popsicle",
      "slug": "popsicle",
      "project": "Popsicle",
      "maxBounty": 100000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2uaiuBlUHSOyHVrNn2Lirb/3748ee8aa473d05c405d666f8f4a3e49/Popsicle.jpeg",
      "launchDate": "2021-08-20T10:00-05:00",
      "updatedDate": "2022-12-27T14:40:36.120Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $100,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $5,000 - USD $10,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "2jEJYyuP5ZAcS2fYUTQbE9",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/OptimizerStrategy.sol",
          "description": "OptimizerStrategy.sol"
        },
        {
          "id": "1qZDLpgOSL7T7WXr1wn8hK",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/OptimizerStrategy_flat.sol",
          "description": "OptimizerStrategy_flat.sol"
        },
        {
          "id": "1evIJM8yUsjdcjh7ylnIim",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/PopsicleV3Optimizer.sol",
          "description": "PopsicleV3Optimizer.sol"
        },
        {
          "id": "5lmGgAAtVZmK5UGac4aW6K",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/PopsicleV3Optimizer_flat.sol",
          "description": "PopsicleV3Optimizer_flat.sol"
        },
        {
          "id": "5TQGOqrxt76lfv0n4o5rZ3",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/base/EIP712.sol",
          "description": "EIP712.sol"
        },
        {
          "id": "4dht3waNoOA2XuS8XyZYYx",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/base/ERC20Permit.sol",
          "description": "ERC20Permit.sol"
        },
        {
          "id": "23TgMe9nrRkt440fHGLvFb",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/interfaces/IOptimizerStrategy.sol",
          "description": "IOptimizerStrategy.sol"
        },
        {
          "id": "3SfSwinIxdNK8r3nxq4D2z",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/interfaces/IPopsicleV3Optimizer.sol",
          "description": "IPopsicleV3Optimizer.sol"
        },
        {
          "id": "74qaJSxwpivRagMoBFXlPY",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/interfaces/IUniswapV3Pool.sol",
          "description": "IUniswapV3Pool.sol"
        },
        {
          "id": "6EjiIyvzvfuSx9bYFzpulj",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/interfaces/external/IWETH9.sol",
          "description": "IWETH9.sol"
        },
        {
          "id": "46DUPNnoOrhuScpSoZFs4k",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/interfaces/pool/IUniswapV3PoolActions.sol",
          "description": "IUniswapV3PoolActions.sol"
        },
        {
          "id": "2mmr0w4VhBjJOLAn8urtKc",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/interfaces/pool/IUniswapV3PoolDerivedState.sol",
          "description": "IUniswapV3PoolDerivedState.sol"
        },
        {
          "id": "1gFVgYAOKqwBF85YRFsJvP",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/interfaces/pool/IUniswapV3PoolImmutables.sol",
          "description": "IUniswapV3PoolImmutables.sol"
        },
        {
          "id": "72L1A7Ii8COGLonIAKUrDL",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/interfaces/pool/IUniswapV3PoolState.sol",
          "description": "IUniswapV3PoolState.sol"
        },
        {
          "id": "1inMVdFxP7bgLqcBekJKAL",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/libraries/Babylonian.sol",
          "description": "Babylonian.sol"
        },
        {
          "id": "5jZJxpI1K4ntSjByz2j8VZ",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/libraries/ChainId.sol",
          "description": "ChainId.sol"
        },
        {
          "id": "5QkQ4qWW56Rxz4We9tX7rQ",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/libraries/Counters.sol",
          "description": "Counters.sol"
        },
        {
          "id": "7mVlmbmA569kjztJGDjcLP",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/libraries/ECDSA.sol",
          "description": "ECDSA.sol"
        },
        {
          "id": "1QjQtib65KYmNomSoLiwIy",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/libraries/FixedPoint128.sol",
          "description": "FixedPoint128.sol"
        },
        {
          "id": "3dRq5pIzrkDSunq62A7GFt",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/libraries/FixedPoint96.sol",
          "description": "FixedPoint96.sol"
        },
        {
          "id": "6W9idt9yHk01rLMNhRwNJ1",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/libraries/FullMath.sol",
          "description": "FullMath.sol"
        },
        {
          "id": "6veSPhzUx7DksXlhW9cG62",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/libraries/LiquidityAmounts.sol",
          "description": "LiquidityAmounts.sol"
        },
        {
          "id": "1PaEeFx1qykSrZcl7Wob6N",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/libraries/LowGasSafeMath.sol",
          "description": "LowGasSafeMath.sol"
        },
        {
          "id": "2V3S7GfmTD1udSx2PFGufU",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/libraries/PoolActions.sol",
          "description": "PoolActions.sol"
        },
        {
          "id": "uTejYvID3k5yTyW8G8y1F",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/libraries/PoolVariables.sol",
          "description": "PoolVariables.sol"
        },
        {
          "id": "357JecnlDnCJ97CjFYgjy1",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/libraries/PositionKey.sol",
          "description": "PositionKey.sol"
        },
        {
          "id": "5V9A7t2Jkzt02LxmoWZ0k2",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/libraries/SafeCast.sol",
          "description": "SafeCast.sol"
        },
        {
          "id": "5yUjbml1Y3jKzP7ljfaXX3",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/libraries/SqrtPriceMath.sol",
          "description": "SqrtPriceMath.sol"
        },
        {
          "id": "2E8OXHQlrYsCUVakBSdQ2S",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/libraries/TickMath.sol",
          "description": "TickMath.sol"
        },
        {
          "id": "3pHZNpgQTswZybKoY9yUPr",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/libraries/TransferHelper.sol",
          "description": "TransferHelper.sol"
        },
        {
          "id": "597Z47RjEbDUsyTIAaUdkK",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/libraries/UnsafeMath.sol",
          "description": "UnsafeMath.sol"
        },
        {
          "id": "1iqvriRmqYex26Av7qrzVT",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/token/ERC20.sol",
          "description": "ERC20.sol"
        },
        {
          "id": "7iE7AQYbgDqYEkWgY2QSEG",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/token/IERC20.sol",
          "description": "IERC20.sol"
        },
        {
          "id": "6Da5nhwH2l2KCrvwE4VCkc",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/token/IERC20Permit.sol",
          "description": "IERC20Permit.sol"
        },
        {
          "id": "2J9437S2GmeYPFWDHevLKY",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/utils/Context.sol",
          "description": "Context.sol"
        },
        {
          "id": "1vdUB0iF7ASQfoR4JVGnbM",
          "type": "smart_contract",
          "url": "https://github.com/vt-btf/Optimizer/blob/main/utils/ReentrancyGuard.sol",
          "description": "ReentrancyGuard.sol"
        }
      ],
      "impacts": [
        {
          "id": "35DZamtT1kzHkXyOyvh2iv",
          "title": "Loss of user funds staked (principal) by freezing or theft",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3qAkzIJk6jTOIBciKShVcO",
          "title": "Loss of governance funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2B4uIrFwwaykn06aG4HTr8",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "4DOd03HlYHyNye3n3LN2Fg",
          "title": "Freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "lDcH4dE6P0Unr6yvuiY1c",
          "title": "Temporary freezing of funds for any amount of time",
          "type": "smart_contract",
          "severity": "high"
        }
      ],
      "programOverview": "Popsicle Finance will manage liquidity across multiple chains in order to increase capital efficiency and automatically provide its users with the highest possible yield on the assets they wish to deploy to liquidity pools. Popsicle Finance believes that we, as the blockchain (crypto) space, should be working together rather than individually on separate chains.\n\nFor more information about Popsicle Finance, please visit [https://popsicle.finance/](https://popsicle.finance/).\n\nThis bug bounty program is focused on their smart contracts, website, and application, and is focused on preventing the following impacts:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount",
      "prioritizedVulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain __\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nIn order to qualify for a reward, the following must be provided for all bug reports: \n\n  - Proof of Concept (PoC)\n  - Suggestion for a fix\n\nHigh Smart Contract vulnerabilities will be rewarded based on the impact the bug could have.\n\nPayouts are handled by the __Popsicle Finance__ team directly and are denominated in USD. However, payouts are done in __USDT__, __ETH__, or __BTC__.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "The smart contracts in this table are not deployed smart contracts as the project is currently paused. Once the project is re-deployed, this table will be updated with live smart contract addresses.\n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "AMM",
          "Staking"
        ],
        "projectType": [
          "Blockchain"
        ],
        "ecosystem": [
          "BSC",
          "ETH",
          "Fantom"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $100,000"
          },
          {
            "level": "High",
            "payout": "USD $5,000 - USD $10,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Popsicle Finance will manage liquidity across multiple chains in order to increase capital efficiency and automatically provide its users with the highest possible yield on the assets they wish to deploy to liquidity pools. Popsicle Finance believes that we, as the blockchain (crypto) space, should be working together rather than individually on separate chains.\"), mdx(\"p\", null, \"For more information about Popsicle Finance, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://popsicle.finance/\"\n  }, \"https://popsicle.finance/\"), \".\"), mdx(\"p\", null, \"This bug bounty program is focused on their smart contracts, website, and application, and is focused on preventing the following impacts:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Thefts and freezing of principal of any amount\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Thefts and freezing of unclaimed yield of any amount\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Popsicle Finance will manage liquidity across multiple chains in order to increase capital efficiency and automatically provide its users with the highest possible yield on the assets they wish to deploy to liquidity pools. Popsicle Finance believes that we, as the blockchain (crypto) space, should be working together rather than individually on separate chains.</p><p>For more information about Popsicle Finance, please visit <a href=\"https://popsicle.finance/\">https://popsicle.finance/</a>.</p><p>This bug bounty program is focused on their smart contracts, website, and application, and is focused on preventing the following impacts:</p><ul><li>Thefts and freezing of principal of any amount</li><li>Thefts and freezing of unclaimed yield of any amount</li></ul>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are especially interested in receiving and rewarding vulnerabilities of the following types:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain \")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Re-entrancy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Logic errors\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including user authentication errors\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Solidity/EVM details not considered\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including integer over-/under-flow\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including rounding errors\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including unhandled exceptions\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusting trust/dependency vulnerabilities\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including composability vulnerabilities\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Oracle failure/manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Novel governance attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Economic/financial attacks\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Congestion and scalability\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including running out of gas\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including block stuffing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including susceptibility to frontrunning\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Consensus failures\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cryptography problems\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Signature malleability\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to replay attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak randomness\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak encryption\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to block timestamp manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing access controls / unprotected internal or debugging interfaces\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>We are especially interested in receiving and rewarding vulnerabilities of the following types:</p><p><strong>Smart Contracts and Blockchain </strong></p><ul><li>Re-entrancy</li><li>Logic errors<ul><li>including user authentication errors</li></ul></li><li>Solidity/EVM details not considered<ul><li>including integer over-/under-flow</li><li>including rounding errors</li><li>including unhandled exceptions</li></ul></li><li>Trusting trust/dependency vulnerabilities<ul><li>including composability vulnerabilities</li></ul></li><li>Oracle failure/manipulation</li><li>Novel governance attacks</li><li>Economic/financial attacks<ul><li>including flash loan attacks</li></ul></li><li>Congestion and scalability<ul><li>including running out of gas</li><li>including block stuffing</li><li>including susceptibility to frontrunning</li></ul></li><li>Consensus failures</li><li>Cryptography problems<ul><li>Signature malleability</li><li>Susceptibility to replay attacks</li><li>Weak randomness</li><li>Weak encryption</li></ul></li><li>Susceptibility to block timestamp manipulation</li><li>Missing access controls / unprotected internal or debugging interfaces</li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\"), mdx(\"p\", null, \"In order to qualify for a reward, the following must be provided for all bug reports: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Proof of Concept (PoC)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Suggestion for a fix\")), mdx(\"p\", null, \"High Smart Contract vulnerabilities will be rewarded based on the impact the bug could have.\"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Popsicle Finance\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDT\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ETH\"), \", or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"BTC\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.</p><p>In order to qualify for a reward, the following must be provided for all bug reports: </p><ul><li>Proof of Concept (PoC)</li><li>Suggestion for a fix</li></ul><p>High Smart Contract vulnerabilities will be rewarded based on the impact the bug could have.</p><p>Payouts are handled by the <strong>Popsicle Finance</strong> team directly and are denominated in USD. However, payouts are done in <strong>USDT</strong>, <strong>ETH</strong>, or <strong>BTC</strong>.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The smart contracts in this table are not deployed smart contracts as the project is currently paused. Once the project is re-deployed, this table will be updated with live smart contract addresses.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The smart contracts in this table are not deployed smart contracts as the project is currently paused. Once the project is re-deployed, this table will be updated with live smart contract addresses.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

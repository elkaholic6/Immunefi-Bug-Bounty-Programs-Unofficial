{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "livepeer",
      "slug": "livepeer",
      "project": "Livepeer",
      "maxBounty": 40000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3UUkKoNVTz0RMrIhQnL0v8/042be0217ef163209cec501313440815/Livepeer_logo.jpeg",
      "launchDate": "2022-02-24T21:00-07:00",
      "updatedDate": "2022-10-13T14:01:17.758Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to USD $40,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "Up to USD $15,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $2,500",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": false
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "7Cdh70RE8zr62ah69YIAYh",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xD9dEd6f9959176F0A04dcf88a0d2306178A736a6#code",
          "description": "Governor"
        },
        {
          "id": "6ARfxaFDvHF8y38ShPC0ks",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xD8E8328501E9645d16Cf49539efC04f734606ee4#code",
          "description": "Controller"
        },
        {
          "id": "1d6eBKZTRr3nMNN39NmN5Y",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x289ba1701C2F088cf0faf8B3705246331cB8A839#code",
          "description": "LivepeerToken"
        },
        {
          "id": "2VHNORN0e4S6Ls1VlhwdWq",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xc20DE37170B45774e6CD3d2304017fc962f27252",
          "description": "Minter"
        },
        {
          "id": "1u5kFokTDnbVJv0uXGTLTh",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x35Bcf3c30594191d53231E4FF333E8A770453e40#code",
          "description": "Bonding Manager (Proxy)"
        },
        {
          "id": "4nAId0h2gZRYDmpdkL6Fmr",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x3a941e1094B9E33efABB26a9047a8ABb4b257907",
          "description": "Bonding Manager (Target)"
        },
        {
          "id": "5DAqzgbZ5ks8YcBWZuVnJg",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xa8bB618B1520E284046F3dFc448851A1Ff26e41B#code",
          "description": "TicketBroker (Proxy)"
        },
        {
          "id": "4IF01CbBuEbQBPZFFeUlol",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xD906D192e2503Aafd1BC5F5fc4163E842D5B1d6e",
          "description": "TicketBroker (Target)"
        },
        {
          "id": "4JiHYDxONqoMFlTDYQZJ53",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xdd6f56DcC28D3F5f27084381fE8Df634985cc39f#code",
          "description": "RoundsManager (Proxy)"
        },
        {
          "id": "2CJfXWXNbtG2JrUGvfPcVl",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x92d804Ed49D92438aEA6fe552BD9163aacb7E841#code",
          "description": "RoundsManager (Target)"
        },
        {
          "id": "54Nd7FYH0pfsZ3DXuwYw22",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xC92d3A360b8f9e083bA64DE15d95Cf8180897431#code",
          "description": "ServiceRegistry (Proxy)"
        },
        {
          "id": "4KmuzIeDli8Bz3bfvC8S4G",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x38093CDca43aeCd7bb474983519A246e93A3b0a7#code",
          "description": "ServiceRegistry (Target)"
        },
        {
          "id": "2CnNEtvoZ4bIBDopCGbJuC",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xC45f6918F7Bcac7aBc8fe05302b3cDF39776cdeb#code",
          "description": "SortedDoublyLL"
        },
        {
          "id": "Iy8uEGapWrQzHIqF2YvCC",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x8bb50806D60c492c0004DAD5D9627DAA2d9732E6#code",
          "description": "PollCreator"
        },
        {
          "id": "dioPU1xGFWvEkzrawW550",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x10736ffaCe687658F88a46D042631d182C7757f7#code",
          "description": "MerkleSnapshot"
        },
        {
          "id": "3UMmUf7MWRg0o0ZGwb3WY2",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xfdb06109032AD3671a8f14f5f2E78f4B9E81b567#code",
          "description": "DelegatorPool"
        },
        {
          "id": "3ufwbcwvbgi0S47kk9Aly7",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xd78b6bD09cd28A83cFb21aFa0DA95c685A6bb0B1#code",
          "description": "L2LPTDataCache"
        },
        {
          "id": "2ZymNdGRj17ex9z1wKwGma",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x6D2457a4ad276000A615295f7A80F79E48CcD318#code",
          "description": "L2PTGateway"
        },
        {
          "id": "5ZYck5BhhvLunmb5S7q9LT",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x148D5b6B4df9530c7C76A810bd1Cdf69EC4c2085#code",
          "description": "L2Migrator (Proxy)"
        },
        {
          "id": "124lsvhcePLhRn2wgGKSXN",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x93BB030735747708b4D33093A98d4c804Cd6B58C",
          "description": "L2Migrator (Target)"
        },
        {
          "id": "48WXjN9eI8Q14si4hwxIM5",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x6A23F4940BD5BA117Da261f98aae51A8BFfa210A#code",
          "description": "L1Escrow"
        },
        {
          "id": "35pjN33XgCfei1RwUsq9yb",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x1d24838b35A9c138Ac157A852e19e948aD6323D7#code",
          "description": "L1LPTDataCache"
        },
        {
          "id": "5eA9TmBzp5C2UBaQFe7vFf",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x6142f1C8bBF02E6A6bd074E8d564c9A5420a0676#code",
          "description": "L1LPTGateway"
        },
        {
          "id": "6ugrr3oxL6fv1CeBceb6dK",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x21146B872D3A95d2cF9afeD03eE5a783DaE9A89A#code",
          "description": "L1Migrator"
        },
        {
          "id": "1PRB92FHthoDEc00RlfRzF",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x8dDDB96CF36AC8860f1DE5C7c4698fd499FAB405#code",
          "description": "BridgeMinter"
        }
      ],
      "impacts": [
        {
          "id": "1HAu8TAr38UOVCI17JIPrT",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5hXt85cODDaCNKXcBr2pFj",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2ubfAFykMijEZ1vFodHDaE",
          "title": "Insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "nNQz9Z1UI3AQTRDZMF3Hy",
          "title": "Unintended issuance of LPT on L1",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2zEso8BuwCXpbyrdqBzqZI",
          "title": "Unexpected calls to functions that should only be called by authorized addresses (i.e. Governor)",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "7cb94ROiFKXgSELkxVvvrc",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "TAGEA8XHt5xLhfaZOMhtS",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "3ysXPgJ36rr9U4qko8WibO",
          "title": "Temporary freezing of funds",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "2ARjQNnfUAEMJvqNnxKxch",
          "title": "Any unexpected balance inflation when transitioning between L1 and L2",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "2VWM5DcTctgwHOMHTiCEf8",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "79VgRSvKIaUFZHbnnxkzIq",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "1i2wTrYz0v55Fa3EJab1b7",
          "title": "Unbounded gas consumption or any other gas drainage",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "2UzyfEDb835yNvJalZYb77",
          "title": "Smart contract has unexpected behavior but doesnâ€™t lose value",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "Livepeer is a decentralized video streaming network built on the Ethereum blockchain. The Livepeer network already includes over 70,000 GPUs, which is enough aggregated power to encode all of the video streaming through Twitch, YouTube and Facebook combined. Through the power of open source software, the harnessing of underutilized resources like compute and bandwidth, and the use of cryptoeconomic incentives for bootstrapping and participation, there is an opportunity to deliver an infrastructure that can power video streaming applications at a highly efficient price, and infinite scale.\n\nFor more information about Livepeer, please visit [https://livepeer.org/](https://livepeer.org/).  \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\n  - Permanent freezing of funds\n  - Insolvency\n  - Unintended issuance of LPT on L1\n  - Unexpected calls to functions that should only be called by authorized addresses (i.e. Governor)",
      "prioritizedVulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n__Critical__\n  - Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\n  - Permanent freezing of funds\n  - Insolvency\n  - Unintended issuance of LPT on L1\n  - Unexpected calls to functions that should only be called by authorized addresses (i.e. Governor)\n\n__High__\n  - Theft of unclaimed yield\n  - Permanent freezing of unclaimed yield\n  - Temporary freezing of funds\n  - Any unexpected balance inflation when transitioning between L1 and L2\n\n__Medium__\n  - Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)\n  - Theft of gas\n  - Unbounded gas consumption or any other gas drainage\n\n__Low__\n  - Smart contract has unexpected behavior but doesnâ€™t lose value\n\nIn case of discrepancy between [Immunefi Vulnerability Severity Classification System V2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2/) and Livepeerâ€™s classification above, Livepeer classification will be followed.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nAll vulnerabilities marked in the [security review](https://code4rena.com/reports/2022-01-livepeer) are not eligible for a reward.\n\nLivepeer requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed is Visual Proof of Identity. The collection of this information will be done by the project team. \n\nRewards for critical vulnerabilities are capped at 10% of the economic damage (following the linked examples) with the primary focus on possible loss of funds for Orchestrators, Delegators and Broadcasters at the Smart Contract level only. If there is a repeatable attack, only the first attack is considered unless further attacks cannot be mitigated via an upgrade or pause.\n\nRewards for high vulnerabilities will depend on the amount of unclaimed yield that is on the line and how long the funds can be frozen.\n\nPayouts are handled by the __Livepeer__ team directly and are denominated in USD. However, payouts are done in __USDC__.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n  - Oracle failure/manipulation\n  - Consensus failure\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "All smart contracts of Livepeer can be found at [https://github.com/livepeer/arbitrum-lpt-bridge](https://github.com/livepeer/arbitrum-lpt-bridge), [https://github.com/livepeer/protocol/](https://github.com/livepeer/protocol/tree/confluence). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. \n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": null,
        "projectType": null,
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": null
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $40,000"
          },
          {
            "level": "High",
            "payout": "Up to USD $15,000"
          },
          {
            "level": "Medium",
            "payout": "USD $2,500"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Livepeer is a decentralized video streaming network built on the Ethereum blockchain. The Livepeer network already includes over 70,000 GPUs, which is enough aggregated power to encode all of the video streaming through Twitch, YouTube and Facebook combined. Through the power of open source software, the harnessing of underutilized resources like compute and bandwidth, and the use of cryptoeconomic incentives for bootstrapping and participation, there is an opportunity to deliver an infrastructure that can power video streaming applications at a highly efficient price, and infinite scale.\"), mdx(\"p\", null, \"For more information about Livepeer, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://livepeer.org/\"\n  }, \"https://livepeer.org/\"), \".  \"), mdx(\"p\", null, \"This bug bounty program is focused on their smart contracts and is focused on preventing:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Insolvency\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unintended issuance of LPT on L1\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unexpected calls to functions that should only be called by authorized addresses (i.e. Governor)\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Livepeer is a decentralized video streaming network built on the Ethereum blockchain. The Livepeer network already includes over 70,000 GPUs, which is enough aggregated power to encode all of the video streaming through Twitch, YouTube and Facebook combined. Through the power of open source software, the harnessing of underutilized resources like compute and bandwidth, and the use of cryptoeconomic incentives for bootstrapping and participation, there is an opportunity to deliver an infrastructure that can power video streaming applications at a highly efficient price, and infinite scale.</p><p>For more information about Livepeer, please visit <a href=\"https://livepeer.org/\">https://livepeer.org/</a>.  </p><p>This bug bounty program is focused on their smart contracts and is focused on preventing:</p><ul><li>Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield</li><li>Permanent freezing of funds</li><li>Insolvency</li><li>Unintended issuance of LPT on L1</li><li>Unexpected calls to functions that should only be called by authorized addresses (i.e. Governor)</li></ul>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Impacts in Scope\")), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Critical\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Insolvency\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unintended issuance of LPT on L1\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unexpected calls to functions that should only be called by authorized addresses (i.e. Governor)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"High\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Temporary freezing of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any unexpected balance inflation when transitioning between L1 and L2\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Medium\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of gas\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unbounded gas consumption or any other gas drainage\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Low\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract has unexpected behavior but doesn\\u2019t lose value\")), mdx(\"p\", null, \"In case of discrepancy between \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2/\"\n  }, \"Immunefi Vulnerability Severity Classification System V2\"), \" and Livepeer\\u2019s classification above, Livepeer classification will be followed.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p><strong>Impacts in Scope</strong></p><p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p><p><strong>Smart Contracts</strong></p><p><strong>Critical</strong></p><ul><li>Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield</li><li>Permanent freezing of funds</li><li>Insolvency</li><li>Unintended issuance of LPT on L1</li><li>Unexpected calls to functions that should only be called by authorized addresses (i.e. Governor)</li></ul><p><strong>High</strong></p><ul><li>Theft of unclaimed yield</li><li>Permanent freezing of unclaimed yield</li><li>Temporary freezing of funds</li><li>Any unexpected balance inflation when transitioning between L1 and L2</li></ul><p><strong>Medium</strong></p><ul><li>Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)</li><li>Theft of gas</li><li>Unbounded gas consumption or any other gas drainage</li></ul><p><strong>Low</strong></p><ul><li>Smart contract has unexpected behavior but doesnâ€™t lose value</li></ul><p>In case of discrepancy between <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2/\">Immunefi Vulnerability Severity Classification System V2</a> and Livepeerâ€™s classification above, Livepeer classification will be followed.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\"), mdx(\"p\", null, \"All web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\"), mdx(\"p\", null, \"All vulnerabilities marked in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://code4rena.com/reports/2022-01-livepeer\"\n  }, \"security review\"), \" are not eligible for a reward.\"), mdx(\"p\", null, \"Livepeer requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed is Visual Proof of Identity. The collection of this information will be done by the project team. \"), mdx(\"p\", null, \"Rewards for critical vulnerabilities are capped at 10% of the economic damage (following the linked examples) with the primary focus on possible loss of funds for Orchestrators, Delegators and Broadcasters at the Smart Contract level only. If there is a repeatable attack, only the first attack is considered unless further attacks cannot be mitigated via an upgrade or pause.\"), mdx(\"p\", null, \"Rewards for high vulnerabilities will depend on the amount of unclaimed yield that is on the line and how long the funds can be frozen.\"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Livepeer\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.</p><p>All web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.</p><p>All vulnerabilities marked in the <a href=\"https://code4rena.com/reports/2022-01-livepeer\">security review</a> are not eligible for a reward.</p><p>Livepeer requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed is Visual Proof of Identity. The collection of this information will be done by the project team. </p><p>Rewards for critical vulnerabilities are capped at 10% of the economic damage (following the linked examples) with the primary focus on possible loss of funds for Orchestrators, Delegators and Broadcasters at the Smart Contract level only. If there is a repeatable attack, only the first attack is considered unless further attacks cannot be mitigated via an upgrade or pause.</p><p>Rewards for high vulnerabilities will depend on the amount of unclaimed yield that is on the line and how long the funds can be frozen.</p><p>Payouts are handled by the <strong>Livepeer</strong> team directly and are denominated in USD. However, payouts are done in <strong>USDC</strong>.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Oracle failure/manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Consensus failure\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles</li><li>Not to exclude oracle manipulation/flash loan attacks</li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li><li>Oracle failure/manipulation</li><li>Consensus failure</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of Livepeer can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/livepeer/arbitrum-lpt-bridge\"\n  }, \"https://github.com/livepeer/arbitrum-lpt-bridge\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/livepeer/protocol/tree/confluence\"\n  }, \"https://github.com/livepeer/protocol/\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. \"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of Livepeer can be found at <a href=\"https://github.com/livepeer/arbitrum-lpt-bridge\">https://github.com/livepeer/arbitrum-lpt-bridge</a>, <a href=\"https://github.com/livepeer/protocol/tree/confluence\">https://github.com/livepeer/protocol/</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. </p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

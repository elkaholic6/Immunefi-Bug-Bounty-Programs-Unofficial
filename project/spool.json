{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "spool",
      "slug": "spool",
      "project": "Spool",
      "maxBounty": 1500000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2temgYEnUa6b1wiAL1SPcu/2be74f33eace967ec6f98e8e30884928/Spool_Logo_.png",
      "launchDate": "2022-07-01T10:30-06:00",
      "updatedDate": "2023-03-17T18:17:13.998Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to USD $1,500,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "Up to USD $50,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": false
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "4kTvTk7N1Dbe4fvyHgFSJ0",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x40803cea2b2a32bda1be61d3604af6a814e70976",
          "description": "SPOOL Token"
        },
        {
          "id": "2J46P8B5LRwUaX4Q04DY4i",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xa308828904977bbceb91a9b0cb3db07636734fb7",
          "description": "Vault"
        },
        {
          "id": "5uPnJH7Kw53hbM34vAyKU6",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x26ac1dba97c1f3f33eea9ad8b3e9d9dc588c023e",
          "description": "Spool DAI Lower Risk"
        },
        {
          "id": "4m3Qee2vl3PQTXaU1CX9kB",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xf880ceebbbd960143a65ce70366324516f2104fc",
          "description": "Spool DAI Higher Risk"
        },
        {
          "id": "3aARuc9SWoe33Czpdu5KWI",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x3f5c39658a54f866db4081b10c4964246abe6b06",
          "description": "Spool USDC Lower Risk"
        },
        {
          "id": "5yHC3AJ0dDKIdehSziJOdh",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x599c1be6fed6c01db69281f3c36a6c983729a6f4",
          "description": "Spool USDC Higher Risk"
        },
        {
          "id": "2umCjtnmhnuEuo7pUVjxdQ",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x9b83654edc734ecb9072eb03e70e55813f124c81",
          "description": "Spool USDT Lower Risk"
        },
        {
          "id": "2iByZbjlUlGUNamZEnIUnY",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xcf4cf54f1f9fc1a88c1b4d85d4eee5cdd8ed254b",
          "description": "Spool USDT Higher Risk"
        },
        {
          "id": "63PTb23gydMhfT4Y1tONNv",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xa71A526c962D08206a44B560A4dd67E97bb5fBc0",
          "description": "Aave DAI"
        },
        {
          "id": "39omPdJDO0mmZqtrpbj0TZ",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xf36d05c1b7810013334ce6f1986aaefde1eb34fc",
          "description": "Aave USDC"
        },
        {
          "id": "3EtqjMqYdTDDjzumaqdzg",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xf6157d5ff062aa7bfb783ca997b3c7dd18d366c8",
          "description": "Aave USDT"
        },
        {
          "id": "78nZSNJuTMeZMRaS8RLRa9",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xf24ebddfe5d73423dec966f14c1ec714f59a6656",
          "description": "Compound DAI"
        },
        {
          "id": "5VP4t7LvSkOhOmDUClHCZQ",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x64c666e0e8dead91bf07330df2c31ff64ebbaf23",
          "description": "Compound DAI Helper"
        },
        {
          "id": "5O2nWjFsl0v0mh6sttjCBn",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x87581d026eb25269e3ebb61a47025892c6a1e79c",
          "description": "Compound USDC"
        },
        {
          "id": "2Y4XJwM6dGMiINb5mzYPrz",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x05908a050c81f51c35a108ce5a3edf52a92846de",
          "description": "Compound USDC Helper"
        },
        {
          "id": "3pO6PVN6mSXNcd6x1sRwCE",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xf619f9c3f86a4a7242343711474afd4997bc4fa5",
          "description": "Compound USDT"
        },
        {
          "id": "1prQl1yVwXgKhOeqjkImHu",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xc83972ea63c6caaf681b240edf96f616651b8252",
          "description": "Compound USDT Helper"
        },
        {
          "id": "40bW4qXbuIFgzWQZcMVY0L",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x0b03Df7Ba9781BD84Da7E15753552FB30BE6C029",
          "description": "Convex DAI"
        },
        {
          "id": "2KPnQPd7UvUSZbr3AhfdDl",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x27571facde87ced95cfa0475cfad337d4c8e620a",
          "description": "Convex DAI Helper"
        },
        {
          "id": "66Q8skGm4ebfqCZXJzGquv",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x2d200f1fAF6d8BaA7011EA92d9617d44D0650eB7",
          "description": "Convex USDC"
        },
        {
          "id": "4O47Z2bqbA9OJ9pmAiSvEC",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x63aa126ae3e83d35c17134b61a5d035cc636992f",
          "description": "Convex USDC Helper"
        },
        {
          "id": "ovfjz1slwCrtBcFCImdR0",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x4C444d18aF43F4d43B0A2396567F7ca69aeB46c7",
          "description": "Convex USDT"
        },
        {
          "id": "62g44p7MLSE0rjjwmuRVmd",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x1a17451f2cd78ac233826c2f8f4be674c831e9c4",
          "description": "Convex USDT Helper"
        },
        {
          "id": "6Us0WIEwaEUAclVeuRkmVV",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xae0f58c408514e60cc6d844cc80965aeab4bf6ff",
          "description": "Curve DAI"
        },
        {
          "id": "7xddXi1apDMkwsdhnqgf28",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xc7c5652874de32a5ce305bd9195b7c665281648e",
          "description": "Curve USDC"
        },
        {
          "id": "4N9j1bcnZrNaiQzHK17zWm",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xd9174b81f540272e2441a6237c0d61da32b4a73d",
          "description": "Curve USDT"
        },
        {
          "id": "1y9eijC23vEV4qngtCB2h8",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x9e177bb9f107bffdc0f9b512f969f6c071d57d76",
          "description": "Harvest DAI"
        },
        {
          "id": "2gneE3t3VQlD3pycFwX3bJ",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x9e9d4d747a3dfe3d135077cfa1baf98599cf5b80",
          "description": "Harvest USDC"
        },
        {
          "id": "6AZ6ieUrFYui8OKiZZi2Gj",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xe12286c9b881ea429cfd9e6ca0fb666c819981b0",
          "description": "Harvest USDT"
        },
        {
          "id": "12tbx2NOFBANjGY3H5BK8l",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xe78e22ab9204e36948eff81facd92a7231f40210",
          "description": "Idle DAI"
        },
        {
          "id": "7DRpRMvFegrLfwgZjNXKEU",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x335bd363fe258f0af80a2b664c1c9b45ab6fce9d",
          "description": "Idle USDC"
        },
        {
          "id": "62GUIogGuMrDQ0w0E5HVPi",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x94df827cadc7101452a24161d6bb2f6da2c6f698",
          "description": "Idle USDT"
        },
        {
          "id": "1jlsXlrmz7JKqS4EQzUAwW",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x767f653905b82fd88369b8f24bf9ff71e6ba2a7c",
          "description": "Yearn DAI"
        },
        {
          "id": "2wTaC63lHEUxq07ydyLtzZ",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x7957901a8941fad236483eaa0332880c2f507654",
          "description": "Yearn USDC"
        },
        {
          "id": "6eFKO0JUAsDq92R2G9Xy7w",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x96cd104e480bebbfa5d07529e5ac42216e2eeeba",
          "description": "Yearn USDT"
        },
        {
          "id": "44izXjFdmQsq77wk6OXn7f",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xdd4051c3571c143b989c3227e8eb50983974835c",
          "description": "Controller"
        },
        {
          "id": "CFYsRPN7GsnuMn66i09xT",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xc815e5241be7f695fe9ecb7255154b2950c55fc1",
          "description": "Risk Provider Registry"
        },
        {
          "id": "2CqtNAJ41NUX5xIC6RkJzh",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xe140bb5f424a53e0687bfc10f6845a5672d7e242",
          "description": "Master Spool"
        },
        {
          "id": "6CHR6AuD7Y3Z9u0h4hmsaI",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x4788c0a425abb27721e05a39c417b69cba6b065a",
          "description": "Fast Withdraw"
        },
        {
          "id": "7B3CiKGYDBuVMUNbRVQL9",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x3d3d0a7876d18770a21a5ea05fef211eba808e72",
          "description": "Fee Handler"
        },
        {
          "id": "5phbKSKzKQ3qdj2EjVF1WH",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x22bB10A016B1eb7bFFD304862051aA3fCe723F74",
          "description": "Reward Distributor"
        },
        {
          "id": "42vy5etGHF3pywXOr6lZpr",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x0ecbd2c2b5d35416a7c5578d3370b51f88214420",
          "description": "Strategy Registry"
        },
        {
          "id": "7yyT3fB8jMp4Ve3UiCjc7g",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xc3160C5cc63B6116DD182faA8393d3AD9313e213",
          "description": "SPOOL Staking"
        },
        {
          "id": "zSE3LhvX8YXayJAdqGXLL",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xB8d5Fc11F8E1Af30578dB9F77174A1DC171a7D28",
          "description": "voSPOOL Rewards"
        },
        {
          "id": "51WhqVscOTqB0pMMNmfcdx",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xaF56D16a7fe479F2fcD48FF567fF589CB2d2a0E9",
          "description": "voSPOOL Token"
        }
      ],
      "impacts": [
        {
          "id": "4hD3lR1Qe8YprPOA5Q0e51",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1Hm3BmrGkSippTgwlgrhJY",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "v1dJO7tYM2X7StqHO91dp",
          "title": "Protocol Insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "59iA6dtOLkacSbZKtHFU5W",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "7KSn3OKDxkIHokqLeWpjmJ",
          "title": "Miner-extractable value (MEV)",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "563Z9oW7AQx8XeESRVNdmE",
          "title": "Permanent freezing of unclaimed yield (unless emergency withdraw of a strategy was performed, in which case we do not claim the protocol rewards)",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "57nohf5Vmd3KxthxBxolFL",
          "title": "Temporary freezing of funds for at least 90 days",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "ENACa8GWl6EkRIcU0o2Oa",
          "title": "Smart contract unable to operate due to lack of token funds (except the RewardDistributor contract where the rewards have to be transferred manually)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "7ysey3qTU4pkIWVpoBoHMD",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "4XhQ7G2Dizee5xlM4PpxYN",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "1El1v2pGNTggoLt0qQ5n3S",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3ruMKLdEsLmmam4lVyQwU8",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5LNaGRaHAm6OryntkARGQj",
          "title": "Smart contract fails to deliver promised returns, but doesn’t lose value",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "Spool is decentralized middleware that allows anyone to create an automated, diversified, and risk-reward-optimized yield-farming strategy.\n\nIn more comprehensible terms, Spool is a \"__custom vault creator__\". Spool allows a user to pick their favorites from a list of supported protocols and create a diversified portfolio from them based on their individual risk appetite. This vault/portfolio is accessible through a single deposit address.\n\nAfter depositing, Spool will automatically recognize changing yields (and potential risks) via oracles and off-chain risk models and rebalance between the chosen protocols as needed. \n\nFor more information about Spool, please visit [https://www.spool.fi/](https://www.spool.fi/).\n\n__This bug bounty program is focused on their smart contracts and on preventing__\n\n  - Loss of user funds \n  - Loss of treasury funds \n  - Permanent freezing of funds\n  - Theft of principal funds\n  - Theft of unclaimed yield funds ",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\n\nCritical and High bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. In addition, all bug reports must come with a suggestion for a fix in order to be considered for a reward. \n\nRewards for critical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of __USD 50 000__ and a maximum reward of __USD 1 500 000__ for Critical smart contract bug reports.\n\nRewards for High severity smart contract vulnerabilities will be further capped at up to 100% of the funds affected. However, there is a minimum reward of __USD 20 000__ and a maximum reward of __USD 50 000__ for High severity smart contract bug reports.\n\nIssues previously highlighted in the following audit reports are considered as out of scope: \n\n  - Quantstamp Spool Core Audit:\n[https://www.spool.fi/documents/QuantstampAudit.pdf \n](https://www.spool.fi/documents/QuantstampAudit.pdf)  \n  - Peckshield Spool Core Audit:         [https://github.com/peckshield/publications/blob/master/audit_reports/PeckShield-Audit-Report-Spool-v1.0.pdf](https://github.com/peckshield/publications/blob/master/audit_reports/PeckShield-Audit-Report-Spool-v1.0.pdf)\n  - Peckshield Spool Voting and Staking Audit: [https://drive.google.com/file/d/1eNmeiGxFDgyV5XtQhl3sny4ichnRdBPa/view?usp=sharing](https://drive.google.com/file/d/1eNmeiGxFDgyV5XtQhl3sny4ichnRdBPa/view?usp=sharing)\n  - Zokyo Spool Core Audit:   [https://drive.google.com/file/d/1NNm2RT9DTfZs6G4lG2UU2LmKzUi_tPlq/view?usp=sharing](https://drive.google.com/file/d/1NNm2RT9DTfZs6G4lG2UU2LmKzUi_tPlq/view?usp=sharing)\n  - Zokyo Spool Vesting Audit:  \n[https://drive.google.com/file/d/1X1DR9un-hglsNV2eCON2m0V2mPlQMEWX/view?usp=sharing](https://drive.google.com/file/d/1X1DR9un-hglsNV2eCON2m0V2mPlQMEWX/view?usp=sharing)\n\nIn addition, any vulnerabilities that involve whitelisted roles abusing their power to gain profit or hurt the system are considered out of scope of this program.\n\nSpool requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed is a national ID or passport photo, along with a bank statement or utility bill issued within the past 3 months. \n\nPayouts are handled by the __Spool__ team directly and are denominated in USD. However, payouts are done in __DAI__.\n\nIf an invoice from a non-DAO establishment is required, the invoice amount (payout) will come with a cut of currently 5% due to regulation and transfer pricing rules.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "For proxy contracts, only the current implementation and any further updates to the implementation contracts are considered in scope. \n\nAll smart contracts of Spool can be found at [https://github.com/SpoolFi/](https://github.com/SpoolFi/). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\nIf an impact can be caused to any other asset managed by Spool that isn’t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project.",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Yield Aggregator"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "JavaScript",
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $1,500,000"
          },
          {
            "level": "High",
            "payout": "Up to USD $50,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Spool is decentralized middleware that allows anyone to create an automated, diversified, and risk-reward-optimized yield-farming strategy.\"), mdx(\"p\", null, \"In more comprehensible terms, Spool is a \\\"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"custom vault creator\"), \"\\\". Spool allows a user to pick their favorites from a list of supported protocols and create a diversified portfolio from them based on their individual risk appetite. This vault/portfolio is accessible through a single deposit address.\"), mdx(\"p\", null, \"After depositing, Spool will automatically recognize changing yields (and potential risks) via oracles and off-chain risk models and rebalance between the chosen protocols as needed. \"), mdx(\"p\", null, \"For more information about Spool, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.spool.fi/\"\n  }, \"https://www.spool.fi/\"), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"This bug bounty program is focused on their smart contracts and on preventing\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of user funds \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of treasury funds \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of principal funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of unclaimed yield funds \")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Spool is decentralized middleware that allows anyone to create an automated, diversified, and risk-reward-optimized yield-farming strategy.</p><p>In more comprehensible terms, Spool is a &quot;<strong>custom vault creator</strong>&quot;. Spool allows a user to pick their favorites from a list of supported protocols and create a diversified portfolio from them based on their individual risk appetite. This vault/portfolio is accessible through a single deposit address.</p><p>After depositing, Spool will automatically recognize changing yields (and potential risks) via oracles and off-chain risk models and rebalance between the chosen protocols as needed. </p><p>For more information about Spool, please visit <a href=\"https://www.spool.fi/\">https://www.spool.fi/</a>.</p><p><strong>This bug bounty program is focused on their smart contracts and on preventing</strong></p><ul><li>Loss of user funds </li><li>Loss of treasury funds </li><li>Permanent freezing of funds</li><li>Theft of principal funds</li><li>Theft of unclaimed yield funds </li></ul>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\"), mdx(\"p\", null, \"Critical and High bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. In addition, all bug reports must come with a suggestion for a fix in order to be considered for a reward. \"), mdx(\"p\", null, \"Rewards for critical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 50 000\"), \" and a maximum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 1 500 000\"), \" for Critical smart contract bug reports.\"), mdx(\"p\", null, \"Rewards for High severity smart contract vulnerabilities will be further capped at up to 100% of the funds affected. However, there is a minimum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 20 000\"), \" and a maximum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 50 000\"), \" for High severity smart contract bug reports.\"), mdx(\"p\", null, \"Issues previously highlighted in the following audit reports are considered as out of scope: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Quantstamp Spool Core Audit:\\n\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.spool.fi/documents/QuantstampAudit.pdf\"\n  }, \"https://www.spool.fi/documents/QuantstampAudit.pdf\\n\"), \"  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Peckshield Spool Core Audit:         \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/peckshield/publications/blob/master/audit_reports/PeckShield-Audit-Report-Spool-v1.0.pdf\"\n  }, \"https://github.com/peckshield/publications/blob/master/audit_reports/PeckShield-Audit-Report-Spool-v1.0.pdf\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Peckshield Spool Voting and Staking Audit: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://drive.google.com/file/d/1eNmeiGxFDgyV5XtQhl3sny4ichnRdBPa/view?usp=sharing\"\n  }, \"https://drive.google.com/file/d/1eNmeiGxFDgyV5XtQhl3sny4ichnRdBPa/view?usp=sharing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Zokyo Spool Core Audit:   \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://drive.google.com/file/d/1NNm2RT9DTfZs6G4lG2UU2LmKzUi_tPlq/view?usp=sharing\"\n  }, \"https://drive.google.com/file/d/1NNm2RT9DTfZs6G4lG2UU2LmKzUi_tPlq/view?usp=sharing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Zokyo Spool Vesting Audit:\", mdx(\"br\", {\n    parentName: \"li\"\n  }), mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://drive.google.com/file/d/1X1DR9un-hglsNV2eCON2m0V2mPlQMEWX/view?usp=sharing\"\n  }, \"https://drive.google.com/file/d/1X1DR9un-hglsNV2eCON2m0V2mPlQMEWX/view?usp=sharing\"))), mdx(\"p\", null, \"In addition, any vulnerabilities that involve whitelisted roles abusing their power to gain profit or hurt the system are considered out of scope of this program.\"), mdx(\"p\", null, \"Spool requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed is a national ID or passport photo, along with a bank statement or utility bill issued within the past 3 months. \"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Spool\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"DAI\"), \".\"), mdx(\"p\", null, \"If an invoice from a non-DAO establishment is required, the invoice amount (payout) will come with a cut of currently 5% due to regulation and transfer pricing rules.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.</p><p>Critical and High bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. In addition, all bug reports must come with a suggestion for a fix in order to be considered for a reward. </p><p>Rewards for critical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of <strong>USD 50 000</strong> and a maximum reward of <strong>USD 1 500 000</strong> for Critical smart contract bug reports.</p><p>Rewards for High severity smart contract vulnerabilities will be further capped at up to 100% of the funds affected. However, there is a minimum reward of <strong>USD 20 000</strong> and a maximum reward of <strong>USD 50 000</strong> for High severity smart contract bug reports.</p><p>Issues previously highlighted in the following audit reports are considered as out of scope: </p><ul><li>Quantstamp Spool Core Audit:\n<a href=\"https://www.spool.fi/documents/QuantstampAudit.pdf\">https://www.spool.fi/documents/QuantstampAudit.pdf\n</a>  </li><li>Peckshield Spool Core Audit:         <a href=\"https://github.com/peckshield/publications/blob/master/audit_reports/PeckShield-Audit-Report-Spool-v1.0.pdf\">https://github.com/peckshield/publications/blob/master/audit_reports/PeckShield-Audit-Report-Spool-v1.0.pdf</a></li><li>Peckshield Spool Voting and Staking Audit: <a href=\"https://drive.google.com/file/d/1eNmeiGxFDgyV5XtQhl3sny4ichnRdBPa/view?usp=sharing\">https://drive.google.com/file/d/1eNmeiGxFDgyV5XtQhl3sny4ichnRdBPa/view?usp=sharing</a></li><li>Zokyo Spool Core Audit:   <a href=\"https://drive.google.com/file/d/1NNm2RT9DTfZs6G4lG2UU2LmKzUi_tPlq/view?usp=sharing\">https://drive.google.com/file/d/1NNm2RT9DTfZs6G4lG2UU2LmKzUi_tPlq/view?usp=sharing</a></li><li>Zokyo Spool Vesting Audit:<br/><a href=\"https://drive.google.com/file/d/1X1DR9un-hglsNV2eCON2m0V2mPlQMEWX/view?usp=sharing\">https://drive.google.com/file/d/1X1DR9un-hglsNV2eCON2m0V2mPlQMEWX/view?usp=sharing</a></li></ul><p>In addition, any vulnerabilities that involve whitelisted roles abusing their power to gain profit or hurt the system are considered out of scope of this program.</p><p>Spool requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed is a national ID or passport photo, along with a bank statement or utility bill issued within the past 3 months. </p><p>Payouts are handled by the <strong>Spool</strong> team directly and are denominated in USD. However, payouts are done in <strong>DAI</strong>.</p><p>If an invoice from a non-DAO establishment is required, the invoice amount (payout) will come with a cut of currently 5% due to regulation and transfer pricing rules.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"For proxy contracts, only the current implementation and any further updates to the implementation contracts are considered in scope. \"), mdx(\"p\", null, \"All smart contracts of Spool can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/SpoolFi/\"\n  }, \"https://github.com/SpoolFi/\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\"), mdx(\"p\", null, \"If an impact can be caused to any other asset managed by Spool that isn\\u2019t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>For proxy contracts, only the current implementation and any further updates to the implementation contracts are considered in scope. </p><p>All smart contracts of Spool can be found at <a href=\"https://github.com/SpoolFi/\">https://github.com/SpoolFi/</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.</p><p>If an impact can be caused to any other asset managed by Spool that isn’t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "wormhole",
      "slug": "wormhole",
      "project": "Wormhole",
      "maxBounty": 2500000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6sgdaPC0JYg8aGLp02UuzY/a322205dd7e60874ea83539496257e25/Wormhole_Logo-newest__1_.png",
      "launchDate": "2022-02-11T09:00-06:00",
      "updatedDate": "2023-10-19T08:53:28.834Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "blockchain_dlt",
          "level": "critical",
          "payout": "Up to $2,500,000 USDC",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "high",
          "payout": "Up to $100,000 USDC",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "medium",
          "payout": "Up to $10,000 USDC",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "low",
          "payout": "Up to $2,000 USDC",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to $2,500,000 USDC",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "Up to $100,000 USDC",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "Up to $10,000 USDC",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "Up to $2,000 USDC",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "5xJ73ZyXtKQQPVRGkOHg2L",
          "type": "blockchain_dlt",
          "url": "https://github.com/wormhole-foundation/wormhole/tree/main/node",
          "description": "Guardian Nodes",
          "isPrimacyOfImpact": null
        },
        {
          "id": "1yZpRPgmxpIsD7R94LwfhK",
          "type": "smart_contract",
          "url": "https://docs.wormhole.com/wormhole/explore-wormhole/core-contracts",
          "description": "Mainnet",
          "isPrimacyOfImpact": null
        },
        {
          "id": "15lZskZNdRHr2BRkLyVg16",
          "type": "smart_contract",
          "url": "https://github.com/wormhole-foundation/wormhole/tree/main/ethereum",
          "description": "Ethereum",
          "isPrimacyOfImpact": null
        },
        {
          "id": "6ohex8lqEFUM6FnLN1CopP",
          "type": "smart_contract",
          "url": "https://github.com/wormhole-foundation/wormhole/tree/main/solana",
          "description": "Solana",
          "isPrimacyOfImpact": null
        },
        {
          "id": "5AGPz0Gqdm91a1fmCE1158",
          "type": "blockchain_dlt",
          "url": "https://github.com/wormhole-foundation/wormhole/tree/main/terra",
          "description": "Terra",
          "isPrimacyOfImpact": null
        },
        {
          "id": "1ljL4kZzXP4cQMegkehoqN",
          "type": "smart_contract",
          "url": "https://github.com/wormhole-foundation/wormhole/tree/main/cosmwasm",
          "description": " CosmWasm",
          "isPrimacyOfImpact": null
        },
        {
          "id": "21nGpPqgTGUtrm8hJuxB9g",
          "type": "smart_contract",
          "url": "https://github.com/wormhole-foundation/wormhole/tree/main/algorand",
          "description": "Algorand",
          "isPrimacyOfImpact": null
        },
        {
          "id": "17oT1ffcaJcOyrUlPSwVO4",
          "type": "smart_contract",
          "url": "https://github.com/wormhole-foundation/wormhole/tree/aptos/integration",
          "description": "Aptos",
          "isPrimacyOfImpact": null
        },
        {
          "id": "5Vbs1weSp9OYGDGVzMvrQ5",
          "type": "smart_contract",
          "url": "https://github.com/wormhole-foundation/wormhole/tree/main/sui",
          "description": "Sui",
          "isPrimacyOfImpact": null
        },
        {
          "id": "2BUsPc3whgrJXqRawcO95I",
          "type": "smart_contract",
          "url": "https://github.com/wormhole-foundation/wormhole-circle-integration",
          "description": "EVM, excluding the Circle Bridge",
          "isPrimacyOfImpact": null
        }
      ],
      "impacts": [
        {
          "id": "2bKiXE2wFH8ghOIyU5ovlO",
          "title": "Forging of wormhole messages (i.e. VAAs) or circumventing VAA verification logic in the smart contracts.",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "29Yzk0oNOeJ6Z2m1kAk4aN",
          "title": "Exploits resulting in the locking, loss, or theft of user funds from the Portal Token Bridge",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "5VeCGZA317vhqqgnC7wJW6",
          "title": "Permanent Denial of Service attacks (excluding volumetric attacks)",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "29WxJvoq5u202sOlyoOCw4",
          "title": "Determinism bugs that could lead to inconsistent bridge states",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "42rH5S66ejdhb0yVU1X9xg",
          "title": "Governance manipulation",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "7BbMmu9Qopep15SJzDcwGt",
          "title": "Exposure of production private keys and/or PII",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "WijRGdkMskWztxzkh0QfP",
          "title": "Vulnerabilities in the node software resulting in invalid behavior",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "2RyLU9jbepqIkPT8yGLlQ8",
          "title": "Remote code execution",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "6003zBMeaYFkpNoF6OWv19",
          "title": "Any other vulnerabilities that lead to the impacts described in Tier 1-3",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "5awvlDZO1CgwztNdlqNOa6",
          "title": "Forging of wormhole messages (i.e. VAAs) or circumventing VAA verification logic in the smart contracts",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "36LK0eC7IzkwDjo28QLMcg",
          "title": "Exploits resulting in the locking, loss, or theft of user funds from the Portal Token Bridge",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "673aYdLnQMazupjTcSavJv",
          "title": "Permanent Denial of Service attacks (excluding volumetric attacks)",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4uA8lP3jsBqjj1eIZbiaq5",
          "title": "Determinism bugs that could lead to inconsistent bridge states",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5Ejs87vAAN2aXF1VjQrEf7",
          "title": "Governance manipulation",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3qZwVwEdWbFNBLHavZHmTi",
          "title": "Exposure of production private keys and/or PII",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4CycBDne6MrmVpsgzot1AQ",
          "title": "Vulnerabilities in the node software resulting in invalid behavior",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1EjrSdDTOImRVct9SjPdcb",
          "title": "Remote code execution",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "is4cqZeAfpMqgazg980UC",
          "title": "Any other vulnerabilities that lead to the impacts described in Tier 1-3",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1psnSlcTq9VnzL0J0RoJUp",
          "title": "Bugs that allow forging of wormhole messages (i.e. VAAs) or circumventing VAA verification logic in the smart contracts but are outside of the “critical” category",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "3U08LAt8ZKzn9COd6Ig3Ph",
          "title": "Bugs that are very capital-intensive to carry out but could be critical",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "41J4fjUvVMgE00FJqGtEjB",
          "title": "Attacks that would be critical if a minority of Guardians was malicious.",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "k5MbwlYSX24EzU2maPeEG",
          "title": "Unrestricted bypass of the Governor module: The Governor module (https://github.com/wormhole-foundation/wormhole/tree/dev.v2/node/pkg/governor)",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "7GTi46YvXhsptZqjYdH33I",
          "title": "Bugs that allow forging of wormhole messages (i.e. VAAs) or circumventing VAA verification logic in the smart contracts but are outside of the “critical” category",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "5g9YYaox5AMAaKJkkM4tzt",
          "title": "Bugs that are very capital-intensive to carry out but could be critical",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "3XRLf1HkRZZDDiwth98qaQ",
          "title": "Attacks that would be critical if a minority of Guardians was malicious",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "unPSmacJpJ2IjJL0E5oR6",
          "title": "Unrestricted bypass of the Governor module: The Governor module (https://github.com/wormhole-foundation/wormhole/tree/dev.v2/node/pkg/governor)",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "Xw1vFHPKW4mt5T6IqH08m",
          "title": "Unrestricted bypass of the Integrity Checkers (https://github.com/wormhole-foundation/wormhole/blob/main/whitepapers/0010_integrity_checkers.md) or Accountant",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "1yaWEztzcOvaU6aLoc03gP",
          "title": "Unrestricted bypass of the Integrity Checkers (https://github.com/wormhole-foundation/wormhole/blob/main/whitepapers/0010_integrity_checkers.md) or Accountant",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "ZWnr50gMWGw8kuAETEbgq",
          "title": "Denial of Service attacks against the Guardian network (excluding volumetric attacks) resulting in an extended but not permanent total network shutdown",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "gbAjuFMB89P6clgoflqQM",
          "title": "Exploit chains requiring user interaction",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "3KQPgGTKdGlmb0B8Rcv7bl",
          "title": "Compromising a single guardian node",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "4XOn0w310fortAUvxiNQxI",
          "title": "Cryptographic implementation flaws and flaws in random number generation with limited impact",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "5ZXfvtqWuT9PM5EmCPmx5V",
          "title": "Bugs that allow forging signed messages from a minority of Guardians",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "73dvcrqfzuwhSIw0C55iJF",
          "title": "Denial of Service attacks against the Guardian network (excluding volumetric attacks) resulting in an extended but not permanent total network shutdown",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "25kdkcQ1HCq1jkeQKiwZ7I",
          "title": "Exploit chains requiring user interaction",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "6p7w1KvS1fBcSgGEAtDZBf",
          "title": "Compromising a single guardian node",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "56EzVL6OSZVgJ23vNlx1f6",
          "title": "Cryptographic implementation flaws and flaws in random number generation with limited impact",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5vAWkdzahEdeRyJh4ypBBh",
          "title": "Bugs that allow forging signed messages from a minority of Guardians",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "6ZMA7GT9SQQhwPCHujXoAi",
          "title": "Bugs that are unlikely to occur but would have a large impact if so, e.g. race conditions",
          "type": "blockchain_dlt",
          "severity": "low"
        },
        {
          "id": "5WBZkFnNDHe0ZAEn5GtKFf",
          "title": "Lack of defense-in-depth (must send PR with improvements and get it merged)",
          "type": "blockchain_dlt",
          "severity": "low"
        },
        {
          "id": "7CaHzwzefunoRahgYQoqVq",
          "title": "Bugs that are likely to occur in future stages of development but do not manifest themselves yet",
          "type": "blockchain_dlt",
          "severity": "low"
        },
        {
          "id": "36nQtzMLPYcHgZ7HEhoHSv",
          "title": "Denial of Service attacks against the Guardian network (excluding volumetric attacks) resulting in an extended degradation of performance",
          "type": "blockchain_dlt",
          "severity": "low"
        },
        {
          "id": "7MHJXLTjv27YlVYL3WHDaX",
          "title": "Bugs that are unlikely to occur but would have a large impact if so, e.g. race conditions",
          "type": "smart_contract",
          "severity": "low"
        },
        {
          "id": "DrG16b6ib2lytWulxF5t7",
          "title": "Lack of defense-in-depth (must send PR with improvements and get it merged)",
          "type": "smart_contract",
          "severity": "low"
        },
        {
          "id": "50X5cHTcS1w3GuOHXDjcak",
          "title": "Bugs that are likely to occur in future stages of development but do not manifest themselves yet",
          "type": "smart_contract",
          "severity": "low"
        },
        {
          "id": "6MSZrM6a9OjsHyt4CYiZnR",
          "title": "Denial of Service attacks against the Guardian network (excluding volumetric attacks) resulting in an extended degradation of performance",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "Wormhole is a generic cross-chain messaging protocol that allows smart contracts on various blockchains to communicate with each other. Messages are routed from chain to chain by a decentralised group of guardian nodes who sign attestations of on-chain state.\n\nFor more information about Wormhole, please visit [https://wormhole.com/](https://wormhole.com/).\n\nThis bug bounty program is focused on the prevention of negative impacts to Wormhole and the Portal Token Bridge, which currently covers their smart contracts, guardian nodes, and Wormhole integrations with blockchains.\n\n__Submission Requirements__\nAll reports must come with sufficient explanation and data to easily reproduce the bug, e.g. through a proof-of-concept code.\n\nFor a bug report to be paid, we do require the bug reporter to comply with our KYC requirements.\n\nThis includes the following:\n  - Wallet address where you’ll receive payment\n  - Proof of address (either a redacted bank statement with your address or a recent utility bill with your name, address, and issuer of the bill)\n  - If you are a U.S. person, please send us a filled-out and signed W-9 (https://www.irs.gov/pub/irs-pdf/fw9.pdf)\n  - If you are not a U.S. person, please send us a filled-out and signed W-8BEN (https://www.irs.gov/pub/irs-pdf/fw8ben.pdf)\n  - Copy of your passport will be required.\n",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "__Tier 1:__ Ability to Extract the complete TVL of all chains: Up to $2,500,000 USDC\n__Tier 2:__ Ability to Extract the complete TVL of a single chain: Up to $1,000,000 USDC\n__Tier 3:__ Ability to Brick the complete TVL of one or many chains: Up to $500,000 USDC\n\nAll rewards are decided on a case-by-case basis, taking into account the exploitability of the bug, the impact it causes, and the likelihood of the vulnerability presenting itself if it is nondeterministic or some of the conditions are not present at the time. The rewards presented in the payout structure above are the maximum rewards and there are no minimum rewards.\n\nRewards for critical vulnerabilities are further capped at __10%__ of extractable value during a 24h period. Rewards for vulnerabilities resulting in the indefinite locking of funds are further capped at __1%__ of destroyable value.\n\nValue is calculated based on the current market value and available liquidity for widely-used tokens in the Portal Token Bridge, e.g. ETH and SOL. \n\nIn cases where the report achieves more than one of the above objectives, rewards will be tiered to the higher of the two objectives and will not be aggregated (eg. if you have the ability to extract and brick a complete TVL for a chain, you will be awarded a bounty as if you were able to only extract the complete TVL for that chain).\n\nRewards for bugs in dependencies and third party code are at the discretion of the Wormhole team and will be based on the impact demonstrated on Wormhole. If the dependency has its own bug bounty program, your reward for submitting this vulnerability to Wormhole will be lowered by the expected payout of that other program. If the vulnerability is in a connected blockchain itself rather than the Wormhole code, the locked and wrapped assets on that chain are not included in the impact calculation.\n\nWormhole Foundation will maintain full discretion on the payouts for vulnerabilities. We do encourage bug reporters to submit issues outside of the above-mentioned payout structure, though we want to be clear that we’ll exercise discretion on a case-by-case basis -- whether an issue warrants a payout and what that ultimate payout would be.\n",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Network denial of service on Guardians is not eligible for bug bounty rewards\n  - Wormhole is an open source project with open development. We welcome feedback and PRs on features that are in development. Code that has not been deployed is generally out-of-scope.\n  - Reports regarding bugs that the Wormhole project was previously aware of are not eligible for a reward\n  - In scope assets with \"pre-release\" tag are exempt from the above mentioned deployed requirement and are aimed at allowing early access for white-hat community contribution.  Once the chain is deployed in mainnet, the new scope is whatever is deployed on chain, which is often what is present in dev.v2 branch.  Rewards for “pre-release” candidates will be eligible within the same reward structure as mainnet contracts.\n\nThe following person(s) are ineligible to receive bug bounty payout rewards: Staff, Auditors, Contractors, persons in possession of privileged information, and all associated parties.\n\n__Prohibited Activities__\n  - Any testing with mainnet or public testnets; all testing should be done on private nets\n  - Public disclosure of a vulnerability before an embargo has been lifted\n  - Any testing with third party smart contracts or infrastructure and websites\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any denial of service attacks\n  - Violating the privacy of any organization or individual\n  - Automated testing of services that generates significant amounts of traffic\n  - Any activity that violates any law or disrupts or compromises any data or property that is not your own.\n",
      "assetsBodyV2": "All smart contracts of Wormhole can be found at [https://github.com/wormhole-foundation](https://github.com/wormhole-foundation). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n([https://github.com/wormhole-foundation/wormhole/tree/dev.v2/node/pkg/governor](https://github.com/wormhole-foundation/wormhole/tree/dev.v2/node/pkg/governor)) is designed to limit the value that can be transferred out of one chain over time. Under the threat model of a compromised chain, the ability to transfer all tokens in unlimited amounts to any target chain would constitute a \"high\" severity vulnerability.\n",
      "impactsBody": "The Governor module ([https://github.com/wormhole-foundation/wormhole/tree/dev.v2/node/pkg/governor](https://github.com/wormhole-foundation/wormhole/tree/dev.v2/node/pkg/governor)) is designed to limit the value that can be transferred out of one chain over time. Assuming a smart contract compromise on one chain, the ability to transfer all tokens in unlimited amounts to any target chain would constitute a \"high\" severity vulnerability.\n\n([https://github.com/wormhole-foundation/wormhole/blob/main/whitepapers/0011_accountant.md](https://github.com/wormhole-foundation/wormhole/blob/main/whitepapers/0011_accountant.md)) module under the threat model of a fully compromised chain.",
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Crosschain Liquidity",
          "DEX",
          "Lending"
        ],
        "projectType": [
          "Blockchain",
          "NFT"
        ],
        "ecosystem": [
          "ETH",
          "Fantom",
          "Polygon",
          "Solana",
          "Terra"
        ],
        "programType": [
          "Smart Contract",
          "Blockchain/DLT"
        ],
        "language": [
          "Rust",
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Blockchain/DLT"
        ],
        "blockchain_rewards": [
          {
            "level": "Critical",
            "payout": "Up to $2,500,000 USDC"
          },
          {
            "level": "High",
            "payout": "Up to $100,000 USDC"
          },
          {
            "level": "Medium",
            "payout": "Up to $10,000 USDC"
          },
          {
            "level": "Low",
            "payout": "Up to $2,000 USDC"
          }
        ],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to $2,500,000 USDC"
          },
          {
            "level": "High",
            "payout": "Up to $100,000 USDC"
          },
          {
            "level": "Medium",
            "payout": "Up to $10,000 USDC"
          },
          {
            "level": "Low",
            "payout": "Up to $2,000 USDC"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Wormhole is a generic cross-chain messaging protocol that allows smart contracts on various blockchains to communicate with each other. Messages are routed from chain to chain by a decentralised group of guardian nodes who sign attestations of on-chain state.\"), mdx(\"p\", null, \"For more information about Wormhole, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://wormhole.com/\"\n  }, \"https://wormhole.com/\"), \".\"), mdx(\"p\", null, \"This bug bounty program is focused on the prevention of negative impacts to Wormhole and the Portal Token Bridge, which currently covers their smart contracts, guardian nodes, and Wormhole integrations with blockchains.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Submission Requirements\"), \"\\nAll reports must come with sufficient explanation and data to easily reproduce the bug, e.g. through a proof-of-concept code.\"), mdx(\"p\", null, \"For a bug report to be paid, we do require the bug reporter to comply with our KYC requirements.\"), mdx(\"p\", null, \"This includes the following:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wallet address where you\\u2019ll receive payment\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Proof of address (either a redacted bank statement with your address or a recent utility bill with your name, address, and issuer of the bill)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you are a U.S. person, please send us a filled-out and signed W-9 (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.irs.gov/pub/irs-pdf/fw9.pdf\"\n  }, \"https://www.irs.gov/pub/irs-pdf/fw9.pdf\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you are not a U.S. person, please send us a filled-out and signed W-8BEN (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.irs.gov/pub/irs-pdf/fw8ben.pdf\"\n  }, \"https://www.irs.gov/pub/irs-pdf/fw8ben.pdf\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Copy of your passport will be required.\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Wormhole is a generic cross-chain messaging protocol that allows smart contracts on various blockchains to communicate with each other. Messages are routed from chain to chain by a decentralised group of guardian nodes who sign attestations of on-chain state.</p><p>For more information about Wormhole, please visit <a href=\"https://wormhole.com/\">https://wormhole.com/</a>.</p><p>This bug bounty program is focused on the prevention of negative impacts to Wormhole and the Portal Token Bridge, which currently covers their smart contracts, guardian nodes, and Wormhole integrations with blockchains.</p><p><strong>Submission Requirements</strong>\nAll reports must come with sufficient explanation and data to easily reproduce the bug, e.g. through a proof-of-concept code.</p><p>For a bug report to be paid, we do require the bug reporter to comply with our KYC requirements.</p><p>This includes the following:</p><ul><li>Wallet address where you’ll receive payment</li><li>Proof of address (either a redacted bank statement with your address or a recent utility bill with your name, address, and issuer of the bill)</li><li>If you are a U.S. person, please send us a filled-out and signed W-9 (<a href=\"https://www.irs.gov/pub/irs-pdf/fw9.pdf\">https://www.irs.gov/pub/irs-pdf/fw9.pdf</a>)</li><li>If you are not a U.S. person, please send us a filled-out and signed W-8BEN (<a href=\"https://www.irs.gov/pub/irs-pdf/fw8ben.pdf\">https://www.irs.gov/pub/irs-pdf/fw8ben.pdf</a>)</li><li>Copy of your passport will be required.</li></ul>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Tier 1:\"), \" Ability to Extract the complete TVL of all chains: Up to $2,500,000 USDC\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Tier 2:\"), \" Ability to Extract the complete TVL of a single chain: Up to $1,000,000 USDC\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Tier 3:\"), \" Ability to Brick the complete TVL of one or many chains: Up to $500,000 USDC\"), mdx(\"p\", null, \"All rewards are decided on a case-by-case basis, taking into account the exploitability of the bug, the impact it causes, and the likelihood of the vulnerability presenting itself if it is nondeterministic or some of the conditions are not present at the time. The rewards presented in the payout structure above are the maximum rewards and there are no minimum rewards.\"), mdx(\"p\", null, \"Rewards for critical vulnerabilities are further capped at \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"10%\"), \" of extractable value during a 24h period. Rewards for vulnerabilities resulting in the indefinite locking of funds are further capped at \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"1%\"), \" of destroyable value.\"), mdx(\"p\", null, \"Value is calculated based on the current market value and available liquidity for widely-used tokens in the Portal Token Bridge, e.g. ETH and SOL. \"), mdx(\"p\", null, \"In cases where the report achieves more than one of the above objectives, rewards will be tiered to the higher of the two objectives and will not be aggregated (eg. if you have the ability to extract and brick a complete TVL for a chain, you will be awarded a bounty as if you were able to only extract the complete TVL for that chain).\"), mdx(\"p\", null, \"Rewards for bugs in dependencies and third party code are at the discretion of the Wormhole team and will be based on the impact demonstrated on Wormhole. If the dependency has its own bug bounty program, your reward for submitting this vulnerability to Wormhole will be lowered by the expected payout of that other program. If the vulnerability is in a connected blockchain itself rather than the Wormhole code, the locked and wrapped assets on that chain are not included in the impact calculation.\"), mdx(\"p\", null, \"Wormhole Foundation will maintain full discretion on the payouts for vulnerabilities. We do encourage bug reporters to submit issues outside of the above-mentioned payout structure, though we want to be clear that we\\u2019ll exercise discretion on a case-by-case basis -- whether an issue warrants a payout and what that ultimate payout would be.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p><strong>Tier 1:</strong> Ability to Extract the complete TVL of all chains: Up to $2,500,000 USDC\n<strong>Tier 2:</strong> Ability to Extract the complete TVL of a single chain: Up to $1,000,000 USDC\n<strong>Tier 3:</strong> Ability to Brick the complete TVL of one or many chains: Up to $500,000 USDC</p><p>All rewards are decided on a case-by-case basis, taking into account the exploitability of the bug, the impact it causes, and the likelihood of the vulnerability presenting itself if it is nondeterministic or some of the conditions are not present at the time. The rewards presented in the payout structure above are the maximum rewards and there are no minimum rewards.</p><p>Rewards for critical vulnerabilities are further capped at <strong>10%</strong> of extractable value during a 24h period. Rewards for vulnerabilities resulting in the indefinite locking of funds are further capped at <strong>1%</strong> of destroyable value.</p><p>Value is calculated based on the current market value and available liquidity for widely-used tokens in the Portal Token Bridge, e.g. ETH and SOL. </p><p>In cases where the report achieves more than one of the above objectives, rewards will be tiered to the higher of the two objectives and will not be aggregated (eg. if you have the ability to extract and brick a complete TVL for a chain, you will be awarded a bounty as if you were able to only extract the complete TVL for that chain).</p><p>Rewards for bugs in dependencies and third party code are at the discretion of the Wormhole team and will be based on the impact demonstrated on Wormhole. If the dependency has its own bug bounty program, your reward for submitting this vulnerability to Wormhole will be lowered by the expected payout of that other program. If the vulnerability is in a connected blockchain itself rather than the Wormhole code, the locked and wrapped assets on that chain are not included in the impact calculation.</p><p>Wormhole Foundation will maintain full discretion on the payouts for vulnerabilities. We do encourage bug reporters to submit issues outside of the above-mentioned payout structure, though we want to be clear that we’ll exercise discretion on a case-by-case basis -- whether an issue warrants a payout and what that ultimate payout would be.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Network denial of service on Guardians is not eligible for bug bounty rewards\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wormhole is an open source project with open development. We welcome feedback and PRs on features that are in development. Code that has not been deployed is generally out-of-scope.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reports regarding bugs that the Wormhole project was previously aware of are not eligible for a reward\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In scope assets with \\\"pre-release\\\" tag are exempt from the above mentioned deployed requirement and are aimed at allowing early access for white-hat community contribution.  Once the chain is deployed in mainnet, the new scope is whatever is deployed on chain, which is often what is present in dev.v2 branch.  Rewards for \\u201Cpre-release\\u201D candidates will be eligible within the same reward structure as mainnet contracts.\")), mdx(\"p\", null, \"The following person(s) are ineligible to receive bug bounty payout rewards: Staff, Auditors, Contractors, persons in possession of privileged information, and all associated parties.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Prohibited Activities\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnets; all testing should be done on private nets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of a vulnerability before an embargo has been lifted\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party smart contracts or infrastructure and websites\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Violating the privacy of any organization or individual\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any activity that violates any law or disrupts or compromises any data or property that is not your own.\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Network denial of service on Guardians is not eligible for bug bounty rewards</li><li>Wormhole is an open source project with open development. We welcome feedback and PRs on features that are in development. Code that has not been deployed is generally out-of-scope.</li><li>Reports regarding bugs that the Wormhole project was previously aware of are not eligible for a reward</li><li>In scope assets with &quot;pre-release&quot; tag are exempt from the above mentioned deployed requirement and are aimed at allowing early access for white-hat community contribution.  Once the chain is deployed in mainnet, the new scope is whatever is deployed on chain, which is often what is present in dev.v2 branch.  Rewards for “pre-release” candidates will be eligible within the same reward structure as mainnet contracts.</li></ul><p>The following person(s) are ineligible to receive bug bounty payout rewards: Staff, Auditors, Contractors, persons in possession of privileged information, and all associated parties.</p><p><strong>Prohibited Activities</strong></p><ul><li>Any testing with mainnet or public testnets; all testing should be done on private nets</li><li>Public disclosure of a vulnerability before an embargo has been lifted</li><li>Any testing with third party smart contracts or infrastructure and websites</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any denial of service attacks</li><li>Violating the privacy of any organization or individual</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Any activity that violates any law or disrupts or compromises any data or property that is not your own.</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of Wormhole can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/wormhole-foundation\"\n  }, \"https://github.com/wormhole-foundation\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\"), mdx(\"p\", null, \"(\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/wormhole-foundation/wormhole/tree/dev.v2/node/pkg/governor\"\n  }, \"https://github.com/wormhole-foundation/wormhole/tree/dev.v2/node/pkg/governor\"), \") is designed to limit the value that can be transferred out of one chain over time. Under the threat model of a compromised chain, the ability to transfer all tokens in unlimited amounts to any target chain would constitute a \\\"high\\\" severity vulnerability.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of Wormhole can be found at <a href=\"https://github.com/wormhole-foundation\">https://github.com/wormhole-foundation</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.</p><p>(<a href=\"https://github.com/wormhole-foundation/wormhole/tree/dev.v2/node/pkg/governor\">https://github.com/wormhole-foundation/wormhole/tree/dev.v2/node/pkg/governor</a>) is designed to limit the value that can be transferred out of one chain over time. Under the threat model of a compromised chain, the ability to transfer all tokens in unlimited amounts to any target chain would constitute a &quot;high&quot; severity vulnerability.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The Governor module (\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/wormhole-foundation/wormhole/tree/dev.v2/node/pkg/governor\"\n  }, \"https://github.com/wormhole-foundation/wormhole/tree/dev.v2/node/pkg/governor\"), \") is designed to limit the value that can be transferred out of one chain over time. Assuming a smart contract compromise on one chain, the ability to transfer all tokens in unlimited amounts to any target chain would constitute a \\\"high\\\" severity vulnerability.\"), mdx(\"p\", null, \"(\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/wormhole-foundation/wormhole/blob/main/whitepapers/0011_accountant.md\"\n  }, \"https://github.com/wormhole-foundation/wormhole/blob/main/whitepapers/0011_accountant.md\"), \") module under the threat model of a fully compromised chain.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The Governor module (<a href=\"https://github.com/wormhole-foundation/wormhole/tree/dev.v2/node/pkg/governor\">https://github.com/wormhole-foundation/wormhole/tree/dev.v2/node/pkg/governor</a>) is designed to limit the value that can be transferred out of one chain over time. Assuming a smart contract compromise on one chain, the ability to transfer all tokens in unlimited amounts to any target chain would constitute a &quot;high&quot; severity vulnerability.</p><p>(<a href=\"https://github.com/wormhole-foundation/wormhole/blob/main/whitepapers/0011_accountant.md\">https://github.com/wormhole-foundation/wormhole/blob/main/whitepapers/0011_accountant.md</a>) module under the threat model of a fully compromised chain.</p>",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "rai",
      "slug": "rai",
      "project": "Rai",
      "maxBounty": 100000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4DeaIbS9whSxx3zJehZqqL/cbb244a748772c62c3ecff36bdae4662/Reflexer_Logo.png",
      "launchDate": "2021-11-02T08:00-05:00",
      "updatedDate": "2023-01-02T22:09:55.791Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to USD $100,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $25,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $10,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $2,500",
          "pocRequired": false
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "d2qMXbVxYqMOdDYIBsn7A",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xcee6aa1ab47d0fb0f24f51a3072ec16e20f90fce",
          "description": "Accounting Engine"
        },
        {
          "id": "28oYyzH7lJ3hj3KMy0VLnm",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x9fc9ae5c87fd07368e87d1ea0970a6fc1e6dd6cb#code",
          "description": "(Increasing Discount) Collateral Auction House"
        },
        {
          "id": "kC0l2mb8gpQUE4IaEeREo",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x1896adbe708bf91158748b3f33738ba497a69e8f#code",
          "description": "Debt Auction House"
        },
        {
          "id": "45HZ8IDbYn8Bv0R7iwWMyV",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xee4cf96e5359d9619197fd82b6ef2a9eae7b91e1",
          "description": "Global Settlement"
        },
        {
          "id": "xZgIcwcL8Wi6r5NWwn5Tw",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x27efc6ffe79692e0521e7e27657cf228240a06c2",
          "description": "Liquidation Engine"
        },
        {
          "id": "40IeiY3Q9Zk16YcdiB4e2Z",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x4ed9c0dca0479bc64d8f4eb3007126d5791f7851",
          "description": "Oracle Relayer"
        },
        {
          "id": "4qx3K8D5sSfCMu7o0zqVZp",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xcc88a9d330da1133df3a7bd823b95e52511a6962",
          "description": "Safe Engine"
        },
        {
          "id": "5J7u7ShJDkfrhOxP0BIs82",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xeef4ea1a548417df1e7f0f6ab89494eed9e06b70",
          "description": "Surplus Auction House"
        },
        {
          "id": "3VZcgRhISjGVU60hwWpfY8",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xcdb05aeda142a1b0d6044c09c64e4226c1a281eb",
          "description": "Tax Collector"
        },
        {
          "id": "5FEqG4lbJGuFSdgh5uwQzr",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xb825e25856bd98b3f2faf2aeb6cb8742b38c4025",
          "description": "Chainlink Relayer"
        },
        {
          "id": "5OhDIXiPnajiI5955xmvgD",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xfbf4849a06f6e6f53ecb31d2f8bd61aa7874b268",
          "description": "Uniswap Consecutive Slots Price Feed Medianizer"
        },
        {
          "id": "1BxQSczWWqfgl9JxcUPIep",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xcdb05aeda142a1b0d6044c09c64e4226c1a281eb",
          "description": "Tax Collector"
        },
        {
          "id": "8LvGQ9nF4qfbmwEnMX2UK",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xb825e25856bd98b3f2faf2aeb6cb8742b38c4025",
          "description": "Chainklink Relayer"
        },
        {
          "id": "wStxuszGmeMPEuJNgq19Y",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xfbf4849a06f6e6f53ecb31d2f8bd61aa7874b268",
          "description": "Uniswap Consecutive Slots Price Feed Medianizer"
        },
        {
          "id": "139i73mUd4IxySbQ6V6F2K",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x880cecbc56f48bce5e0ef4070017c0a4270f64ed#code",
          "description": "Geb Proxy Actions"
        },
        {
          "id": "Kuqvz10XWHLeULMqWrTLG",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x17b5d9914194a08c7ef14451ba15e8ae4f92cb93",
          "description": "Geb Proxy Actions Global Settlement"
        },
        {
          "id": "6j025g2vXJBVVnOoyWY4qa",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xefe0b4ca532769a3ae758fd82e1426a03a94f185",
          "description": "Geb Safe Manager"
        },
        {
          "id": "7tXdr70y80eSJjkBxtAmCg",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xdf4bc9aa98cc8ecd90ba2bee73ad4a1a9c8d202b",
          "description": "Get Safes"
        },
        {
          "id": "2T6Eq6oB341qcdp7URgiF2",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x2cde6a1147b0ee61726b86d83fd548401b1162c7",
          "description": "Protest Pause"
        },
        {
          "id": "32AXWQFnm511Mb21CwLTO",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x4678f0a6958e4d2bc4f1baf7bc52e8f3564f3fe4",
          "description": "Geb Proxy Registry"
        },
        {
          "id": "4OM6VFeWU1FRxw4yr8NGhI",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xe24f8b30fd28c90462c9bbc87a9a2a823636f533",
          "description": "FSM Governance Interface"
        },
        {
          "id": "767DiI59gUNmC81kzsDxVV",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x105b857583346e250fbd04a57ce0e491eb204ba3",
          "description": "FSM Wrapper"
        },
        {
          "id": "6FqGlAIK2Ptxw61vao0lws",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xd4a0e3ec2a937e7cca4a192756a8439a8bf4ba91",
          "description": "Externally Funded OSM"
        },
        {
          "id": "Gj0kt2ZLhFT82CCQkKerZ",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x7df2d51e69aa58b69c3df18d75b8e9acc3c1b04e",
          "description": "Debt Auction Initial Parameter Setter"
        },
        {
          "id": "1KuGlVnuPlWs5mNzacZXfX",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x7df2d51e69aa58b69c3df18d75b8e9acc3c1b04e",
          "description": "Increasing Treasury Reimbursement"
        },
        {
          "id": "T59h1j5cszTxHgq5qgqDK",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xe1d5181F0DD039aA4f695d4939d682C4cF874086",
          "description": "Mandatory Fixed Treasury Reimbursement"
        },
        {
          "id": "ZtgXOjhHRImWRc3xDlfEp",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xe8063b122bef35d6723e33dbb3446092877c6855",
          "description": "Increasing Reward Relayer"
        },
        {
          "id": "4Eu7CJf485DWhqxWKrT70F",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xe1d5181f0dd039aa4f695d4939d682c4cf874086",
          "description": "Debt Popper Rewards"
        },
        {
          "id": "4eBvKyEECFxRN8M6Vy0kKp",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x2419356360becd9929caafc787ce018b42fa56fa",
          "description": "Geb Uniswap v2 Keeper Flash"
        },
        {
          "id": "5slcmoFgTbkbJgEhivPkuT",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x2419356360becd9929caafc787ce018b42fa56fa",
          "description": "Proxy ETH"
        },
        {
          "id": "18z2pVj6gdO5Y4RiXjHXdM",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x12f906e4854eedfdb1bd2daa9100d1c3b0cb7631",
          "description": "Geb Uniswap v2 Multi Collateral Keeper Flash Proxy"
        },
        {
          "id": "5NVH46xcQkiCFLCsS9FB6v",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xcdce3af4ef75bc89601a2e785172c6b9f65a0aac",
          "description": "Geb Uniswap v3 Keeper Flash Proxy ETH"
        },
        {
          "id": "7K4grwRLzHDu3B3W1EEofR",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x2cde6a1147b0ee61726b86d83fd548401b1162c7",
          "description": "DS Roles"
        },
        {
          "id": "5UXI3EsUEYQfQXYZi2VUjr",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x6243d8cea23066d098a15582d81a598b4e8391f4",
          "description": "DS Delegate Token"
        },
        {
          "id": "nthllev9MlH7SMVKsCc2Q",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x69c6c08b91010c88c95775b6fd768e5b04efc106",
          "description": "Geb Lender First Resort Rewards Vested"
        },
        {
          "id": "1WG9Pp2kM7WadAc06V3uyy",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xaa5f19b87cc8f8a17d20f0697f1b37e112930ae4",
          "description": "Staked Tokens to Keep Setter"
        },
        {
          "id": "2itIOZkPOcnsmUwwe2OHqQ",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x8017f897aaaabd5701b63d819590062a87732ba0",
          "description": "Staking Rewards Escrow"
        },
        {
          "id": "3jn7GeVTHoA35h3Qbi6jJu",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x27da9f90255e56c2bcec5f6360ed260be70f3ab2",
          "description": "Staked Token Auction House"
        },
        {
          "id": "4TcyDr5dr3QmrfHqWLSDgG",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x03da3d5e0b13b6f0917fa9bc3d65b46229d7ef47",
          "description": "Auto Reward Dripper"
        }
      ],
      "impacts": [
        {
          "id": "1DsGy7Me0T6DT8dvALKURw",
          "title": "Any governance voting result manipulation",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "47Cfiy0r6N1lEHDHoIoXyi",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1zeZke2IOPx4rp9Nh7hHNA",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4ViXXOV9nU7M3FpqqLwLCc",
          "title": "Miner-extractable value (MEV)",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6GhWZq6gocJuhiXiq3YXiw",
          "title": "Protocol Insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6ZuDXUAOCYt9zjV9of0qZ4",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6RzLnKEAlk3USf2BLqWeZn",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "54qVrls39EKiibLNqC6XIY",
          "title": "Temporary freezing of funds",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "2IFVjqPwr3fYrWR1WBQpFL",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "xXaXHHdNDZwHamP4EA8rZ",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "6KkjNfzLpNvB3zOE880XfN",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5GMEgh57Om98MiEDwlQBXi",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "lsI7MmUArMdEWIfbwvg3X",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "dM64kxi3eUwy6EHMqXncF",
          "title": "Contract fails to deliver promised returns, but doesn't lose value",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "RAI is an ETH backed stable asset with a managed float regime. The RAI/USD exchange rate is determined by supply and demand while the protocol that issues RAI tries to stabilize its price by constantly de or revaluing it.\n\nFor more information about Rai, please visit [https://docs.reflexer.finance](https://reflexer.finance)   \n\nThis bug bounty program is focused on Rai's smart contracts and is focused on preventing:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Incorrect accounting logic in the core protocol\n  - Theft of unclaimed yield\n  - Unable to shut down the protocol in the global settlement process\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds\n  - Unable to call smart contract\n  - Smart contract fails to deliver promised returns",
      "prioritizedVulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nCritical, High and Medium severity bug reports must come with a PoC and a suggestion for a fix in order to be considered for a reward.\n\nCritical vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of __USD 50 000__ for Critical bug reports.\n\nKnown issues from their previous audits are considered out-of-scope:\n\n[https://github.com/reflexer-labs/geb-audits/blob/master/open-zeppelin/core-contracts/oz-geb-protocol-audit.pdf](https://github.com/reflexer-labs/geb-audits/blob/master/open-zeppelin/core-contracts/oz-geb-protocol-audit.pdf)\n\n[https://github.com/reflexer-labs/geb-audits/tree/master/quantstamp/helper-contracts/first-audit](https://github.com/reflexer-labs/geb-audits/tree/master/quantstamp/helper-contracts/first-audit)\n\n[https://github.com/reflexer-labs/geb-audits/blob/master/quantstamp/helper-contracts/second-audit/Reflexer%20Second%20Engagement%20-%20Final%20Report.pdf](https://github.com/reflexer-labs/geb-audits/blob/master/quantstamp/helper-contracts/second-audit/Reflexer%20Second%20Engagement%20-%20Final%20Report.pdf)\n\n[https://github.com/reflexer-labs/geb-audits/blob/master/quantstamp/staking/Reflexer%20Staking%20and%20Auction%20House%20-%20Report.pdf](https://github.com/reflexer-labs/geb-audits/blob/master/quantstamp/staking/Reflexer%20Staking%20and%20Auction%20House%20-%20Report.pdf)\n\n[https://github.com/reflexer-labs/geb-audits/blob/master/solidified/helper-contracts/Solidified%20Audit%20Report%20-%20Reflexer%20%5B26.01.2021%5D.pdf](https://github.com/reflexer-labs/geb-audits/blob/master/solidified/helper-contracts/Solidified%20Audit%20Report%20-%20Reflexer%20%5B26.01.2021%5D.pdf)\n\nAdditionally, there is a known bug in the contract below where, if it does not have tokens anymore, it cannot compute a 0 reward. This does not affect the rest of the functionality of the system and would also be considered out-of-scope.\n\n[https://github.com/reflexer-labs/geb-lender-first-resort/blob/master/src/AutoRewardDripper.sol](https://github.com/reflexer-labs/geb-lender-first-resort/blob/master/src/AutoRewardDripper.sol) \n\nPayouts are handled by the Reflexer team directly and are denominated in USD. However, payouts are done in FLX, RAI or a combination of both at the discretion of the team.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "All smart contracts of Rai can be found at https://github.com/reflexer-labs. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Stablecoin"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $100,000"
          },
          {
            "level": "High",
            "payout": "USD $25,000"
          },
          {
            "level": "Medium",
            "payout": "USD $10,000"
          },
          {
            "level": "Low",
            "payout": "USD $2,500"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"RAI is an ETH backed stable asset with a managed float regime. The RAI/USD exchange rate is determined by supply and demand while the protocol that issues RAI tries to stabilize its price by constantly de or revaluing it.\"), mdx(\"p\", null, \"For more information about Rai, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://reflexer.finance\"\n  }, \"https://docs.reflexer.finance\"), \"   \"), mdx(\"p\", null, \"This bug bounty program is focused on Rai's smart contracts and is focused on preventing:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of user funds staked (principal) by freezing or theft\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect accounting logic in the core protocol\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unable to shut down the protocol in the global settlement process\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Freezing of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Temporary freezing of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unable to call smart contract\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract fails to deliver promised returns\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>RAI is an ETH backed stable asset with a managed float regime. The RAI/USD exchange rate is determined by supply and demand while the protocol that issues RAI tries to stabilize its price by constantly de or revaluing it.</p><p>For more information about Rai, please visit <a href=\"https://reflexer.finance\">https://docs.reflexer.finance</a>   </p><p>This bug bounty program is focused on Rai&#x27;s smart contracts and is focused on preventing:</p><ul><li>Loss of user funds staked (principal) by freezing or theft</li><li>Incorrect accounting logic in the core protocol</li><li>Theft of unclaimed yield</li><li>Unable to shut down the protocol in the global settlement process</li><li>Freezing of unclaimed yield</li><li>Temporary freezing of funds</li><li>Unable to call smart contract</li><li>Smart contract fails to deliver promised returns</li></ul>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are especially interested in receiving and rewarding vulnerabilities of the following types:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\"), \" \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Re-entrancy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Logic errors\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including user authentication errors\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Solidity/EVM details not considered\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including integer over-/under-flow\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including rounding errors\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including unhandled exceptions\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusting trust/dependency vulnerabilities\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including composability vulnerabilities\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Oracle failure/manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Novel governance attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Economic/financial attacks\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Congestion and scalability\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including running out of gas\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including block stuffing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including susceptibility to frontrunning\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Consensus failures\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cryptography problems\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Signature malleability\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to replay attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak randomness\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak encryption\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to block timestamp manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing access controls / unprotected internal or debugging interfaces\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>We are especially interested in receiving and rewarding vulnerabilities of the following types:</p><p><strong>Smart Contracts and Blockchain</strong> </p><ul><li>Re-entrancy</li><li>Logic errors<ul><li>including user authentication errors</li></ul></li><li>Solidity/EVM details not considered<ul><li>including integer over-/under-flow</li><li>including rounding errors</li><li>including unhandled exceptions</li></ul></li><li>Trusting trust/dependency vulnerabilities<ul><li>including composability vulnerabilities</li></ul></li><li>Oracle failure/manipulation</li><li>Novel governance attacks</li><li>Economic/financial attacks<ul><li>including flash loan attacks</li></ul></li><li>Congestion and scalability<ul><li>including running out of gas</li><li>including block stuffing</li><li>including susceptibility to frontrunning</li></ul></li><li>Consensus failures</li><li>Cryptography problems<ul><li>Signature malleability</li><li>Susceptibility to replay attacks</li><li>Weak randomness</li><li>Weak encryption</li></ul></li><li>Susceptibility to block timestamp manipulation</li><li>Missing access controls / unprotected internal or debugging interfaces</li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\"), mdx(\"p\", null, \"Critical, High and Medium severity bug reports must come with a PoC and a suggestion for a fix in order to be considered for a reward.\"), mdx(\"p\", null, \"Critical vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 50 000\"), \" for Critical bug reports.\"), mdx(\"p\", null, \"Known issues from their previous audits are considered out-of-scope:\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/reflexer-labs/geb-audits/blob/master/open-zeppelin/core-contracts/oz-geb-protocol-audit.pdf\"\n  }, \"https://github.com/reflexer-labs/geb-audits/blob/master/open-zeppelin/core-contracts/oz-geb-protocol-audit.pdf\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/reflexer-labs/geb-audits/tree/master/quantstamp/helper-contracts/first-audit\"\n  }, \"https://github.com/reflexer-labs/geb-audits/tree/master/quantstamp/helper-contracts/first-audit\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/reflexer-labs/geb-audits/blob/master/quantstamp/helper-contracts/second-audit/Reflexer%20Second%20Engagement%20-%20Final%20Report.pdf\"\n  }, \"https://github.com/reflexer-labs/geb-audits/blob/master/quantstamp/helper-contracts/second-audit/Reflexer%20Second%20Engagement%20-%20Final%20Report.pdf\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/reflexer-labs/geb-audits/blob/master/quantstamp/staking/Reflexer%20Staking%20and%20Auction%20House%20-%20Report.pdf\"\n  }, \"https://github.com/reflexer-labs/geb-audits/blob/master/quantstamp/staking/Reflexer%20Staking%20and%20Auction%20House%20-%20Report.pdf\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/reflexer-labs/geb-audits/blob/master/solidified/helper-contracts/Solidified%20Audit%20Report%20-%20Reflexer%20%5B26.01.2021%5D.pdf\"\n  }, \"https://github.com/reflexer-labs/geb-audits/blob/master/solidified/helper-contracts/Solidified%20Audit%20Report%20-%20Reflexer%20%5B26.01.2021%5D.pdf\")), mdx(\"p\", null, \"Additionally, there is a known bug in the contract below where, if it does not have tokens anymore, it cannot compute a 0 reward. This does not affect the rest of the functionality of the system and would also be considered out-of-scope.\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/reflexer-labs/geb-lender-first-resort/blob/master/src/AutoRewardDripper.sol\"\n  }, \"https://github.com/reflexer-labs/geb-lender-first-resort/blob/master/src/AutoRewardDripper.sol\"), \" \"), mdx(\"p\", null, \"Payouts are handled by the Reflexer team directly and are denominated in USD. However, payouts are done in FLX, RAI or a combination of both at the discretion of the team.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.</p><p>Critical, High and Medium severity bug reports must come with a PoC and a suggestion for a fix in order to be considered for a reward.</p><p>Critical vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of <strong>USD 50 000</strong> for Critical bug reports.</p><p>Known issues from their previous audits are considered out-of-scope:</p><p><a href=\"https://github.com/reflexer-labs/geb-audits/blob/master/open-zeppelin/core-contracts/oz-geb-protocol-audit.pdf\">https://github.com/reflexer-labs/geb-audits/blob/master/open-zeppelin/core-contracts/oz-geb-protocol-audit.pdf</a></p><p><a href=\"https://github.com/reflexer-labs/geb-audits/tree/master/quantstamp/helper-contracts/first-audit\">https://github.com/reflexer-labs/geb-audits/tree/master/quantstamp/helper-contracts/first-audit</a></p><p><a href=\"https://github.com/reflexer-labs/geb-audits/blob/master/quantstamp/helper-contracts/second-audit/Reflexer%20Second%20Engagement%20-%20Final%20Report.pdf\">https://github.com/reflexer-labs/geb-audits/blob/master/quantstamp/helper-contracts/second-audit/Reflexer%20Second%20Engagement%20-%20Final%20Report.pdf</a></p><p><a href=\"https://github.com/reflexer-labs/geb-audits/blob/master/quantstamp/staking/Reflexer%20Staking%20and%20Auction%20House%20-%20Report.pdf\">https://github.com/reflexer-labs/geb-audits/blob/master/quantstamp/staking/Reflexer%20Staking%20and%20Auction%20House%20-%20Report.pdf</a></p><p><a href=\"https://github.com/reflexer-labs/geb-audits/blob/master/solidified/helper-contracts/Solidified%20Audit%20Report%20-%20Reflexer%20%5B26.01.2021%5D.pdf\">https://github.com/reflexer-labs/geb-audits/blob/master/solidified/helper-contracts/Solidified%20Audit%20Report%20-%20Reflexer%20%5B26.01.2021%5D.pdf</a></p><p>Additionally, there is a known bug in the contract below where, if it does not have tokens anymore, it cannot compute a 0 reward. This does not affect the rest of the functionality of the system and would also be considered out-of-scope.</p><p><a href=\"https://github.com/reflexer-labs/geb-lender-first-resort/blob/master/src/AutoRewardDripper.sol\">https://github.com/reflexer-labs/geb-lender-first-resort/blob/master/src/AutoRewardDripper.sol</a> </p><p>Payouts are handled by the Reflexer team directly and are denominated in USD. However, payouts are done in FLX, RAI or a combination of both at the discretion of the team.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of Rai can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/reflexer-labs\"\n  }, \"https://github.com/reflexer-labs\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of Rai can be found at <a href=\"https://github.com/reflexer-labs\">https://github.com/reflexer-labs</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

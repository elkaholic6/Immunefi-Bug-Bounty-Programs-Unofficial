{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "thorchain",
      "slug": "thorchain",
      "project": "THORChain",
      "maxBounty": 250000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2ivu6TOSX5K1g4rprSlKTI/b044ae4248b6b03c658cbfed4d91d05e/THORChain.jpeg",
      "launchDate": "2021-07-28T00:00-07:00",
      "updatedDate": "2023-07-03T19:44:14.265Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "blockchain_dlt",
          "level": "critical",
          "payout": "Up to RUNE  250,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "high",
          "payout": "50,000 RUNE",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "medium",
          "payout": "10,000 RUNE",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "low",
          "payout": "1,000 RUNE",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to RUNE 250 000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "50,000 RUNE",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "10,000 RUNE",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "1,000 RUNE",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "556eSTwExkjzEQtkyTIdSF",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xd37bbe5744d730a1d98d8dc97c42f0ca46ad7146",
          "description": "ETH Router (non-Bifrost)"
        },
        {
          "id": "3iVQ7HAiHrkbAcSO6kCufW",
          "type": "blockchain_dlt",
          "url": "https://gitlab.com/thorchain/thornode",
          "description": "Core THORChain functionality"
        },
        {
          "id": "3xMBFjzSSh6efLfh1dhD1D",
          "type": "blockchain_dlt",
          "url": "https://gitlab.com/thorchain/thornode/-/tree/develop/bifrost",
          "description": "Bifrost Core Functionality (including all sub-packages)"
        }
      ],
      "impacts": [
        {
          "id": "LtXrWmimu725XS4yJaRFb",
          "title": "Network not being able to confirm new transactions (Total network shutdown)",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "mGb0UfQEuxyRbIGF9zPP7",
          "title": "Unintended permanent chain split requiring hard fork (Network partition requiring hard fork)",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "5KNOuzvPZPbzkGeN01ECPv",
          "title": "Direct loss of funds",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "5yp4mRxbet3KvVuVfDArFf",
          "title": "Permanent freezing of funds (fix requires hardfork)",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "n0uYxsPXhUgu1eDShqvZr",
          "title": "RPC API crash",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "70GukBxTziNExWIc62EIlx",
          "title": "Any governance voting result manipulation",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6YA71D3nS9XRait64uh09u",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4eddCmv4zNP8ggBx53rHOl",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "66Bp8TavSWgrPVp8jIXbbh",
          "title": "Miner-extractable value (MEV)",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2hUJiP4wGmlSQ9XGJnaGER",
          "title": "Protocol Insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "335yhwGBSbN7UfllCgvVBx",
          "title": "Unintended chain split (Network partition)",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "6RYljxkI8h9cmzsoZDpMDo",
          "title": "Transient consensus failures",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "6UXVgRu7WOlaBIvbmKOhzS",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "49vQgpTI6jlo9RMIc1fDSl",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6HfnTNZLUjnQd0FmS7eLMF",
          "title": "Temporary freezing of funds",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "5y8O1bvnRxC8QEOrtXepdI",
          "title": "High compute consumption by validator/mining nodes",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "A12pLYp7AK9eMXckEHZZH",
          "title": "Attacks against thin clients",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "3R5IyhMcaflIzr0ujTrViY",
          "title": "DoS of greater than 30% of validator or miner nodes and does not shut down the network",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "1JrZf5wKpSPbMnYteEVlAs",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "4zGqzgfOUgPa3o9UY6gJUB",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "rtRMoQ7nbPSLHmARenIPf",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "86ok9sSygagYVgWvtZQuQ",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "1rqg0layisNaTgzjPSpH3E",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "73D5hbOL6SNeQB11UmSZjr",
          "title": "DoS of greater than 10% but less than 30% of validator or miner nodes and does not shut down the network",
          "type": "blockchain_dlt",
          "severity": "low"
        },
        {
          "id": "7yDvimkkA4ElutsUCnQqfW",
          "title": "Underpricing transaction fees relative to computation time",
          "type": "blockchain_dlt",
          "severity": "low"
        },
        {
          "id": "2UPSnNfu9WmasYSJxDZJ65",
          "title": "Contract fails to deliver promised returns, but doesn't lose value",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "THORChain is a decentralised cross-chain liquidity protocol based on Tendermint & Cosmos-SDK and utilising Threshold Signature Schemes (TSS). It does not peg or wrap assets, it simply determines how to move them in response to user-actions. \n\nTHORChain observes incoming user deposits to vaults, executes business logic (swap, add/remove liquidity), and processes outbound transactions. THORChain is primarily a leaderless vault manager, ensuring that every stage of the process is byzantine-fault-tolerant. \n\nTHORChain's key objective is to be resistant to centralisation and capture whilst facilitating cross-chain liquidity. THORChain only secures the assets in its vaults, and has economic guarantees that those assets are safe. \n\nFor more information about how THORChain works, please visit [https://docs.thorchain.org/technology](https://docs.thorchain.org/technology). \n\nThe bug bounty program covers its smart contracts and core THORChain functionality, and is focused on receiving critical bug reports covering impacts as stated in the Impacts in Scope section.  Vulnerabilities below the Critical severity level are not accepted under the bug bounty program. \n\n[Nine Realms](https://www.ninerealms.co/) has joined the efforts to triage and verify vulnerabilities of this bug bounty program.",
      "prioritizedVulnerabilities": "Impacts in Scope\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n __Critical__\t \nBlockchain/DLT\n  - Network not being able to confirm new transactions (Total network shutdown)\n  - Unintended permanent chain split requiring hard fork (Network partition requiring hard fork)\n  - Direct loss of funds\n  - Permanent freezing of funds (fix requires hardfork)\n  - RPC API crash\n\nSmart Contracts\n  - Any governance voting result manipulation\n  - Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\n  - Permanent freezing of funds\n  - Miner-extractable value (MEV)\n  - Protocol Insolvency\n\n__High__\t \nBlockchain/DLT\n  - Unintended chain split (Network partition)\n  - Transient consensus failures\n\nSmart Contracts\n  - Theft of unclaimed yield\n  - Permanent freezing of unclaimed yield\n  - Temporary freezing of funds\n\n__Medium__\t \nBlockchain/DLT\n  - High compute consumption by validator/mining nodes\n  - Attacks against thin clients\n  - DoS of greater than 30% of validator or miner nodes and does not shut down the network\n\nSmart Contracts\n  - Smart contract unable to operate due to lack of token funds\n  - Block stuffing for profit\n  - Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)\n  - Theft of gas\n  - Unbounded gas consumption\n\n__Low__\t \nBlockchain/DLT\n  - DoS of greater than 10% but less than 30% of validator or miner nodes and does not shut down the network\n  - Underpricing transaction fees relative to computation time\n\nSmart Contracts\n  - Contract fails to deliver promised returns, but doesn't lose value\n\nThese accepted impacts are then based on the severity classification system of this bug bounty program. When submitting a bug report, please select the severity level you feel best corresponds to the severity classification system as long as the impact itself is one of the listed items. \n",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nTHORChain core team members, auditing firms contracted by THORChain, as well as contributors on Treasury payroll are not permitted to participate in this bug bounty program. If an existing pull request or live issue on GitLab addresses the vulnerability reported, it will not be eligible for a reward.  Keep in mind that there could be a known-issue that has not been made publicly available yet and is in the process of being patched.\n\nThe reward is dependent on the amount of funds that can be taken or permanently frozen per vulnerability exploited, capped at 10% of the Value at Risk (VAR) up to RUNE 250,000.\n\nIn order to qualify for the reward, a PoC must be included. Exploited vulnerabilities, as well as known issues, are not eligible for a reward.\n\nIn addition, submissions must keep in mind the following constraints:\n  - The network has auto solvency detection to pause the network on theft from vaults, the attack must circumvent these pauses as needed. \n  - There is an outbound delay on outbound TXs from THORChain vaults. This delay gives time for the nodes/community to pause the network and can affect the VAR\n  - If the stolen funds are $RUNE the VAR is discounted 90% due to the above; It is likely that the network would be paused and funds recovered before the attacker is able to exit to another asset\n  - CEX liquidity is not a valid way to exit $RUNE (due to KYC and withdraw restrictions)\n\n__Additional information on payouts__:\n\n__Smart Contract Levels:__\n  - __Critical__: Loss or lockup of funds\n    - Payout: 10% of VAR, up to 250,000 RUNE\n\n  - __High__: Codepath that causes a Chain Halt via a consensus failure, panic, or otherwise\n    - Payout: Up to $100,000\n\n  - __Medium__: Accounting issues, LP/Bond invariants, Incorrect disbursement of rewards, etc \n    - Payout: Up to $10,000\n\nPayouts are handled by the __THORChain treasury__ in coordination with the THORChain team and are denominated in USD. However, payouts are done completely in __RUNE__. Triaging and verification for this bug bounty program is provided by [Nine Realms](https://www.ninerealms.co/) and THORSec. Note that the “High” and “Medium” Bounty Levels are capped at $100,000 and $10,000 respectively. The payout for a valid vulnerability in these levels may be less than the upper limit, and is determined based on likelihood, ease, and severity of exploit at Nine Realms and THORSec’s discretion.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Logic errors\n- Congestion and scalability\n- Sybil attacks\n\n__The following activities are prohibited by the bug bounty program:__\n\n- Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": " While the Tendermint application ([https://gitlab.com/thorchain/thornode/-/tree/develop/app](https://gitlab.com/thorchain/thornode/-/tree/develop/app)) is considered as in-scope, Cosmos SDK dependencies themselves are out-of-scope. \n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Crosschain Liquidity"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "BSC",
          "ETH"
        ],
        "programType": [
          "Blockchain/DLT",
          "Smart Contract"
        ],
        "language": null
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Blockchain/DLT"
        ],
        "blockchain_rewards": [
          {
            "level": "Critical",
            "payout": "Up to RUNE  250,000"
          },
          {
            "level": "High",
            "payout": "50,000 RUNE"
          },
          {
            "level": "Medium",
            "payout": "10,000 RUNE"
          },
          {
            "level": "Low",
            "payout": "1,000 RUNE"
          }
        ],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to RUNE 250 000"
          },
          {
            "level": "High",
            "payout": "50,000 RUNE"
          },
          {
            "level": "Medium",
            "payout": "10,000 RUNE"
          },
          {
            "level": "Low",
            "payout": "1,000 RUNE"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"THORChain is a decentralised cross-chain liquidity protocol based on Tendermint & Cosmos-SDK and utilising Threshold Signature Schemes (TSS). It does not peg or wrap assets, it simply determines how to move them in response to user-actions. \"), mdx(\"p\", null, \"THORChain observes incoming user deposits to vaults, executes business logic (swap, add/remove liquidity), and processes outbound transactions. THORChain is primarily a leaderless vault manager, ensuring that every stage of the process is byzantine-fault-tolerant. \"), mdx(\"p\", null, \"THORChain's key objective is to be resistant to centralisation and capture whilst facilitating cross-chain liquidity. THORChain only secures the assets in its vaults, and has economic guarantees that those assets are safe. \"), mdx(\"p\", null, \"For more information about how THORChain works, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.thorchain.org/technology\"\n  }, \"https://docs.thorchain.org/technology\"), \". \"), mdx(\"p\", null, \"The bug bounty program covers its smart contracts and core THORChain functionality, and is focused on receiving critical bug reports covering impacts as stated in the Impacts in Scope section.  Vulnerabilities below the Critical severity level are not accepted under the bug bounty program. \"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.ninerealms.co/\"\n  }, \"Nine Realms\"), \" has joined the efforts to triage and verify vulnerabilities of this bug bounty program.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>THORChain is a decentralised cross-chain liquidity protocol based on Tendermint &amp; Cosmos-SDK and utilising Threshold Signature Schemes (TSS). It does not peg or wrap assets, it simply determines how to move them in response to user-actions. </p><p>THORChain observes incoming user deposits to vaults, executes business logic (swap, add/remove liquidity), and processes outbound transactions. THORChain is primarily a leaderless vault manager, ensuring that every stage of the process is byzantine-fault-tolerant. </p><p>THORChain&#x27;s key objective is to be resistant to centralisation and capture whilst facilitating cross-chain liquidity. THORChain only secures the assets in its vaults, and has economic guarantees that those assets are safe. </p><p>For more information about how THORChain works, please visit <a href=\"https://docs.thorchain.org/technology\">https://docs.thorchain.org/technology</a>. </p><p>The bug bounty program covers its smart contracts and core THORChain functionality, and is focused on receiving critical bug reports covering impacts as stated in the Impacts in Scope section.  Vulnerabilities below the Critical severity level are not accepted under the bug bounty program. </p><p><a href=\"https://www.ninerealms.co/\">Nine Realms</a> has joined the efforts to triage and verify vulnerabilities of this bug bounty program.</p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Impacts in Scope\"), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"), mdx(\"p\", null, \" \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Critical\"), \"\\nBlockchain/DLT\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Network not being able to confirm new transactions (Total network shutdown)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unintended permanent chain split requiring hard fork (Network partition requiring hard fork)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct loss of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of funds (fix requires hardfork)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"RPC API crash\")), mdx(\"p\", null, \"Smart Contracts\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any governance voting result manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Miner-extractable value (MEV)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Protocol Insolvency\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"High\"), \"\\nBlockchain/DLT\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unintended chain split (Network partition)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Transient consensus failures\")), mdx(\"p\", null, \"Smart Contracts\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Temporary freezing of funds\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Medium\"), \"\\nBlockchain/DLT\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"High compute consumption by validator/mining nodes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks against thin clients\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DoS of greater than 30% of validator or miner nodes and does not shut down the network\")), mdx(\"p\", null, \"Smart Contracts\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract unable to operate due to lack of token funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Block stuffing for profit\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of gas\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unbounded gas consumption\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Low\"), \"\\nBlockchain/DLT\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DoS of greater than 10% but less than 30% of validator or miner nodes and does not shut down the network\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Underpricing transaction fees relative to computation time\")), mdx(\"p\", null, \"Smart Contracts\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Contract fails to deliver promised returns, but doesn't lose value\")), mdx(\"p\", null, \"These accepted impacts are then based on the severity classification system of this bug bounty program. When submitting a bug report, please select the severity level you feel best corresponds to the severity classification system as long as the impact itself is one of the listed items. \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Impacts in Scope</p><p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p><p> <strong>Critical</strong>\nBlockchain/DLT</p><ul><li>Network not being able to confirm new transactions (Total network shutdown)</li><li>Unintended permanent chain split requiring hard fork (Network partition requiring hard fork)</li><li>Direct loss of funds</li><li>Permanent freezing of funds (fix requires hardfork)</li><li>RPC API crash</li></ul><p>Smart Contracts</p><ul><li>Any governance voting result manipulation</li><li>Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield</li><li>Permanent freezing of funds</li><li>Miner-extractable value (MEV)</li><li>Protocol Insolvency</li></ul><p><strong>High</strong>\nBlockchain/DLT</p><ul><li>Unintended chain split (Network partition)</li><li>Transient consensus failures</li></ul><p>Smart Contracts</p><ul><li>Theft of unclaimed yield</li><li>Permanent freezing of unclaimed yield</li><li>Temporary freezing of funds</li></ul><p><strong>Medium</strong>\nBlockchain/DLT</p><ul><li>High compute consumption by validator/mining nodes</li><li>Attacks against thin clients</li><li>DoS of greater than 30% of validator or miner nodes and does not shut down the network</li></ul><p>Smart Contracts</p><ul><li>Smart contract unable to operate due to lack of token funds</li><li>Block stuffing for profit</li><li>Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)</li><li>Theft of gas</li><li>Unbounded gas consumption</li></ul><p><strong>Low</strong>\nBlockchain/DLT</p><ul><li>DoS of greater than 10% but less than 30% of validator or miner nodes and does not shut down the network</li><li>Underpricing transaction fees relative to computation time</li></ul><p>Smart Contracts</p><ul><li>Contract fails to deliver promised returns, but doesn&#x27;t lose value</li></ul><p>These accepted impacts are then based on the severity classification system of this bug bounty program. When submitting a bug report, please select the severity level you feel best corresponds to the severity classification system as long as the impact itself is one of the listed items. </p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\"), mdx(\"p\", null, \"THORChain core team members, auditing firms contracted by THORChain, as well as contributors on Treasury payroll are not permitted to participate in this bug bounty program. If an existing pull request or live issue on GitLab addresses the vulnerability reported, it will not be eligible for a reward.  Keep in mind that there could be a known-issue that has not been made publicly available yet and is in the process of being patched.\"), mdx(\"p\", null, \"The reward is dependent on the amount of funds that can be taken or permanently frozen per vulnerability exploited, capped at 10% of the Value at Risk (VAR) up to RUNE 250,000.\"), mdx(\"p\", null, \"In order to qualify for the reward, a PoC must be included. Exploited vulnerabilities, as well as known issues, are not eligible for a reward.\"), mdx(\"p\", null, \"In addition, submissions must keep in mind the following constraints:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The network has auto solvency detection to pause the network on theft from vaults, the attack must circumvent these pauses as needed. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"There is an outbound delay on outbound TXs from THORChain vaults. This delay gives time for the nodes/community to pause the network and can affect the VAR\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If the stolen funds are $RUNE the VAR is discounted 90% due to the above; It is likely that the network would be paused and funds recovered before the attacker is able to exit to another asset\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CEX liquidity is not a valid way to exit $RUNE (due to KYC and withdraw restrictions)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Additional information on payouts\"), \":\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contract Levels:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Critical\"), \": Loss or lockup of funds\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Payout: 10% of VAR, up to 250,000 RUNE\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"High\"), \": Codepath that causes a Chain Halt via a consensus failure, panic, or otherwise\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Payout: Up to $100,000\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Medium\"), \": Accounting issues, LP/Bond invariants, Incorrect disbursement of rewards, etc \"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Payout: Up to $10,000\")))), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"THORChain treasury\"), \" in coordination with the THORChain team and are denominated in USD. However, payouts are done completely in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"RUNE\"), \". Triaging and verification for this bug bounty program is provided by \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.ninerealms.co/\"\n  }, \"Nine Realms\"), \" and THORSec. Note that the \\u201CHigh\\u201D and \\u201CMedium\\u201D Bounty Levels are capped at $100,000 and $10,000 respectively. The payout for a valid vulnerability in these levels may be less than the upper limit, and is determined based on likelihood, ease, and severity of exploit at Nine Realms and THORSec\\u2019s discretion.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.</p><p>THORChain core team members, auditing firms contracted by THORChain, as well as contributors on Treasury payroll are not permitted to participate in this bug bounty program. If an existing pull request or live issue on GitLab addresses the vulnerability reported, it will not be eligible for a reward.  Keep in mind that there could be a known-issue that has not been made publicly available yet and is in the process of being patched.</p><p>The reward is dependent on the amount of funds that can be taken or permanently frozen per vulnerability exploited, capped at 10% of the Value at Risk (VAR) up to RUNE 250,000.</p><p>In order to qualify for the reward, a PoC must be included. Exploited vulnerabilities, as well as known issues, are not eligible for a reward.</p><p>In addition, submissions must keep in mind the following constraints:</p><ul><li>The network has auto solvency detection to pause the network on theft from vaults, the attack must circumvent these pauses as needed. </li><li>There is an outbound delay on outbound TXs from THORChain vaults. This delay gives time for the nodes/community to pause the network and can affect the VAR</li><li>If the stolen funds are $RUNE the VAR is discounted 90% due to the above; It is likely that the network would be paused and funds recovered before the attacker is able to exit to another asset</li><li>CEX liquidity is not a valid way to exit $RUNE (due to KYC and withdraw restrictions)</li></ul><p><strong>Additional information on payouts</strong>:</p><p><strong>Smart Contract Levels:</strong></p><ul><li><p><strong>Critical</strong>: Loss or lockup of funds</p><ul><li>Payout: 10% of VAR, up to 250,000 RUNE</li></ul></li><li><p><strong>High</strong>: Codepath that causes a Chain Halt via a consensus failure, panic, or otherwise</p><ul><li>Payout: Up to $100,000</li></ul></li><li><p><strong>Medium</strong>: Accounting issues, LP/Bond invariants, Incorrect disbursement of rewards, etc </p><ul><li>Payout: Up to $10,000</li></ul></li></ul><p>Payouts are handled by the <strong>THORChain treasury</strong> in coordination with the THORChain team and are denominated in USD. However, payouts are done completely in <strong>RUNE</strong>. Triaging and verification for this bug bounty program is provided by <a href=\"https://www.ninerealms.co/\">Nine Realms</a> and THORSec. Note that the “High” and “Medium” Bounty Levels are capped at $100,000 and $10,000 respectively. The payout for a valid vulnerability in these levels may be less than the upper limit, and is determined based on likelihood, ease, and severity of exploit at Nine Realms and THORSec’s discretion.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Logic errors\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Congestion and scalability\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"The following activities are prohibited by the bug bounty program:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Logic errors</li><li>Congestion and scalability</li><li>Sybil attacks</li></ul><p><strong>The following activities are prohibited by the bug bounty program:</strong></p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \" While the Tendermint application (\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://gitlab.com/thorchain/thornode/-/tree/develop/app\"\n  }, \"https://gitlab.com/thorchain/thornode/-/tree/develop/app\"), \") is considered as in-scope, Cosmos SDK dependencies themselves are out-of-scope. \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p> While the Tendermint application (<a href=\"https://gitlab.com/thorchain/thornode/-/tree/develop/app\">https://gitlab.com/thorchain/thornode/-/tree/develop/app</a>) is considered as in-scope, Cosmos SDK dependencies themselves are out-of-scope. </p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "arcade",
      "slug": "arcade",
      "project": "Arcade.xyz",
      "maxBounty": 50000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5dWtCbcKlsOSopSoefwWlC/28ab44ce13aff5731b8c55d3a731ea53/Arcade_logo.jpeg",
      "launchDate": "2022-09-20T11:30-06:00",
      "updatedDate": "2023-09-22T19:13:52.578Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to USD $50,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $20,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": false
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "3IWqTrJph4U6FvhEEPYWGd",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x4c52ca29388A8A854095Fd2BeB83191D68DC840b#code",
          "description": "OriginationController"
        },
        {
          "id": "57VVkj1R2dFnoEWMzUdjcp",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x81b2F8Fc75Bab64A6b144aa6d2fAa127B4Fa7fD9#code",
          "description": "LoanCore"
        },
        {
          "id": "2YMLiapGt2ti2tWZAqrOG3",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x6e9B4c2f6Bd57b7b924d29b5dcfCa1273Ecc94A2#code",
          "description": "VaultFactory"
        },
        {
          "id": "25c85Ms6g7KxcJoF2fvVkg",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xD898456E39A461B102Ce4626Aac191582C38Acb6#code",
          "description": "AssetVault"
        },
        {
          "id": "RssQ6Lmrvuc3mCp7abCI2",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x337104A4f06260Ff327d6734C555A0f5d8F863aa#code",
          "description": "BorrowerNote"
        },
        {
          "id": "5geollOlPB5lYFIfjDq0pd",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x349A026A43FFA8e2Ab4c4e59FCAa93F87Bd8DdeE#code",
          "description": "LenderNote"
        },
        {
          "id": "7CXQLIT1Jt72KFq4gUlnDd",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xb39dAB85FA05C381767FF992cCDE4c94619993d4#code",
          "description": "RepaymentController"
        },
        {
          "id": "1tTwDInbyrHhuY2rSmmfKw",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x41E538817C3311ed032653bEE5487a113F8CfF9F#code",
          "description": "FeeController"
        },
        {
          "id": "41dfQuLrr5xLxHTOn4LHd0",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xAbfD9D9E4157695DB5812eeE279D923a4f948Df0#code",
          "description": "ItemsVerifier"
        },
        {
          "id": "Yl8BaPynyqR0xjI8gDbTh",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xB4496F9798cEbd003c5d5a956B5B8f3933178C82#code",
          "description": "CallWhitelist"
        }
      ],
      "impacts": [
        {
          "id": "3Y6ajZ3yBCfAH34CKsS9ok",
          "title": "Ability for an attacker to cause the entire protocol to freeze, including loans in which they are not a counterparty",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1SfVW9013RKvd1fOOXa4ID",
          "title": "Ability for an attacker to steal any asset held by the protocol, without limitation, including loans in which they are not a counterparty",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2e85ffPNc6szOrhYMLY3IB",
          "title": "Ability for an attacker to claim collateral for defaulted loans in which they are not a counterparty",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "yxhI180UQGhhKp698DI1H",
          "title": "With the attacker as a borrower, the ability to regain control of collateral without repaying your loan",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "3DDGQbjdbEe4sUUbRqpsMf",
          "title": "With the attacker as a borrower, the ability to force your lender to issue loan funding without placing collateral in escrow",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "3F5KnMFGfJAtW2orNuPcOm",
          "title": "With the attacker as a borrower, the ability to prevent a lender from claiming collateral when a loan is defaulted",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "5Y5GxoJQGztlIM7Bal3f4R",
          "title": "With the attacker as a lender, the ability to claim collateral before your loanâ€™s due date",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "34DY1XJoFfxUlbDPqauY7l",
          "title": "With the attacker as a lender, the ability to prevent borrower repayments to force a default",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "3iSVM57v04CeJ0rKGmqwU9",
          "title": "With the attacker as a lender, the ability to force a borrower to place collateral in escrow without issuing funding",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "2MEieCMku7ivwWWVt3JqDt",
          "title": "With the attacker as either counterparty, the ability to force another party to enter a loan under terms they did not consent to either via signature, or the other party submitting a function call",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "5xu084xK0ETeyQMGCne5C2",
          "title": "Ability to freeze the protocol from originating new loans, without affecting currently open loans or locking assets",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "EDXnRNBSEkcWeZqyddVe7",
          "title": "Ability to drain protocol fees or block protocol fees",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3ddXZOp6IUC7Lnc7vH88Ee",
          "title": "Ability to block protocol fees from being withdrawn by contract owners",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "1lFL613z7g87R9YXSKirHO",
          "title": "Any finding which impacts protocol logic without circumventing loan rules or stealing/freezing user funds",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "Arcade.xyz is the first of its kind Web3 platform to enable liquid lending markets for NFTs. At Arcade.xyz, we think all assets will eventually become digitized and that NFTs represent a 0 to 1 innovation in storing value and ownership attribution for unique digital assets.\n\nArcade.xyz's focus is on building primitives, infrastructure, and applications enabling the growth of NFTs as an asset class. As such, the first product we released is an innovative peer to peer lending marketplace that allows NFT owners to unlock liquidity on baskets of NFTs on Ethereum. Lenders that hold stablecoins or ERC20 tokens can participate in a new source of DeFi yield by underwriting term loans collateralized by borrowers' NFTs.\n\nArcade.xyz is our end user application that strives to become the premier liquidity venue for NFTs, via a protocol for NFT collateralized loans with flexible terms. Today NFTs are largely digital representations of artwork and media content, however, our belief is that in the not so distant future NFTs will encompass digital rights, metaverse assets, and digital identity.\n\nFor more information about Arcade.xyz, please visit [https://www.arcade.xyz/](https://www.arcade.xyz/).",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\n\nAll High and Critical Smart Contract bug reports require a PoC and a suggestion for a fix to be eligible for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nCritical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. However, there is a minimum reward o __USD 20 000__. \n\nAll vulnerabilities marked in the [https://github.com/arcadexyz/v2-contracts/tree/main/audits](https://github.com/arcadexyz/v2-contracts/tree/main/audits) are not eligible for a reward.\n\nPayouts are handled by the __Arcade.xyz__ team directly and are denominated in USD. However, payouts are done in __USDC__.",
      "outOfScopeAndRules": "Within the defined scope above, the general rules are that \n\n  - The bug bounty is based on the following assumptions about token behavior:\n  - External token contracts (for collateral and principal currency) are assumed to follow relevant token standards (ERC20, ERC721, ERC1155).\n  - Any attack related to token upgradeability is out of scope.\nLost principal or fees related to fee-on-transfer tokens are out of scope.\n  - Attacks related to special admin permission of tokens (e.g. an ERC721 where admins can transfer any userâ€™s tokens) are out of scope.\n  - Attacks related to explicitly malicious implementations of standard token functions (e.g. ERC20 tokens that consume the block gas limit on transfer) are out of scope.\n\nThe bug bounty assumes the following operational and trust models:\n  - For any contract which is Ownable or contains privileged operations for certain addresses (e.g. upgradeable contracts), the owner addresses are assumed to behave rationally and honestly.\n  - All contracts should be assumed to be deployed and configured correctly.\n  - Each counterparty in the loan process is assumed to act in their own financial self-interest.\n\nAny finding or impact which is derived from one of the above assumptions being broken (e.g., an ERC721 that does not revert on a failed transfer, or an upgradeable ERC20 that can be made to fail on transfer via upgrade) is out of scope for this program.\n\nAny finding based on one counterparty misleading the other as to the nature of the loan principal or collateral is out of scope. For instance, a borrower using a fake BAYC contract as collateral to trick a lender into giving favorable terms is an attack that is out of scope for this program.\n\nAny attack related to convincing lenders to lend against assets flagged as stolen on other platforms (e.g. OpenSea) is out of scope.\n\nAny phishing attack that requires social engineering in order to convince one counterparty to enter a loan under false pretenses (e.g. forcing them to sign loan terms differing from ones on a phishing UI), is considered out of scope for this program.\n\nThe following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - Any attack that has been previously reported, whether or not it has been publicly disclosed\n\n__Smart Contracts__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n  - Non-protocol related attacks around signatures (e.g. phishing sites that entice users to sign signatures with unfavorable terms)\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "\nAll smart contracts of Arcade.xyz can be found at [https://github.com/Non-fungible-Technologies/v2-contracts](https://github.com/Non-fungible-Technologies/v2-contracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\nThough only the proxy contract for AssetVault  is  listed as in-scope, current implementation and any further updates to the implementation contract are considered in scope. When reporting a bug, please make sure to select the proxy smart contract as the target. AssetVault is the only upgradeable contract in the protocol. \n\nIf an impact can be caused to any other asset managed by Arcade.xyz that isnâ€™t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project. This only applies to Critical and High impacts. \n",
      "impactsBody": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "immunefiStandard": true,
      "tags": {
        "productType": null,
        "projectType": null,
        "ecosystem": null,
        "programType": null,
        "language": null
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $50,000"
          },
          {
            "level": "High",
            "payout": "USD $20,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Arcade.xyz is the first of its kind Web3 platform to enable liquid lending markets for NFTs. At Arcade.xyz, we think all assets will eventually become digitized and that NFTs represent a 0 to 1 innovation in storing value and ownership attribution for unique digital assets.\"), mdx(\"p\", null, \"Arcade.xyz's focus is on building primitives, infrastructure, and applications enabling the growth of NFTs as an asset class. As such, the first product we released is an innovative peer to peer lending marketplace that allows NFT owners to unlock liquidity on baskets of NFTs on Ethereum. Lenders that hold stablecoins or ERC20 tokens can participate in a new source of DeFi yield by underwriting term loans collateralized by borrowers' NFTs.\"), mdx(\"p\", null, \"Arcade.xyz is our end user application that strives to become the premier liquidity venue for NFTs, via a protocol for NFT collateralized loans with flexible terms. Today NFTs are largely digital representations of artwork and media content, however, our belief is that in the not so distant future NFTs will encompass digital rights, metaverse assets, and digital identity.\"), mdx(\"p\", null, \"For more information about Arcade.xyz, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.arcade.xyz/\"\n  }, \"https://www.arcade.xyz/\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Arcade.xyz is the first of its kind Web3 platform to enable liquid lending markets for NFTs. At Arcade.xyz, we think all assets will eventually become digitized and that NFTs represent a 0 to 1 innovation in storing value and ownership attribution for unique digital assets.</p><p>Arcade.xyz&#x27;s focus is on building primitives, infrastructure, and applications enabling the growth of NFTs as an asset class. As such, the first product we released is an innovative peer to peer lending marketplace that allows NFT owners to unlock liquidity on baskets of NFTs on Ethereum. Lenders that hold stablecoins or ERC20 tokens can participate in a new source of DeFi yield by underwriting term loans collateralized by borrowers&#x27; NFTs.</p><p>Arcade.xyz is our end user application that strives to become the premier liquidity venue for NFTs, via a protocol for NFT collateralized loans with flexible terms. Today NFTs are largely digital representations of artwork and media content, however, our belief is that in the not so distant future NFTs will encompass digital rights, metaverse assets, and digital identity.</p><p>For more information about Arcade.xyz, please visit <a href=\"https://www.arcade.xyz/\">https://www.arcade.xyz/</a>.</p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\"), mdx(\"p\", null, \"All High and Critical Smart Contract bug reports require a PoC and a suggestion for a fix to be eligible for a reward. Explanations and statements are not accepted as PoC and code is required.\"), mdx(\"p\", null, \"Critical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. However, there is a minimum reward o \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 20 000\"), \". \"), mdx(\"p\", null, \"All vulnerabilities marked in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/arcadexyz/v2-contracts/tree/main/audits\"\n  }, \"https://github.com/arcadexyz/v2-contracts/tree/main/audits\"), \" are not eligible for a reward.\"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Arcade.xyz\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.</p><p>All High and Critical Smart Contract bug reports require a PoC and a suggestion for a fix to be eligible for a reward. Explanations and statements are not accepted as PoC and code is required.</p><p>Critical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. However, there is a minimum reward o <strong>USD 20 000</strong>. </p><p>All vulnerabilities marked in the <a href=\"https://github.com/arcadexyz/v2-contracts/tree/main/audits\">https://github.com/arcadexyz/v2-contracts/tree/main/audits</a> are not eligible for a reward.</p><p>Payouts are handled by the <strong>Arcade.xyz</strong> team directly and are denominated in USD. However, payouts are done in <strong>USDC</strong>.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Within the defined scope above, the general rules are that \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The bug bounty is based on the following assumptions about token behavior:\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"External token contracts (for collateral and principal currency) are assumed to follow relevant token standards (ERC20, ERC721, ERC1155).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any attack related to token upgradeability is out of scope.\\nLost principal or fees related to fee-on-transfer tokens are out of scope.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks related to special admin permission of tokens (e.g. an ERC721 where admins can transfer any user\\u2019s tokens) are out of scope.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks related to explicitly malicious implementations of standard token functions (e.g. ERC20 tokens that consume the block gas limit on transfer) are out of scope.\")), mdx(\"p\", null, \"The bug bounty assumes the following operational and trust models:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For any contract which is Ownable or contains privileged operations for certain addresses (e.g. upgradeable contracts), the owner addresses are assumed to behave rationally and honestly.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All contracts should be assumed to be deployed and configured correctly.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Each counterparty in the loan process is assumed to act in their own financial self-interest.\")), mdx(\"p\", null, \"Any finding or impact which is derived from one of the above assumptions being broken (e.g., an ERC721 that does not revert on a failed transfer, or an upgradeable ERC20 that can be made to fail on transfer via upgrade) is out of scope for this program.\"), mdx(\"p\", null, \"Any finding based on one counterparty misleading the other as to the nature of the loan principal or collateral is out of scope. For instance, a borrower using a fake BAYC contract as collateral to trick a lender into giving favorable terms is an attack that is out of scope for this program.\"), mdx(\"p\", null, \"Any attack related to convincing lenders to lend against assets flagged as stolen on other platforms (e.g. OpenSea) is out of scope.\"), mdx(\"p\", null, \"Any phishing attack that requires social engineering in order to convince one counterparty to enter a loan under false pretenses (e.g. forcing them to sign loan terms differing from ones on a phishing UI), is considered out of scope for this program.\"), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any attack that has been previously reported, whether or not it has been publicly disclosed\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Non-protocol related attacks around signatures (e.g. phishing sites that entice users to sign signatures with unfavorable terms)\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Within the defined scope above, the general rules are that </p><ul><li>The bug bounty is based on the following assumptions about token behavior:</li><li>External token contracts (for collateral and principal currency) are assumed to follow relevant token standards (ERC20, ERC721, ERC1155).</li><li>Any attack related to token upgradeability is out of scope.\nLost principal or fees related to fee-on-transfer tokens are out of scope.</li><li>Attacks related to special admin permission of tokens (e.g. an ERC721 where admins can transfer any userâ€™s tokens) are out of scope.</li><li>Attacks related to explicitly malicious implementations of standard token functions (e.g. ERC20 tokens that consume the block gas limit on transfer) are out of scope.</li></ul><p>The bug bounty assumes the following operational and trust models:</p><ul><li>For any contract which is Ownable or contains privileged operations for certain addresses (e.g. upgradeable contracts), the owner addresses are assumed to behave rationally and honestly.</li><li>All contracts should be assumed to be deployed and configured correctly.</li><li>Each counterparty in the loan process is assumed to act in their own financial self-interest.</li></ul><p>Any finding or impact which is derived from one of the above assumptions being broken (e.g., an ERC721 that does not revert on a failed transfer, or an upgradeable ERC20 that can be made to fail on transfer via upgrade) is out of scope for this program.</p><p>Any finding based on one counterparty misleading the other as to the nature of the loan principal or collateral is out of scope. For instance, a borrower using a fake BAYC contract as collateral to trick a lender into giving favorable terms is an attack that is out of scope for this program.</p><p>Any attack related to convincing lenders to lend against assets flagged as stolen on other platforms (e.g. OpenSea) is out of scope.</p><p>Any phishing attack that requires social engineering in order to convince one counterparty to enter a loan under false pretenses (e.g. forcing them to sign loan terms differing from ones on a phishing UI), is considered out of scope for this program.</p><p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li><li>Any attack that has been previously reported, whether or not it has been publicly disclosed</li></ul><p><strong>Smart Contracts</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li><li>Non-protocol related attacks around signatures (e.g. phishing sites that entice users to sign signatures with unfavorable terms)</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of Arcade.xyz can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/Non-fungible-Technologies/v2-contracts\"\n  }, \"https://github.com/Non-fungible-Technologies/v2-contracts\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\"), mdx(\"p\", null, \"Though only the proxy contract for AssetVault  is  listed as in-scope, current implementation and any further updates to the implementation contract are considered in scope. When reporting a bug, please make sure to select the proxy smart contract as the target. AssetVault is the only upgradeable contract in the protocol. \"), mdx(\"p\", null, \"If an impact can be caused to any other asset managed by Arcade.xyz that isn\\u2019t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project. This only applies to Critical and High impacts. \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of Arcade.xyz can be found at <a href=\"https://github.com/Non-fungible-Technologies/v2-contracts\">https://github.com/Non-fungible-Technologies/v2-contracts</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.</p><p>Though only the proxy contract for AssetVault  is  listed as in-scope, current implementation and any further updates to the implementation contract are considered in scope. When reporting a bug, please make sure to select the proxy smart contract as the target. AssetVault is the only upgradeable contract in the protocol. </p><p>If an impact can be caused to any other asset managed by Arcade.xyz that isnâ€™t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project. This only applies to Critical and High impacts. </p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

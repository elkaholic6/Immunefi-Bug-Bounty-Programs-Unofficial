{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "icon",
      "slug": "icon",
      "project": "ICON",
      "maxBounty": 100000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/Ig6atE81zuZbq3VTA7GAx/31395c33216e2050beef7269a608cfb4/ICON_logo.jpeg",
      "launchDate": "2022-10-20T20:30-06:00",
      "updatedDate": "2023-03-16T15:07:48.651Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "blockchain_dlt",
          "level": "critical",
          "payout": "USD $100,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "high",
          "payout": "USD $25,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": false
        },
        {
          "assetType": "blockchain_dlt",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $100,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $25,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": false
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "1aqcHU4nH3WIbUzxE6bXM1",
          "type": "blockchain_dlt",
          "url": "https://github.com/icon-project/goloop",
          "description": "Goloop"
        }
      ],
      "impacts": [
        {
          "id": "5dsSHYCdy6z2jl0240nH3k",
          "title": "Network not being able to confirm new transactions (Total network shutdown)",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "TdxaBM8GTkBzSlBGUYbnq",
          "title": "Unintended permanent chain split requiring hard fork (Network partition requiring hard fork)",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "4KsPgBurVJm28LFu0seghr",
          "title": "Direct loss of funds",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "5iM9v5QWezstHs9rxqHkmN",
          "title": "Permanent freezing of funds (fix requires hardfork)",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "52xcv2t0vCc51dGCMlc852",
          "title": "RPC API crash",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "1Bi01WZ4aYlqVMuvpzByB8",
          "title": "Arbitrary transaction affecting ICON ledger",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "11CWd8OWg2WxNaTgCIABao",
          "title": "Change block data which is already finalised",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "kMpyxR4bLALPPasROwEtb",
          "title": "Arbitrary smart contract (Score) call, updating or deleting Score without permission",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "1keDCeZeXvjrUQlTdeagkr",
          "title": "Inconsistent data in partitioned blockchain",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "2mTfqeExf6T2Nn5JTR09Xh",
          "title": "Any governance voting result manipulation",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "ClwHKs8ZcQWWDHbmUbd9N",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5P1hTQ5MSMGsoPHsVbkTbT",
          "title": "Direct theft of any user NFTs, whether at-rest or in-motion, other than unclaimed royalties",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "A7Gcc4Oe1nk1WK3q1WviL",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3I1AN85UR649lzCEwJVUJc",
          "title": "Permanent freezing of NFTs",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "24o4aoa7B6YG9W1kDtJEXM",
          "title": "Unauthorized minting of NFTs",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5I7A5KrwahE4VK3e5i02O7",
          "title": "Predictable or manipulable RNG that results in abuse of the principal or NFT",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3gaxvlvlbJkRn9mFMXCN3u",
          "title": "Unintended alteration of what the NFT represents (e.g. token URI, payload, artistic content)",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3c6s46Lwv9SzAppnJULlB8",
          "title": "Protocol insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1u4BYOTd89KoY4zfNbdAZu",
          "title": "Unintended chain split (Network partition)",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "3DZXBqaac5gkkfWSC0V6kX",
          "title": "Transient consensus failures not covered in Medium severity",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "7t7XzHcHQEsqZsoqlkbjwU",
          "title": "Disability to make a new block(no consensus working)",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "6gq7D1PhzaKGwSTeXYar5O",
          "title": "Newly created block never comes to the finality",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "4Zj2cyjXHwN8qBV1YSOxML",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6QAjUkhO59aCHMgtm0E0ZB",
          "title": "Theft of unclaimed royalties",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "7x5yUwpyswulavhNoJpzak",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "7ugT5FKdseIp9IbKvnJtfW",
          "title": "Permanent freezing of unclaimed royalties",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "7mRwAbuqfGfKLw26XjBE8R",
          "title": "Temporary freezing of funds for any amount of time",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "rlFrKFjSfhixCrHgNmFyi",
          "title": "Temporary freezing NFTs for any amount of time",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "ayeXHy16B6sTN7HBmytYn",
          "title": "High compute consumption by validator/mining nodes",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "4n3cvPfgq0omdBcBJhMdL4",
          "title": "Attacks against thin clients",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "65soOinrHfFjV03a0JdFi7",
          "title": "DoS of greater than 30% of validator or miner nodes and does not shut down the network",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "5gK7nshdtsgkj7KWCn703O",
          "title": "Attacking single node to shut down",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "1n6rXxPirts13Hrekjfche",
          "title": "Stopping a node from working properly",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "2MFlsLQGXr4iYZolmnlyuj",
          "title": "Transient consensus failures in error cases caused by design, such as unknown exceptions in Java Execution Environment that trigger skip transaction logic",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "2GrpehqDO1qTtv87MCVjPs",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "4IpSqkZZubxyWUecoQaSxT",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3jFaQY8MgTWCR5HGDOJNkj",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "6IHu4QfQrmKn83pLFBfZKQ",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "6QpGYGWJBNDpyCSrtW8yIC",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3oV1tYK7CCuvJ4FRyomzAI",
          "title": "DoS of greater than 10% but less than 30% of validator or miner nodes and does not shut down the network",
          "type": "blockchain_dlt",
          "severity": "low"
        },
        {
          "id": "4pTy6i9dXWu1vVeDusRbki",
          "title": "Underpricing transaction fees relative to computation time",
          "type": "blockchain_dlt",
          "severity": "low"
        },
        {
          "id": "190huiMRLzFVawqhfOTctk",
          "title": "Trivial minor bugs except the one related to consensus, safety, liveness, consistency",
          "type": "blockchain_dlt",
          "severity": "low"
        },
        {
          "id": "2HAb20jpIZDpTRafkwtI8C",
          "title": "Smart contract fails to deliver promised returns, but doesn’t lose value",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "ICON is an open-source layer 1 delegated proof-of-stake (DPoS) blockchain and smart contract platform focused on connecting unique blockchains and their respective communities. ICON’s Blockchain Transmission Protocol (BTP) is a trustless and chain-agnostic interoperability solution that supports generic smart contract calls between connected blockchains. ICON offers a unique high-performance smart contract execution environment powered by the Java Virtual Machine (JVM) that is ideal for developing minimal-latency cross-chain dApps. The ICON blockchain is governed by validators elected through the network’s ICX staking and delegation mechanism.\n\nFor more information about ICON, please visit [https://www.icon.foundation/](https://www.icon.foundation/) and [https://build.icon.foundation/](https://build.icon.foundation/).",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2), focusing on the impact of the vulnerability reported.\n\nAll High and Critical Blockchain/DLT and Smart Contract bug reports require a Proof of Concept (PoC) to be eligible for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nICON requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. If the entity is an individual, the information needed are Name, Address, Nationality, Birthday, copy of ID card, copy of residence certificate, criminal records and personal relations with politicians.\nIf the entity is a company, business start date, address, country the business base on, copy of business certificate. And some information about people who have over 20% of the company's share. The collection of this information will be done by the ICON project team.\n\nPayouts are handled by the __ICON__ team directly and are denominated in USD. However, payouts are done in __ICX__. If you disagree with the KYC requirement or you are denied by the KYC process, payouts cannot be done.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n  - Python smart contract deployment scenarios\n  - Http request issues such as rate limiting, throttling, timeouts, or anything else that can be resolved on the server\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": null,
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "L1"
        ],
        "projectType": null,
        "ecosystem": [
          "Icon"
        ],
        "programType": [
          "Smart Contract",
          "Blockchain/DLT"
        ],
        "language": null
      },
      "legacy": {
        "technologies": [
          "Blockchain/DLT"
        ],
        "blockchain_rewards": [
          {
            "level": "Critical",
            "payout": "USD $100,000"
          },
          {
            "level": "High",
            "payout": "USD $25,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $100,000"
          },
          {
            "level": "High",
            "payout": "USD $25,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"ICON is an open-source layer 1 delegated proof-of-stake (DPoS) blockchain and smart contract platform focused on connecting unique blockchains and their respective communities. ICON\\u2019s Blockchain Transmission Protocol (BTP) is a trustless and chain-agnostic interoperability solution that supports generic smart contract calls between connected blockchains. ICON offers a unique high-performance smart contract execution environment powered by the Java Virtual Machine (JVM) that is ideal for developing minimal-latency cross-chain dApps. The ICON blockchain is governed by validators elected through the network\\u2019s ICX staking and delegation mechanism.\"), mdx(\"p\", null, \"For more information about ICON, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.icon.foundation/\"\n  }, \"https://www.icon.foundation/\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://build.icon.foundation/\"\n  }, \"https://build.icon.foundation/\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>ICON is an open-source layer 1 delegated proof-of-stake (DPoS) blockchain and smart contract platform focused on connecting unique blockchains and their respective communities. ICON’s Blockchain Transmission Protocol (BTP) is a trustless and chain-agnostic interoperability solution that supports generic smart contract calls between connected blockchains. ICON offers a unique high-performance smart contract execution environment powered by the Java Virtual Machine (JVM) that is ideal for developing minimal-latency cross-chain dApps. The ICON blockchain is governed by validators elected through the network’s ICX staking and delegation mechanism.</p><p>For more information about ICON, please visit <a href=\"https://www.icon.foundation/\">https://www.icon.foundation/</a> and <a href=\"https://build.icon.foundation/\">https://build.icon.foundation/</a>.</p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \", focusing on the impact of the vulnerability reported.\"), mdx(\"p\", null, \"All High and Critical Blockchain/DLT and Smart Contract bug reports require a Proof of Concept (PoC) to be eligible for a reward. Explanations and statements are not accepted as PoC and code is required.\"), mdx(\"p\", null, \"ICON requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. If the entity is an individual, the information needed are Name, Address, Nationality, Birthday, copy of ID card, copy of residence certificate, criminal records and personal relations with politicians.\\nIf the entity is a company, business start date, address, country the business base on, copy of business certificate. And some information about people who have over 20% of the company's share. The collection of this information will be done by the ICON project team.\"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ICON\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ICX\"), \". If you disagree with the KYC requirement or you are denied by the KYC process, payouts cannot be done.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>, focusing on the impact of the vulnerability reported.</p><p>All High and Critical Blockchain/DLT and Smart Contract bug reports require a Proof of Concept (PoC) to be eligible for a reward. Explanations and statements are not accepted as PoC and code is required.</p><p>ICON requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. If the entity is an individual, the information needed are Name, Address, Nationality, Birthday, copy of ID card, copy of residence certificate, criminal records and personal relations with politicians.\nIf the entity is a company, business start date, address, country the business base on, copy of business certificate. And some information about people who have over 20% of the company&#x27;s share. The collection of this information will be done by the ICON project team.</p><p>Payouts are handled by the <strong>ICON</strong> team directly and are denominated in USD. However, payouts are done in <strong>ICX</strong>. If you disagree with the KYC requirement or you are denied by the KYC process, payouts cannot be done.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Python smart contract deployment scenarios\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Http request issues such as rate limiting, throttling, timeouts, or anything else that can be resolved on the server\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li><li>Python smart contract deployment scenarios</li><li>Http request issues such as rate limiting, throttling, timeouts, or anything else that can be resolved on the server</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

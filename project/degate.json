{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "degate",
      "slug": "degate",
      "project": "DeGate",
      "maxBounty": 1110000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/67fYbqNBbkrrWPxJsdB78q/96c2c9102034a4815435b434b6155fb2/DeGate_logo.jpeg",
      "launchDate": "2023-04-06T12:00-04:00",
      "updatedDate": "2023-09-14T09:48:27.058Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $1,110,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $100,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,500",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "critical",
          "payout": "USD $100,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "high",
          "payout": "USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "medium",
          "payout": "USD $2,500",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "7HsJwRE7PmWJHhMMtuNGwd",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/contracts/core/iface/ExchangeData.sol",
          "description": "Exchange Data"
        },
        {
          "id": "3rVdudrvYlMfv4I1cvbeLW",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/contracts/core/iface/IBlockVerifier.sol",
          "description": "IBlock Verifier"
        },
        {
          "id": "6ZcdnqHtz4Z1QUC2fRW3zx",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/contracts/core/iface/IDepositContract.sol",
          "description": "IDeposit Contract"
        },
        {
          "id": "nFg0p4TrBZiUfP1r8mVaI",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/contracts/core/iface/IExchangeV3.sol",
          "description": "IExchange V3"
        },
        {
          "id": "6Gb5jq4KBs5wrRD6Ai39pP",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/contracts/core/iface/ILoopringV3.sol",
          "description": "ILoopring V3"
        },
        {
          "id": "2h2oxcaX42ILoG25cmhspV",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/contracts/core/impl/BlockVerifier.sol",
          "description": "Block Verifier"
        },
        {
          "id": "1O7HskEfVmfuajgLqDiMZB",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/contracts/core/impl/DefaultDepositContract.sol",
          "description": "Default Deposit Contract"
        },
        {
          "id": "7yDoLxLj9wqVg8mhnTxmbp",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/contracts/core/impl/ExchangeV3.sol",
          "description": "Exchange V3"
        },
        {
          "id": "Q8JJvZQgmXQv84vF3jbOC",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/contracts/core/impl/LoopringV3.sol",
          "description": "Loopring V3"
        },
        {
          "id": "3icLdaEfIekrjIf77hHoy7",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/contracts/core/impl/VerificationKeys.sol",
          "description": "Verification Keys"
        },
        {
          "id": "45XDoWfqEN11H3ITK48dkc",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/tree/degate1.1.0/packages/loopring_v3/contracts/core/impl/libexchange",
          "description": "Lib Exchange"
        },
        {
          "id": "2ci3WgpPLeNevnTwO1vlP1",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/tree/degate1.1.0/packages/loopring_v3/contracts/core/impl/libtransactions",
          "description": " Lib Transactions"
        },
        {
          "id": "7Hkux5NRGSfWcNcjIxtqkJ",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/tree/degate1.1.0/packages/loopring_v3/contracts/lib",
          "description": "Lib"
        },
        {
          "id": "4f9ERQYITXtWNsFVMFYair",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/tree/degate1.1.0/packages/loopring_v3/contracts/aux",
          "description": "Aux"
        },
        {
          "id": "2c3ZuR6evHDFzJXXNEKWAL",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/circuit/Circuits/UniversalCircuit.h",
          "description": "Universal Circuit"
        },
        {
          "id": "7gZK9D5ZVo63j9OAC4rRhU",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/circuit/Circuits/BaseTransactionCircuit.h",
          "description": "Base Transaction Circuit"
        },
        {
          "id": "6CbW7rrwLQyuyKF5fBbEZV",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/circuit/Circuits/Circuit.h",
          "description": "Circuit"
        },
        {
          "id": "4LtOo4i1PTCmS7DdH7hf97",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/circuit/Circuits/NoopCircuit.h",
          "description": "Noop Circuit"
        },
        {
          "id": "hUI8yTG4YiXPtNVjOe7Ft",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/circuit/Circuits/DepositCircuit.h",
          "description": "Deposit Circuit"
        },
        {
          "id": "7zlWWdLeqdse2FpkzyFvo1",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/circuit/Circuits/AccountUpdateCircuit.h",
          "description": "Account Update Circuit"
        },
        {
          "id": "40U1mG9YLdtkdSYJDrd0Rq",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/circuit/Circuits/AppKeyUpdateCircuit.h",
          "description": "App Key Update Circuit"
        },
        {
          "id": "6Rnx9qSYiFK2vBeLqfFqvJ",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/circuit/Circuits/TransferCircuit.h",
          "description": "Transfer Circuit"
        },
        {
          "id": "VlAwbfuPmn0AUM50Kth3H",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/circuit/Circuits/WithdrawCircuit.h",
          "description": "Withdraw Circuit"
        },
        {
          "id": "6bdlT10J42boUMszt2LMUg",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/circuit/Circuits/SpotTradeCircuit.h",
          "description": "Spot Trade Circuit"
        },
        {
          "id": "OTDzC54LgAVmaWRlujqBX",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/circuit/Circuits/OrderCancelCircuit.h",
          "description": "Order Cancel Circuit"
        },
        {
          "id": "uRQfvbAj8XdZB5N5tyDNj",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/circuit/Gadgets/AccountGadgets.h",
          "description": "Account Gadgets"
        },
        {
          "id": "1OyVWJFSI1dZP7XpdFLe7z",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/circuit/Gadgets/BatchOrderGadgets.h",
          "description": "Batch Order Gadgets"
        },
        {
          "id": "7nBrVpfFCxTS1MIE5sHyVP",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/circuit/Gadgets/MatchingGadgets.h",
          "description": "Matching Gadgets"
        },
        {
          "id": "LDUjUU37tkqqd2Jlz9BiN",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/circuit/Gadgets/MathGadgets.h",
          "description": "Math Gadgets"
        },
        {
          "id": "3BbnUfvvZFX7TdLF4fqvs7",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/circuit/Gadgets/MerkleTree.h",
          "description": "Merkle Tree"
        },
        {
          "id": "5Ek8pGnYdEvPHXjGeg3jhg",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/circuit/Gadgets/OrderGadgets.h",
          "description": "Order Gadgets"
        },
        {
          "id": "T8LbPryTHrypGLyLjLKGr",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/circuit/Gadgets/SignatureGadgets.h",
          "description": "Signature Gadgets "
        },
        {
          "id": "5bBlus7pt40lZ6iK4SusuG",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/circuit/Gadgets/StorageGadgets.h",
          "description": "Storage Gadgets"
        },
        {
          "id": "7TJ1xdF086uO4hTqO0ZJO",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/circuit/Utils/Constants.h",
          "description": "Constants"
        },
        {
          "id": "6IN9OHjs1XMx7Q8gklf4j5",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/circuit/Utils/Data.h",
          "description": "Data"
        },
        {
          "id": "5yxpgtSRpzGJ1WHmJwezlM",
          "type": "smart_contract",
          "url": "https://github.com/degatedev/protocols/blob/degate1.1.0/packages/loopring_v3/circuit/Utils/Utils.h",
          "description": "Utils"
        },
        {
          "id": "5VdxwtjIqdKU3AyeU13ABE",
          "type": "websites_and_applications",
          "url": "https://testnet.degate.com/",
          "description": "Main Website"
        },
        {
          "id": "1V50mxoMDRQPKWNsglUOoI",
          "type": "websites_and_applications",
          "url": "https://github.com/degatedev/degate-sdk-python",
          "description": "Python SDK"
        },
        {
          "id": "3XTdZKwBeusuk458smwqjl",
          "type": "websites_and_applications",
          "url": "https://github.com/degatedev/degate-sdk-golang",
          "description": "Go SDK"
        },
        {
          "id": "6FTpO1WfnrqZvuAPUhVJuJ",
          "type": "websites_and_applications",
          "url": "https://api-docs.degate.com/spot",
          "description": "Api docs"
        },
        {
          "id": "5I8BKTAt118aqvXsChOyJq",
          "type": "websites_and_applications",
          "url": "https://testnet-backend.degate.com/",
          "description": "Backend"
        }
      ],
      "impacts": [
        {
          "id": "2u7mf4lWKvwCbiMd8T89CT",
          "title": "Direct theft of funds exceeding 1,000,000 USD from the Default Deposit Contract",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2w7UNKNDSabns0rblevx4v",
          "title": "Permanent freezing of funds exceeding 2,500,000 USD in the Default Deposit Contract",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1AYaEJBismR53ivNq0HjeH",
          "title": "Execute arbitrary system commands",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "4bE2g9zMLUxzMSUOkfBsp5",
          "title": "Retrieve sensitive data/files from a running server such as: /etc/shadow, database passwords, blockchain keys (this does not include non-sensitive environment variables, open source code, or usernames)",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "1aeIF8shrUhAXHNWBS20Q3",
          "title": "Taking state-modifying authenticated actions (with or without blockchain state interaction) on behalf of other users without any interaction by that user, such as: changing registration information, making trades, internal transfer, withdrawals, etc.",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "4abypihfY7ukkhtz8Fo2Xu",
          "title": "Malicious interactions with an already-connected wallet such as: modifying transaction arguments or parameters, substituting contract addresses, submitting malicious transactions",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "VdAquRf9sDqohdJgnh5Of",
          "title": "Theft of funds from the Default Deposit Contract that requires malicious actions from the DeGate Operator",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "3RtMJE3C4Litrf4Lscc6Ax",
          "title": "Permanent freezing of funds from the Default Deposit Contract that requires malicious actions from the DeGate Operator",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "5p5GDbQJm3kLqGEOU6MVif",
          "title": "Direct theft of user funds from the Default Deposit Contract that is less than 1,000,000 USD",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "1m9xbaWC9C0OHlmPV4X9Qc",
          "title": "Permanent freezing of funds in the Default Deposit Contract that is less than 2,500,000 USD",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6fJZ9fbKiJ7Ct7Nsz5Wk0d",
          "title": "Force DeGate into Exodus Mode",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "4WcioCSHITOr19x73QTeZr",
          "title": "Protocol insolvency",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "75TDmGdISsvOgmnmC5my56",
          "title": "Impact of this malicious contract verification through zk-proof",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6UeoDkZZ8uKWENywz7iIBb",
          "title": "The amount of tokens in the L2 is inconsistent with that of the L1, except for Non-Standard tokens (Zero Knowledge Proof Circuit)",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "3EgofFz5uvWSKzDKoYOUpE",
          "title": "Climbing blocks fails to recovery the asset tree (Zero Knowledge Proof Circuit)",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "qi6kxciK7mfGYq0R7d0Qv",
          "title": "Temporary freezing of funds: Minimum freezing of 15 days (Zero Knowledge Proof Circuit)",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "4fdHA7aEYsYO5kFAlmUTP3",
          "title": "Prevent new token from registering (Zero Knowledge Proof Circuit)",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "o461Y8MyMeQm84diog5Sc",
          "title": "Steal trading fee or gas fee (Zero Knowledge Proof Circuit)",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "5dxMQLCzzdSIqeIlxh32G1",
          "title": "Prevent new users from registering (Zero Knowledge Proof Circuit)",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "44rSCtkMb20L0nTNthOgIG",
          "title": "The account cannot be used (Zero Knowledge Proof Circuit)",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "tttlDK4i4TagPhTFozLyx",
          "title": "Injecting/modifying the static content on the target application without Javascript (Persistent) such as: HTML injection without Javascript Replacing existing text with arbitrary text Arbitrary file uploads, etc",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "3yhvlXpqcfdduy2r7lLzTc",
          "title": "Smart contract unable to operate due to lack of token funds: Minimum 24hrs",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "48mFInpcHZPcNfhNwDh0hM",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5ZTBO8PvL95KM1GcgShwe8",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3pp99WZ12gkviFbKtq30tA",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "2XYBSExdN36XV17CoXdnuo",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5Pi3ONl1wwAq89tDRpWqqC",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "ZEO1VmcRjDKnGyMnLze2t",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "6woDthYmIAFjR2X5rxBLl7",
          "title": "Changing non-sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, such as: theme config, langage config,  post only config, traded pairs",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "2OzO4mEhcM9PE4MwUTyATr",
          "title": "Injecting/modifying the static content on the target application without Javascript (Reflected) such as: reflected HTML injection, loading external site data",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "1rZqchpMzc8qkEJRcTRMBo",
          "title": "Redirecting users to malicious websites (Open Redirect)",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "1TqaYS5FyaXK4V5yDEePvH",
          "title": "Circuit fails to work correctly, but doesn’t lose value (Zero Knowledge Proof Circuit)",
          "type": "smart_contract",
          "severity": "low"
        },
        {
          "id": "3p46CEpU2f5h7fmojYFHLT",
          "title": "Contract fails to deliver promised returns, but doesn't lose value",
          "type": "smart_contract",
          "severity": "low"
        },
        {
          "id": "3jcgBjA1edC0ywjhVP47Xs",
          "title": "Changing details of other users (including modifying browser local storage) without already-connected wallet interaction and with significant user interaction such as: iframing leading to modifying the backend/browser state (demonstrate impact with PoC)",
          "type": "websites_and_applications",
          "severity": "low"
        },
        {
          "id": "cdMcdyBfIuUyZTBRZdOsd",
          "title": "Taking over broken or expired outgoing links such as: Social media handles, etc",
          "type": "websites_and_applications",
          "severity": "low"
        },
        {
          "id": "3bOxKGXbtokecmkIJl42Hq",
          "title": "Temporarily disabling user to access target site, such as: locking up the victim from login, cookie bombing, etc",
          "type": "websites_and_applications",
          "severity": "low"
        }
      ],
      "programOverview": "[DeGate](https://degate.com/) is a decentralized orderbook exchange (DEX) built on the Ethereum blockchain that utilizes zero-knowledge technology. DeGate DEX offers spot market trading with limit orders and also offers a grid trading function.\n\nDeGate operates as a decentralized autonomous organization (DAO). The DEX platform is focused on being user-friendly and is built on the principle of Trustlessness, or ‘Can’t do evil’, with no admin key. With DeGate’s unique Efficient Gas Saving technology, users can expect super-low gas fees while using a decentralized protocol. Another critical component of DeGate is the Permissionless Listing feature which enables any token to be listed in a permissionless manner on DeGate’s orderbook DEX.\n\nFor more information about DeGate, please visit [https://docs.degate.com/](https://docs.degate.com/).\n\nDeGate Testnet is currently live on[ https://testnet.degate.com/](https://testnet.degate.com/), and more details can be found in the product documentation ([https://docs.degate.com/v/product_en/overview](https://docs.degate.com/v/product_en/overview))\n\nThe bounty environment has been deployed on Public Testnet, whose code was open sourced on [Github](https://github.com/degatedev/protocols/tree/degate1.0.0) , along with the [Protocol Specification Docs](https://github.com/degatedev/protocols/blob/degate1.0.0/DeGate%20Protocol%20Specification%20Document.md), [Circuit Design Docs](https://github.com/degatedev/protocols/blob/degate1.0.0/Circuit%20Design.md) and [Smart Contract Design Docs](https://github.com/degatedev/protocols/blob/degate1.0.0/Smart%20Contract%20Design.md).\n\n__For Whitehats__: It is highly recommended that you review the details of this program in full. Although many Bug Bounty programs have standard terms and conditions, each also has their own unique details that are critical to your success.  \n\nPrior to submitting a report please review the [Immunefi Bug Report Template and Best Practices](https://immunefisupport.zendesk.com/hc/en-us/articles/12435277406481-Bug-Report-Template). ",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are considered out-of-scope and ineligible for payout.",
      "rewardsBody": "__Reward Distribution__\n\nPlease review how rewards are distributed based on the [Immunefi Vulnerability Severity Classification System V2.3](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3/). This is a simplified 4-level scale system with separate scales for Smart Contracts and Websites/Apps.\n\n__Payouts and Payout Requirements:__\n\nPayouts are handled by the DeGate team directly and are denominated in __USD__. However, payouts are done in __USDC__. DeGate commits to honoring payouts according to the terms set out in this program at the time of report submission, and to treat this program as the agreement and source of truth concerning bug reports and responsible disclosures. \n\nFor the purposes of determining report validity, this is a Primacy of Impact program. \n\nLearn more about report validity best practices here: [Best Practice - Primacy of Impact vs Primacy of Rules. ](https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact)\n\nDeGate does not have a Know Your Customer (KYC) requirement for bug bounty payouts. \n\n__Audit Discoveries and Known Issues:__\n\nBug reports covering previously-discovered bugs are not eligible for any reward through the bug bounty program. If a bug report covers a known issue, it may be rejected together with proof of the issue being known before escalation of the bug report via Immunefi. \n\nPrevious audits and known issues can be found at\n[\nhttps://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/Trailofbits%20-%20DeGate%20Final%20Audit%20Report.pdf](https://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/Trailofbits%20-%20DeGate%20Final%20Audit%20Report.pdf)(Previous code)\n\n[https://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/Least%20Authority%20-%20DeGate%20DAO%20DeGate%20Smart%20Contracts%20Updated%20Final%20Audit%20Report.pdf](https://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/Least%20Authority%20-%20DeGate%20DAO%20DeGate%20Smart%20Contracts%20Updated%20Final%20Audit%20Report.pdf)  (Previous code)\n\n[https://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/Least%20Authority%20-%20DeGate%20Technology%20DeGate%20zk-SNARK%20Circuit%20Final%20Audit%20Report.pdf](https://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/Least%20Authority%20-%20DeGate%20Technology%20DeGate%20zk-SNARK%20Circuit%20Final%20Audit%20Report.pdf) (Previous code)\n\n[https://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/DeGate_Report_EN-final2023.pdf](https://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/DeGate_Report_EN-final2023.pdf) (Previous code)\n\n[https://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/DeGate_Report_EN-final20230912.pdf](https://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/DeGate_Report_EN-final20230912.pdf) (Latest code)",
      "outOfScopeAndRules": "\nThe following impacts and attack vectors are excluded from rewards by default for all Immunefi bug bounty programs: \n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist), except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\n  - Broken link hijacking is out of scope\n\n__Smart Contracts and Blockchain/DLT__\n\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n  - Impacts involving balance changes and authority freezes caused by the token contract itself, such as rebase tokens\n  - Impacts involving the need to use more than 300 ETH in gas fees to force entry into Exodus Mode through block stuffing, storage occupation, or executing other potential economic attacks.\n\n__Websites and Apps__\n  - Theoretical impacts without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - Attacks involving DDoS\n  - Attacks requiring privileged access from within the organization\n  - SPF records for email domains\n  - Feature requests\n  - Best practices\n  - Vulnerabilities primarily caused by browser/plugin defects\n  - Any vulnerability exploit requiring CSP bypass resulting from a browser bug\n\n__Prohibited Activities__\nThe following activities are prohibited by this bug bounty program. Violation of these rules can result in a temporary suspension or permanent ban from the Immunefi platform at the sole discretion of the Immunefi team, which may also result in: 1) the forfeiture and loss of access to all bug submissions, and 2) zero payout. \n\nPlease note that Immunefi has no tolerance for spam/low-quality/incomplete bug reports, “beg bounty” behavior, and misrepresentation of assets and severity. Immunefi exists to protect the global crypto community, not facilitate grift.\n\nProhibited: \n\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty\n  - [Any other actions prohibited by the Immunefi Rules](https://immunefi.com/rules/). These rules are subject to change at any time.  \n",
      "assetsBodyV2": "Impacts only apply to assets in active use by the project like contracts on mainnet or web/app assets used in production. Any impact that applies to assets not in active use, like test or mock files, are out-of-scope of the bug bounty program unless explicitly mentioned as in-scope. \n\n__Smart Contracts and Zero Knowledge Proof Circuit__\n\n__Smart Contracts - PoC__, Regarding the 'Critical' level issues, the Proof of Concept (POC) for the circuit and smart contract is valid only if the white hat individuals involved can show that they can initiate and carry out attacks on their own. There is no such restriction for POCs of levels other than 'Critical'. Exceptions may be made in cases where the vulnerability is objectively evident from simply mentioning the vulnerability and where it exists. However, the bug reporter may be required to provide a PoC at any point in time.\n\n- For more information on PoCs please visit: [Proof of Concept (PoC) Guidelines and Rules](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules)\n- All smart contracts of DeGate can be found at: [https://github.com/degatedev/protocols/tree/degate1.1.0/packages/loopring_v3/contracts](https://github.com/degatedev/protocols/tree/degate1.1.0/packages/loopring_v3/contracts)\n\n__Web/App__ \n\n__Web/App__ - Bug reports are to include a runnable Proof of Concept (PoC) in order to prove impact. \n\nAll web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. All PoC content must adhere to the [PoC guidelines and rules of Immunefi](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules). In the event that a PoC requires an attack on a web/app asset provided, they must still adhere to the rules provided, otherwise eligibility for a reward may be revoked. \n\nFor more information on PoCs please visit: [Proof of Concept (PoC) Guidelines and Rules](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules)\n\nWhitehats we highly encourage you to review any potential subdomains and what specific port(s) are in scope. Even though the domain may be the same, different ports may point to different assets.  \n\n__Dev Environment and Documentation:__\n\nDeGate has included dev documentation and/or instructions to help in reviewing code and exploring for bugs:\n- [https://docs.degate.com/v/product_en/overview](https://docs.degate.com/v/product_en/overview)\n- [https://github.com/degatedev/protocols/blob/degate1.1.0/DeGate%20Protocol%20Specification%20Document.md](https://github.com/degatedev/protocols/blob/degate1.1.0/DeGate%20Protocol%20Specification%20Document.md)\n- [https://github.com/degatedev/protocols/blob/degate1.1.0/Circuit%20Design.md](https://github.com/degatedev/protocols/blob/degate1.1.0/Circuit%20Design.md)\n- [https://github.com/degatedev/protocols/blob/degate1.1.0/Smart%20Contract%20Design.md](https://github.com/degatedev/protocols/blob/degate1.1.0/Smart%20Contract%20Design.md)\n\n__Impacts to other assets__ \n\nHackers are encouraged to submit issues outside of the outlined Impacts and Assets in Scope. \n\nIf whitehats can demonstrate a critical impact on code in production for an asset not in scope, DeGate encourages you to submit your bug report using the “primacy of impact exception” asset. \n\n__Impacts in Scope__\n\n(For Blockchain/DLTR and Smart Contracts Only) This program is considered to be governed by Primacy of Impact. For more information on what this means visit: [Best Practice - Primacy of Impact vs Primacy of Rules.](https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact) \n\nImpacts are based on the [https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3/](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3/)\n\nAt Immunefi, we classify bugs on a simplified 4-level scale:\n- Critical\n- High\n- Medium\n- Low\n",
      "impactsBody": "Only the following impacts are accepted within this bug bounty program. All other impacts are considered out-of-scope and ineligible for payout.",
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "DEX",
          "L2",
          "Asset Management"
        ],
        "projectType": [
          "Exchange",
          "Defi"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "language": [
          "Go",
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $1,110,000"
          },
          {
            "level": "High",
            "payout": "USD $100,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,500"
          }
        ],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "USD $100,000"
          },
          {
            "level": "High",
            "payout": "USD $5,000"
          },
          {
            "level": "Medium",
            "payout": "USD $2,500"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ]
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://degate.com/\"\n  }, \"DeGate\"), \" is a decentralized orderbook exchange (DEX) built on the Ethereum blockchain that utilizes zero-knowledge technology. DeGate DEX offers spot market trading with limit orders and also offers a grid trading function.\"), mdx(\"p\", null, \"DeGate operates as a decentralized autonomous organization (DAO). The DEX platform is focused on being user-friendly and is built on the principle of Trustlessness, or \\u2018Can\\u2019t do evil\\u2019, with no admin key. With DeGate\\u2019s unique Efficient Gas Saving technology, users can expect super-low gas fees while using a decentralized protocol. Another critical component of DeGate is the Permissionless Listing feature which enables any token to be listed in a permissionless manner on DeGate\\u2019s orderbook DEX.\"), mdx(\"p\", null, \"For more information about DeGate, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.degate.com/\"\n  }, \"https://docs.degate.com/\"), \".\"), mdx(\"p\", null, \"DeGate Testnet is currently live on\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://testnet.degate.com/\"\n  }, \" https://testnet.degate.com/\"), \", and more details can be found in the product documentation (\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.degate.com/v/product_en/overview\"\n  }, \"https://docs.degate.com/v/product_en/overview\"), \")\"), mdx(\"p\", null, \"The bounty environment has been deployed on Public Testnet, whose code was open sourced on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/degatedev/protocols/tree/degate1.0.0\"\n  }, \"Github\"), \" , along with the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/degatedev/protocols/blob/degate1.0.0/DeGate%20Protocol%20Specification%20Document.md\"\n  }, \"Protocol Specification Docs\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/degatedev/protocols/blob/degate1.0.0/Circuit%20Design.md\"\n  }, \"Circuit Design Docs\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/degatedev/protocols/blob/degate1.0.0/Smart%20Contract%20Design.md\"\n  }, \"Smart Contract Design Docs\"), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"For Whitehats\"), \": It is highly recommended that you review the details of this program in full. Although many Bug Bounty programs have standard terms and conditions, each also has their own unique details that are critical to your success.  \"), mdx(\"p\", null, \"Prior to submitting a report please review the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/12435277406481-Bug-Report-Template\"\n  }, \"Immunefi Bug Report Template and Best Practices\"), \". \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p><a href=\"https://degate.com/\">DeGate</a> is a decentralized orderbook exchange (DEX) built on the Ethereum blockchain that utilizes zero-knowledge technology. DeGate DEX offers spot market trading with limit orders and also offers a grid trading function.</p><p>DeGate operates as a decentralized autonomous organization (DAO). The DEX platform is focused on being user-friendly and is built on the principle of Trustlessness, or ‘Can’t do evil’, with no admin key. With DeGate’s unique Efficient Gas Saving technology, users can expect super-low gas fees while using a decentralized protocol. Another critical component of DeGate is the Permissionless Listing feature which enables any token to be listed in a permissionless manner on DeGate’s orderbook DEX.</p><p>For more information about DeGate, please visit <a href=\"https://docs.degate.com/\">https://docs.degate.com/</a>.</p><p>DeGate Testnet is currently live on<a href=\"https://testnet.degate.com/\"> https://testnet.degate.com/</a>, and more details can be found in the product documentation (<a href=\"https://docs.degate.com/v/product_en/overview\">https://docs.degate.com/v/product_en/overview</a>)</p><p>The bounty environment has been deployed on Public Testnet, whose code was open sourced on <a href=\"https://github.com/degatedev/protocols/tree/degate1.0.0\">Github</a> , along with the <a href=\"https://github.com/degatedev/protocols/blob/degate1.0.0/DeGate%20Protocol%20Specification%20Document.md\">Protocol Specification Docs</a>, <a href=\"https://github.com/degatedev/protocols/blob/degate1.0.0/Circuit%20Design.md\">Circuit Design Docs</a> and <a href=\"https://github.com/degatedev/protocols/blob/degate1.0.0/Smart%20Contract%20Design.md\">Smart Contract Design Docs</a>.</p><p><strong>For Whitehats</strong>: It is highly recommended that you review the details of this program in full. Although many Bug Bounty programs have standard terms and conditions, each also has their own unique details that are critical to your success.  </p><p>Prior to submitting a report please review the <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/12435277406481-Bug-Report-Template\">Immunefi Bug Report Template and Best Practices</a>. </p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are considered out-of-scope and ineligible for payout.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are considered out-of-scope and ineligible for payout.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Reward Distribution\")), mdx(\"p\", null, \"Please review how rewards are distributed based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3/\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.3\"), \". This is a simplified 4-level scale system with separate scales for Smart Contracts and Websites/Apps.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Payouts and Payout Requirements:\")), mdx(\"p\", null, \"Payouts are handled by the DeGate team directly and are denominated in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD\"), \". However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \". DeGate commits to honoring payouts according to the terms set out in this program at the time of report submission, and to treat this program as the agreement and source of truth concerning bug reports and responsible disclosures. \"), mdx(\"p\", null, \"For the purposes of determining report validity, this is a Primacy of Impact program. \"), mdx(\"p\", null, \"Learn more about report validity best practices here: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact\"\n  }, \"Best Practice - Primacy of Impact vs Primacy of Rules. \")), mdx(\"p\", null, \"DeGate does not have a Know Your Customer (KYC) requirement for bug bounty payouts. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Audit Discoveries and Known Issues:\")), mdx(\"p\", null, \"Bug reports covering previously-discovered bugs are not eligible for any reward through the bug bounty program. If a bug report covers a known issue, it may be rejected together with proof of the issue being known before escalation of the bug report via Immunefi. \"), mdx(\"p\", null, \"Previous audits and known issues can be found at\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/Trailofbits%20-%20DeGate%20Final%20Audit%20Report.pdf\"\n  }, \"\\nhttps://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/Trailofbits%20-%20DeGate%20Final%20Audit%20Report.pdf\"), \"(Previous code)\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/Least%20Authority%20-%20DeGate%20DAO%20DeGate%20Smart%20Contracts%20Updated%20Final%20Audit%20Report.pdf\"\n  }, \"https://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/Least%20Authority%20-%20DeGate%20DAO%20DeGate%20Smart%20Contracts%20Updated%20Final%20Audit%20Report.pdf\"), \"  (Previous code)\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/Least%20Authority%20-%20DeGate%20Technology%20DeGate%20zk-SNARK%20Circuit%20Final%20Audit%20Report.pdf\"\n  }, \"https://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/Least%20Authority%20-%20DeGate%20Technology%20DeGate%20zk-SNARK%20Circuit%20Final%20Audit%20Report.pdf\"), \" (Previous code)\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/DeGate_Report_EN-final2023.pdf\"\n  }, \"https://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/DeGate_Report_EN-final2023.pdf\"), \" (Previous code)\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/DeGate_Report_EN-final20230912.pdf\"\n  }, \"https://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/DeGate_Report_EN-final20230912.pdf\"), \" (Latest code)\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p><strong>Reward Distribution</strong></p><p>Please review how rewards are distributed based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3/\">Immunefi Vulnerability Severity Classification System V2.3</a>. This is a simplified 4-level scale system with separate scales for Smart Contracts and Websites/Apps.</p><p><strong>Payouts and Payout Requirements:</strong></p><p>Payouts are handled by the DeGate team directly and are denominated in <strong>USD</strong>. However, payouts are done in <strong>USDC</strong>. DeGate commits to honoring payouts according to the terms set out in this program at the time of report submission, and to treat this program as the agreement and source of truth concerning bug reports and responsible disclosures. </p><p>For the purposes of determining report validity, this is a Primacy of Impact program. </p><p>Learn more about report validity best practices here: <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact\">Best Practice - Primacy of Impact vs Primacy of Rules. </a></p><p>DeGate does not have a Know Your Customer (KYC) requirement for bug bounty payouts. </p><p><strong>Audit Discoveries and Known Issues:</strong></p><p>Bug reports covering previously-discovered bugs are not eligible for any reward through the bug bounty program. If a bug report covers a known issue, it may be rejected together with proof of the issue being known before escalation of the bug report via Immunefi. </p><p>Previous audits and known issues can be found at\n<a href=\"https://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/Trailofbits%20-%20DeGate%20Final%20Audit%20Report.pdf\">\nhttps://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/Trailofbits%20-%20DeGate%20Final%20Audit%20Report.pdf</a>(Previous code)</p><p><a href=\"https://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/Least%20Authority%20-%20DeGate%20DAO%20DeGate%20Smart%20Contracts%20Updated%20Final%20Audit%20Report.pdf\">https://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/Least%20Authority%20-%20DeGate%20DAO%20DeGate%20Smart%20Contracts%20Updated%20Final%20Audit%20Report.pdf</a>  (Previous code)</p><p><a href=\"https://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/Least%20Authority%20-%20DeGate%20Technology%20DeGate%20zk-SNARK%20Circuit%20Final%20Audit%20Report.pdf\">https://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/Least%20Authority%20-%20DeGate%20Technology%20DeGate%20zk-SNARK%20Circuit%20Final%20Audit%20Report.pdf</a> (Previous code)</p><p><a href=\"https://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/DeGate_Report_EN-final2023.pdf\">https://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/DeGate_Report_EN-final2023.pdf</a> (Previous code)</p><p><a href=\"https://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/DeGate_Report_EN-final20230912.pdf\">https://github.com/degatedev/protocols/blob/degate_mainnet/packages/loopring_v3/security_audit/DeGate_Report_EN-final20230912.pdf</a> (Latest code)</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following impacts and attack vectors are excluded from rewards by default for all Immunefi bug bounty programs: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist), except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Broken link hijacking is out of scope\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain/DLT\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts involving balance changes and authority freezes caused by the token contract itself, such as rebase tokens\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts involving the need to use more than 300 ETH in gas fees to force entry into Exodus Mode through block stuffing, storage occupation, or executing other potential economic attacks.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theoretical impacts without any proof or demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Content spoofing / Text injection issues\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Self-XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Captcha bypass using OCR\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with no security impact (logout CSRF, change language, etc.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as \\u201Chttponly\\u201D)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Server-side information disclosure such as IPs, server names, and most stack traces\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities used to enumerate or confirm the existence of users or tenants\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities requiring unlikely user actions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of SSL/TLS best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks involving DDoS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring privileged access from within the organization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SPF records for email domains\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Feature requests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities primarily caused by browser/plugin defects\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any vulnerability exploit requiring CSP bypass resulting from a browser bug\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Prohibited Activities\"), \"\\nThe following activities are prohibited by this bug bounty program. Violation of these rules can result in a temporary suspension or permanent ban from the Immunefi platform at the sole discretion of the Immunefi team, which may also result in: 1) the forfeiture and loss of access to all bug submissions, and 2) zero payout. \"), mdx(\"p\", null, \"Please note that Immunefi has no tolerance for spam/low-quality/incomplete bug reports, \\u201Cbeg bounty\\u201D behavior, and misrepresentation of assets and severity. Immunefi exists to protect the global crypto community, not facilitate grift.\"), mdx(\"p\", null, \"Prohibited: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://immunefi.com/rules/\"\n  }, \"Any other actions prohibited by the Immunefi Rules\"), \". These rules are subject to change at any time.  \")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following impacts and attack vectors are excluded from rewards by default for all Immunefi bug bounty programs: </p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist), except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible</li><li>Broken link hijacking is out of scope</li></ul><p><strong>Smart Contracts and Blockchain/DLT</strong></p><ul><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li><li>Impacts involving balance changes and authority freezes caused by the token contract itself, such as rebase tokens</li><li>Impacts involving the need to use more than 300 ETH in gas fees to force entry into Exodus Mode through block stuffing, storage occupation, or executing other potential economic attacks.</li></ul><p><strong>Websites and Apps</strong></p><ul><li>Theoretical impacts without any proof or demonstration</li><li>Content spoofing / Text injection issues</li><li>Self-XSS</li><li>Captcha bypass using OCR</li><li>CSRF with no security impact (logout CSRF, change language, etc.)</li><li>Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)</li><li>Server-side information disclosure such as IPs, server names, and most stack traces</li><li>Vulnerabilities used to enumerate or confirm the existence of users or tenants</li><li>Vulnerabilities requiring unlikely user actions</li><li>URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)</li><li>Lack of SSL/TLS best practices</li><li>Attacks involving DDoS</li><li>Attacks requiring privileged access from within the organization</li><li>SPF records for email domains</li><li>Feature requests</li><li>Best practices</li><li>Vulnerabilities primarily caused by browser/plugin defects</li><li>Any vulnerability exploit requiring CSP bypass resulting from a browser bug</li></ul><p><strong>Prohibited Activities</strong>\nThe following activities are prohibited by this bug bounty program. Violation of these rules can result in a temporary suspension or permanent ban from the Immunefi platform at the sole discretion of the Immunefi team, which may also result in: 1) the forfeiture and loss of access to all bug submissions, and 2) zero payout. </p><p>Please note that Immunefi has no tolerance for spam/low-quality/incomplete bug reports, “beg bounty” behavior, and misrepresentation of assets and severity. Immunefi exists to protect the global crypto community, not facilitate grift.</p><p>Prohibited: </p><ul><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li><li><a href=\"https://immunefi.com/rules/\">Any other actions prohibited by the Immunefi Rules</a>. These rules are subject to change at any time.  </li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Impacts only apply to assets in active use by the project like contracts on mainnet or web/app assets used in production. Any impact that applies to assets not in active use, like test or mock files, are out-of-scope of the bug bounty program unless explicitly mentioned as in-scope. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Zero Knowledge Proof Circuit\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts - PoC\"), \", Regarding the 'Critical' level issues, the Proof of Concept (POC) for the circuit and smart contract is valid only if the white hat individuals involved can show that they can initiate and carry out attacks on their own. There is no such restriction for POCs of levels other than 'Critical'. Exceptions may be made in cases where the vulnerability is objectively evident from simply mentioning the vulnerability and where it exists. However, the bug reporter may be required to provide a PoC at any point in time.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For more information on PoCs please visit: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\"\n  }, \"Proof of Concept (PoC) Guidelines and Rules\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All smart contracts of DeGate can be found at: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/degatedev/protocols/tree/degate1.1.0/packages/loopring_v3/contracts\"\n  }, \"https://github.com/degatedev/protocols/tree/degate1.1.0/packages/loopring_v3/contracts\"))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Web/App\"), \" \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Web/App\"), \" - Bug reports are to include a runnable Proof of Concept (PoC) in order to prove impact. \"), mdx(\"p\", null, \"All web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. All PoC content must adhere to the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\"\n  }, \"PoC guidelines and rules of Immunefi\"), \". In the event that a PoC requires an attack on a web/app asset provided, they must still adhere to the rules provided, otherwise eligibility for a reward may be revoked. \"), mdx(\"p\", null, \"For more information on PoCs please visit: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\"\n  }, \"Proof of Concept (PoC) Guidelines and Rules\")), mdx(\"p\", null, \"Whitehats we highly encourage you to review any potential subdomains and what specific port(s) are in scope. Even though the domain may be the same, different ports may point to different assets.  \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Dev Environment and Documentation:\")), mdx(\"p\", null, \"DeGate has included dev documentation and/or instructions to help in reviewing code and exploring for bugs:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.degate.com/v/product_en/overview\"\n  }, \"https://docs.degate.com/v/product_en/overview\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/degatedev/protocols/blob/degate1.1.0/DeGate%20Protocol%20Specification%20Document.md\"\n  }, \"https://github.com/degatedev/protocols/blob/degate1.1.0/DeGate%20Protocol%20Specification%20Document.md\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/degatedev/protocols/blob/degate1.1.0/Circuit%20Design.md\"\n  }, \"https://github.com/degatedev/protocols/blob/degate1.1.0/Circuit%20Design.md\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/degatedev/protocols/blob/degate1.1.0/Smart%20Contract%20Design.md\"\n  }, \"https://github.com/degatedev/protocols/blob/degate1.1.0/Smart%20Contract%20Design.md\"))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Impacts to other assets\"), \" \"), mdx(\"p\", null, \"Hackers are encouraged to submit issues outside of the outlined Impacts and Assets in Scope. \"), mdx(\"p\", null, \"If whitehats can demonstrate a critical impact on code in production for an asset not in scope, DeGate encourages you to submit your bug report using the \\u201Cprimacy of impact exception\\u201D asset. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Impacts in Scope\")), mdx(\"p\", null, \"(For Blockchain/DLTR and Smart Contracts Only) This program is considered to be governed by Primacy of Impact. For more information on what this means visit: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact\"\n  }, \"Best Practice - Primacy of Impact vs Primacy of Rules.\"), \" \"), mdx(\"p\", null, \"Impacts are based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3/\"\n  }, \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3/\")), mdx(\"p\", null, \"At Immunefi, we classify bugs on a simplified 4-level scale:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Critical\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"High\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Medium\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Low\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Impacts only apply to assets in active use by the project like contracts on mainnet or web/app assets used in production. Any impact that applies to assets not in active use, like test or mock files, are out-of-scope of the bug bounty program unless explicitly mentioned as in-scope. </p><p><strong>Smart Contracts and Zero Knowledge Proof Circuit</strong></p><p><strong>Smart Contracts - PoC</strong>, Regarding the &#x27;Critical&#x27; level issues, the Proof of Concept (POC) for the circuit and smart contract is valid only if the white hat individuals involved can show that they can initiate and carry out attacks on their own. There is no such restriction for POCs of levels other than &#x27;Critical&#x27;. Exceptions may be made in cases where the vulnerability is objectively evident from simply mentioning the vulnerability and where it exists. However, the bug reporter may be required to provide a PoC at any point in time.</p><ul><li>For more information on PoCs please visit: <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\">Proof of Concept (PoC) Guidelines and Rules</a></li><li>All smart contracts of DeGate can be found at: <a href=\"https://github.com/degatedev/protocols/tree/degate1.1.0/packages/loopring_v3/contracts\">https://github.com/degatedev/protocols/tree/degate1.1.0/packages/loopring_v3/contracts</a></li></ul><p><strong>Web/App</strong> </p><p><strong>Web/App</strong> - Bug reports are to include a runnable Proof of Concept (PoC) in order to prove impact. </p><p>All web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. All PoC content must adhere to the <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\">PoC guidelines and rules of Immunefi</a>. In the event that a PoC requires an attack on a web/app asset provided, they must still adhere to the rules provided, otherwise eligibility for a reward may be revoked. </p><p>For more information on PoCs please visit: <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\">Proof of Concept (PoC) Guidelines and Rules</a></p><p>Whitehats we highly encourage you to review any potential subdomains and what specific port(s) are in scope. Even though the domain may be the same, different ports may point to different assets.  </p><p><strong>Dev Environment and Documentation:</strong></p><p>DeGate has included dev documentation and/or instructions to help in reviewing code and exploring for bugs:</p><ul><li><a href=\"https://docs.degate.com/v/product_en/overview\">https://docs.degate.com/v/product_en/overview</a></li><li><a href=\"https://github.com/degatedev/protocols/blob/degate1.1.0/DeGate%20Protocol%20Specification%20Document.md\">https://github.com/degatedev/protocols/blob/degate1.1.0/DeGate%20Protocol%20Specification%20Document.md</a></li><li><a href=\"https://github.com/degatedev/protocols/blob/degate1.1.0/Circuit%20Design.md\">https://github.com/degatedev/protocols/blob/degate1.1.0/Circuit%20Design.md</a></li><li><a href=\"https://github.com/degatedev/protocols/blob/degate1.1.0/Smart%20Contract%20Design.md\">https://github.com/degatedev/protocols/blob/degate1.1.0/Smart%20Contract%20Design.md</a></li></ul><p><strong>Impacts to other assets</strong> </p><p>Hackers are encouraged to submit issues outside of the outlined Impacts and Assets in Scope. </p><p>If whitehats can demonstrate a critical impact on code in production for an asset not in scope, DeGate encourages you to submit your bug report using the “primacy of impact exception” asset. </p><p><strong>Impacts in Scope</strong></p><p>(For Blockchain/DLTR and Smart Contracts Only) This program is considered to be governed by Primacy of Impact. For more information on what this means visit: <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact\">Best Practice - Primacy of Impact vs Primacy of Rules.</a> </p><p>Impacts are based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3/\">https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3/</a></p><p>At Immunefi, we classify bugs on a simplified 4-level scale:</p><ul><li>Critical</li><li>High</li><li>Medium</li><li>Low</li></ul>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are considered out-of-scope and ineligible for payout.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are considered out-of-scope and ineligible for payout.</p>",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

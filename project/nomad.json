{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "nomad",
      "slug": "nomad",
      "project": "Nomad",
      "maxBounty": 1000000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5GGzStgSIgJuXnWmv61KFy/848a9da6e4a34c32435685eda8801c2e/Nomad_Logo.png",
      "launchDate": "2022-06-09T10:30-06:00",
      "updatedDate": "2022-11-13T17:12:36.237Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to USD $1,000,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $100,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "2NVRNRWJBPQRImCLorxbrv",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xd3dfd3ede74e0dcebc1aa685e151332857efce2d",
          "description": "BridgeRouter - Implementation"
        },
        {
          "id": "4KvA0KX5AqxELLQVOMTp1R",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xa7e4fea3c1468d6c1a3a77e21e6e43daed855c1b",
          "description": "TokenRegistry - Implementation"
        },
        {
          "id": "3eg56qYbayNHbAEj5xa62Y",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x4ad6444b55729f657a71a82a5448f85ac8aa47ba",
          "description": "BridgeToken - Implementation"
        },
        {
          "id": "7xNR2tXwY3BWZu8uzts4rb",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x569d80f7fc17316b4c83f072b92ef37b72819de0",
          "description": "Governance Router - Implementation"
        },
        {
          "id": "FR3p2bJhV8nv0nU0zM9H6",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x8f184d6aa1977fd2f9d9024317d0ea5cf5815b6f",
          "description": "Home - Implementation"
        },
        {
          "id": "NCQseH7AkwprnKKoyY85M",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x7f58bb8311db968ab110889f2dfa04ab7e8e831b",
          "description": "Replica - Implementation"
        },
        {
          "id": "4KRFpGGDgEZhhaDEN4NkoN",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x2d6775c1673d4ce55e1f827a0d53e62c43d1f304",
          "description": "EthHelper"
        },
        {
          "id": "Vn5zwmGpN1wjuE2rxSLer",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xfe8874778f946ac2990a29eba3cfd50760593b2f",
          "description": "xAppConnectionManager"
        },
        {
          "id": "4Su3QmVFMIieC7Ui99PGJQ",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x9272c9d5fa902ef3804ec81e0333ae420d57f715",
          "description": "Updater Manager"
        },
        {
          "id": "73yjmTCfoO26TgKOQGZ3ma",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x88a69b4e698a4b090df6cf5bd7b2d47325ad30a3",
          "description": "BridgeRouter - Proxy"
        },
        {
          "id": "1vsPX4pxSvSCLrPZEnWUXW",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x0a6f564c5c9bebd66f1595f1b51d1f3de6ef3b79",
          "description": "TokenRegistry - Proxy"
        },
        {
          "id": "zg6qIRjXsCVBITQGS3vGO",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x9f7ea856ba1fb88d35e000c45e75f134a756ac4f",
          "description": "BridgeToken - Proxy"
        },
        {
          "id": "a5o9W2V67F36257pmB0yr",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x3009c99d370b780304d2098196f1ebf779a4777a",
          "description": "Governance Router - Proxy"
        },
        {
          "id": "Rc8GgiiLfvaTWu2TPtde6",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x92d3404a7e6c91455bbd81475cd9fad96acff4c8",
          "description": "Home - Proxy"
        },
        {
          "id": "4zWYCap8F5aTCFkLsTTD4Z",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x0a627a6398f429b62969cd475fb5ba8e04a4eb70",
          "description": "Xdai Replica - Proxy"
        },
        {
          "id": "6ve6RWTSsicQhTdlKchJqS",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x5bae47bf29f4e9b1e275c0b427b84c4daa30033a",
          "description": "Evmos Replica - Proxy"
        },
        {
          "id": "6avLBkd32JkuxzCedmHkSw",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xef989866b66a491e7b6c7473d73b589450d0f766",
          "description": "MilkomedaC1 Replica - Proxy"
        },
        {
          "id": "u0nmLtvt86U61FqD4xQPF",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x0876dfe4acae0e1c0a43302716483f5752298b71",
          "description": "Avalanche Replica - Proxy"
        },
        {
          "id": "5xXwVYpRwRNWflKa4B7iSw",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x049b51e531fd8f90da6d92ea83dc4125002f20ef",
          "description": "Moonbeam Replica - Proxy"
        },
        {
          "id": "5FN2KIumOJLSjAhBC6gORS",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xb70588b1a51f847d13158ff18e9cac861df5fb00",
          "description": "BridgeRouter - Beacon"
        },
        {
          "id": "7sDwCzooMw5cDg0gxcvORW",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x4d5ff8a01ed833e11aba43821d2881a5f2911f98",
          "description": "TokenRegistry - Beacon"
        },
        {
          "id": "UgKLNIDmQOTCe7byhPONn",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x8ca56e6235d83ff2f4e779f0b35a6c856d5a2fb2",
          "description": "BridgeToken - Beacon"
        },
        {
          "id": "7vlXaSz7TeWiwfju8bJHIp",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x67833a48b3f509d4252ac2c19cd604556ed6c981",
          "description": "Governance Router - Beacon"
        },
        {
          "id": "nABXwxXl3oaSieAwduSrV",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x063e871f8db991cead34b557a00b157b360084cc",
          "description": "Home - Beacon"
        },
        {
          "id": "2yHTZBQNxYc5RrIx8H7j9r",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x0876dfe4acae0e1c0a43302716483f5752298b71",
          "description": "Replica - Beacon"
        }
      ],
      "impacts": [
        {
          "id": "2bdXiGBY8JKnPB1pwSa1v6",
          "title": "Any governance voting result manipulation",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4hD3lR1Qe8YprPOA5Q0e51",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6uV5pDWpGufjdNSqQDYJDa",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4dXkvgzPxINzC4pWnwRnw0",
          "title": "Protocol Insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2krvFfgzqs1GVcTg23iiSc",
          "title": "Temporary freezing of funds for at least 48 hours",
          "type": "smart_contract",
          "severity": "high"
        }
      ],
      "programOverview": "Nomad is a security-first cross-chain messaging protocol that enables seamless communication between blockchains. By leveraging an optimistic mechanism, Nomad only requires one honest actor to keep the entire system safe. This drastically reduces the trust required relative to other interoperability solutions. \n\nNomad enables generalized messaging passing between chains, so developers can build cross-chain applications (or xApps) that compose logic and smart contract calls between chains, natively.\n\nFor more information about Nomad, please visit [https://www.nomad.xyz/](https://www.nomad.xyz/).",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\n\nAll bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nRewards for critical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of __USD 100 000__ for Critical smart contract bug reports. \n\nNomad requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed is a Full Name, Mailing Address, Email, and Photo Identification. \n\nThe following issues are considered out of scope of this program: \n  - Reports that require the Updater to commit Fraud\n  - Reports related to Updater bonding, slashing, or rotation (which is not yet spec’d)\n  - Reports stemming from code that is deployed on-chain but edited / removed in the [monorepo](https://github.com/nomad-xyz/monorepo) *before* the bug report is submitted\n  - Reports stemming from line items in publicly available audit reports here: [https://github.com/nomad-xyz/docs/blob/1ff0c55dba2a842c811468c57793ff9a6542ef0f/docs/public/Nomad-Audit.pdf](https://github.com/nomad-xyz/docs/blob/1ff0c55dba2a842c811468c57793ff9a6542ef0f/docs/public/Nomad-Audit.pdf)\n\nPayouts are handled by the __Nomad__ team directly and are denominated in USD. However, payouts are done in __USDC__.\n\nBounty hunters must pass OFAC Screening. Rewards cannot be paid out if hunters are on the OFAC SDN list.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (including Updater, Watcher, Governance multisig, Recovery Manager multisig)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "All smart contracts of Nomad can be found at [https://github.com/nomad-xyz/monorepo/](https://github.com/nomad-xyz/monorepo/). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Crosschain Liquidity"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $1,000,000"
          },
          {
            "level": "High",
            "payout": "USD $100,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Nomad is a security-first cross-chain messaging protocol that enables seamless communication between blockchains. By leveraging an optimistic mechanism, Nomad only requires one honest actor to keep the entire system safe. This drastically reduces the trust required relative to other interoperability solutions. \"), mdx(\"p\", null, \"Nomad enables generalized messaging passing between chains, so developers can build cross-chain applications (or xApps) that compose logic and smart contract calls between chains, natively.\"), mdx(\"p\", null, \"For more information about Nomad, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.nomad.xyz/\"\n  }, \"https://www.nomad.xyz/\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Nomad is a security-first cross-chain messaging protocol that enables seamless communication between blockchains. By leveraging an optimistic mechanism, Nomad only requires one honest actor to keep the entire system safe. This drastically reduces the trust required relative to other interoperability solutions. </p><p>Nomad enables generalized messaging passing between chains, so developers can build cross-chain applications (or xApps) that compose logic and smart contract calls between chains, natively.</p><p>For more information about Nomad, please visit <a href=\"https://www.nomad.xyz/\">https://www.nomad.xyz/</a>.</p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\"), mdx(\"p\", null, \"All bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\"), mdx(\"p\", null, \"Rewards for critical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 100 000\"), \" for Critical smart contract bug reports. \"), mdx(\"p\", null, \"Nomad requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed is a Full Name, Mailing Address, Email, and Photo Identification. \"), mdx(\"p\", null, \"The following issues are considered out of scope of this program: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reports that require the Updater to commit Fraud\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reports related to Updater bonding, slashing, or rotation (which is not yet spec\\u2019d)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reports stemming from code that is deployed on-chain but edited / removed in the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/nomad-xyz/monorepo\"\n  }, \"monorepo\"), \" \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"before\"), \" the bug report is submitted\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reports stemming from line items in publicly available audit reports here: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/nomad-xyz/docs/blob/1ff0c55dba2a842c811468c57793ff9a6542ef0f/docs/public/Nomad-Audit.pdf\"\n  }, \"https://github.com/nomad-xyz/docs/blob/1ff0c55dba2a842c811468c57793ff9a6542ef0f/docs/public/Nomad-Audit.pdf\"))), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Nomad\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \".\"), mdx(\"p\", null, \"Bounty hunters must pass OFAC Screening. Rewards cannot be paid out if hunters are on the OFAC SDN list.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.</p><p>All bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.</p><p>Rewards for critical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of <strong>USD 100 000</strong> for Critical smart contract bug reports. </p><p>Nomad requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed is a Full Name, Mailing Address, Email, and Photo Identification. </p><p>The following issues are considered out of scope of this program: </p><ul><li>Reports that require the Updater to commit Fraud</li><li>Reports related to Updater bonding, slashing, or rotation (which is not yet spec’d)</li><li>Reports stemming from code that is deployed on-chain but edited / removed in the <a href=\"https://github.com/nomad-xyz/monorepo\">monorepo</a> <em>before</em> the bug report is submitted</li><li>Reports stemming from line items in publicly available audit reports here: <a href=\"https://github.com/nomad-xyz/docs/blob/1ff0c55dba2a842c811468c57793ff9a6542ef0f/docs/public/Nomad-Audit.pdf\">https://github.com/nomad-xyz/docs/blob/1ff0c55dba2a842c811468c57793ff9a6542ef0f/docs/public/Nomad-Audit.pdf</a></li></ul><p>Payouts are handled by the <strong>Nomad</strong> team directly and are denominated in USD. However, payouts are done in <strong>USDC</strong>.</p><p>Bounty hunters must pass OFAC Screening. Rewards cannot be paid out if hunters are on the OFAC SDN list.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (including Updater, Watcher, Governance multisig, Recovery Manager multisig)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (including Updater, Watcher, Governance multisig, Recovery Manager multisig)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of Nomad can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/nomad-xyz/monorepo/\"\n  }, \"https://github.com/nomad-xyz/monorepo/\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of Nomad can be found at <a href=\"https://github.com/nomad-xyz/monorepo/\">https://github.com/nomad-xyz/monorepo/</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

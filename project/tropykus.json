{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "tropykus",
      "slug": "tropykus",
      "project": "Tropykus",
      "maxBounty": 50000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/frRDEAhO4DfybaPr6wME3/2db8653b2e79d00c6bbb63324f5a62ac/Favicon_Tropykus_64_Dark.png",
      "launchDate": "2022-02-15T20:30-07:00",
      "updatedDate": "2023-03-28T02:30:23.850Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $50,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $3,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $2,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": false
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "64BosyrYOJlBxaGV1GBhn1",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0x2cd424965dcc0693a39024d23c4e25abe531796a",
          "description": "MultiSigWallet"
        },
        {
          "id": "7AQRsAOcihw6r6ccUb9XM",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0x7fa5500c978e89660bf3bd0526f8f7164de0b38f",
          "description": "PriceOracleProxy"
        },
        {
          "id": "5H0m6ChBglPE2sceRNPmVF",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0x962308fef8edfadd705384840e7701f8f39ed0c0",
          "description": "Unitroller"
        },
        {
          "id": "5OOHTfh34710JMm16yqU5p",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0x10d6d9cfacd77ec2f3b422a4ad7face58197c2e9",
          "description": "ComptrollerG6"
        },
        {
          "id": "6PcBned0q2zrCObTo1ZuS0",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0x972a21c61b436354c0f35836195d7b67f54e482c",
          "description": "SAToracle"
        },
        {
          "id": "61OPKaTQNJX25Aht6Hmn99",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0x9e71719a26349d0c4b44a80d9a8710dd998f0f75",
          "description": "SATadapter"
        },
        {
          "id": "5nsCdO6hPRXbTGSvPCwguC",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0x546046960a43f0f4ab0863a0305c40833454728a",
          "description": "SATmodel"
        },
        {
          "id": "7bz16eiFi9Fx5cQKt9fCCK",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0xfa7bf65eba46f0533426ba39890356f996edf58a",
          "description": "SATcompanion"
        },
        {
          "id": "qwh5fwE7buiWtb9KyZZZc",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0xd2ec53e8dd00d204d3d9313af5474eb9f5188ef6",
          "description": "kSAT"
        },
        {
          "id": "5lus39KIYV2vOo2vU84CWm",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0x972a21c61b436354c0f35836195d7b67f54e482c",
          "description": "RBTCoracle"
        },
        {
          "id": "6UpWMktt6XjjIMdrNPh31a",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0xa8a0d3399caa1d0084df56df2c19258e3f6dd442",
          "description": "RBTCadapter"
        },
        {
          "id": "1KUw9aMMMfTSvm92HQK5SW",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0x6be15b7e8c783264feeede54a9fbdc2fb4bbefe6",
          "description": "RBTCmodel"
        },
        {
          "id": "5jzFSz1pFJlpx6sFTEewnU",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0x0aeadb9d4c6a80462a47e87e76e487fa8b9a37d7",
          "description": "kRBTC"
        },
        {
          "id": "30cuF6SvEHbegwuxl8KXVb",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0xdb76a2816def5dd206ba0a8a50b7b57f414ef17d",
          "description": "RIForacle"
        },
        {
          "id": "28XW68LtiGqkKAS4EJQD3p",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0xe5b18e6aba40379abfddb0e703eb53a1175bc7c0",
          "description": "RIFadapter"
        },
        {
          "id": "40rz3Yb5er1s1OiQskwfVX",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0x1181bf85ed10154613250c33048429c3d10dd14a",
          "description": "RIFmodel"
        },
        {
          "id": "Hu7JpF7CcgqdObvEGFM5N",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0x3134b7fbfca5db217eca523eab1941452cf35163",
          "description": "kRIF"
        },
        {
          "id": "60RewdOcBBVGQLpyL8SWf0",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0xb1a98c46f9b9ce9f4b26d5a44f8a70375e06ac02",
          "description": "DOCoracle"
        },
        {
          "id": "5h9UpxnwcTGPWftwStgLWB",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0x583b8ca8d5e21633da4582f6b4b8b574d5e47772",
          "description": "DOCadapter"
        },
        {
          "id": "5SMPazMooYn9p2DdlhFtz6",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0xa7999889e2615370a2448b26b9cc6f0ddebbb5b1",
          "description": "DOCmodel"
        },
        {
          "id": "68fVdFVSZRJ3Svx7qRPN5F",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0x544eb90e766b405134b3b3f62b6b4c23fcd5fda2",
          "description": "kDOC"
        },
        {
          "id": "t6a8HY2qiCwxTrEwi09UV",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0x45c907727ed15bd901560ff439293e6b89de877e",
          "description": "USDToracle"
        },
        {
          "id": "67TWI4Z91QFYne2T1S8Gcd",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0x5eb5749f789e5753f5cf260439b6b7da6bf591bf",
          "description": "USDTadapter"
        },
        {
          "id": "4FLlhIwfo9QtTGsGUnB0TE",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0xedc2c5655173f314d506c797f38ca0336b140864",
          "description": "USDTmodel"
        },
        {
          "id": "xR3HaEvVPFLgXzcB4LE67",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0xedaefc6b596ed38d712100976969975a37c84464",
          "description": "kUSDT"
        },
        {
          "id": "1tQR2tJaIOiwemc6aGSXgO",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0x45c907727ed15bd901560ff439293e6b89de877e",
          "description": "XUSDoracle"
        },
        {
          "id": "1oXpOpMsgvR7YPkZuBslFV",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0x1751085d50a010455ebc7971312e715b5ca618c9",
          "description": "XUSDadapter"
        },
        {
          "id": "49VVerMQBSta3RulqBiuhm",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0xa4e5064c8bf8045d0d7d98934f9db21099f8e755",
          "description": "XUSDmodel"
        },
        {
          "id": "2mje9eReFfpuK5Aya78VXa",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0xe17551201eeaefbd625ca4fb48d49c06e7ac064b",
          "description": "kXUSD"
        },
        {
          "id": "4tAOmP0n3OaEkAqGxtmHDK",
          "type": "smart_contract",
          "url": "https://explorer.rsk.co/address/0xfc5e99a649a5a44fc45d4f1dcca292f9b69f5b65",
          "description": "TropykusLens"
        }
      ],
      "impacts": [
        {
          "id": "2c81LLp91Pjweo7UDgqh5t",
          "title": "Any governance voting result manipulation",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3cyEkpBbFvZODYrnRdjUyM",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3PbmKKC1J2zio6gqkYk36i",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6DpTQacaWajvNh3xUC74uZ",
          "title": "Miner-extractable value (MEV)",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4QC2kDXHzfoPkaeyh5FkMx",
          "title": "Protocol Insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5clhKGnTtXEv8AeLgtfBcG",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "7KgXsZFeeVB0QclQPRnwoi",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "4GXoBwsya7bbyhrXGo4H2T",
          "title": "Temporary freezing of funds",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "2PTLYNcDc2C6Q3qsUylh8J",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "1ukf9rLslpxWshtBsZQhgt",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "4FfDpwhhmgP1VeRumuvWfL",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5TaebMjVYvyOCQ8cf0G2UM",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "4zqpOSo8FI0pB66D0axyjU",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "4b8YykJGEL1DOiYsm5Vye9",
          "title": "Contract fails to deliver promised returns, but doesn't lose value",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "Tropykus is a decentralized lending protocol on top of Bitcoin (i.e. second layer compatible with the Ethereum Virtual Machine EVM: RSK) inspired by Compound and Aave protocols. These lending protocols provide a decentralized marketplace for suppliers and borrowers holding crypto assets. \n\nTropykus provides alternative deposit and lending smart contracts for users with different interests in terms of return expectations and investment horizons, with similar risk management features of other lending protocols (e.g. collateralization, liquidation incentives). It also provides markets and accepts as collateral alternative crypto assets such as rBTC, RIF, rUSDT, DOC.\n\nThe main objective of Tropykus is to provide better financial services to everyday people in developing countries by creating a bridge between the needs of these users and the advantages of DeFi.\n\nFor more information about Tropykus, please visit [https://tropykus.com/](https://tropykus.com/). \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds\n  - Smart contract gas drainage\n  - Block stuffing without fund transfers blocked\n  - Smart contract fails to deliver promised returns, but doesn’t lose value\n  - Informational issues",
      "prioritizedVulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for at least 8 hours\n  - Smart contract gas drainage\n  - Block stuffing without fund transfers blocked\n  - Smart contract fails to deliver promised returns, but doesn’t lose value\n  - Informational issues.\n",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll Critical/High/Medium smart contract bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. All bug reports must also come with a suggestion for a fix to be considered for a reward. \n\nPayouts are handled by the __Tropykus__ team directly and are denominated in USD. However, payouts are done in __USD__, __USDC__, __XUSD__, __BTC__, __RBTC__ or __DOC__, at the discretion of the team.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "All smart contracts of Tropykus can be found at [https://github.com/Tropykus/protocol](https://github.com/Tropykus/protocol). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
      "impactsBody": "These accepted impacts are then based on the severity classification system of this bug bounty program. When submitting a bug report, please select the severity level you feel best corresponds to the severity classification system as long as the impact itself is one of the listed items. ",
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Lending"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "RSK"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "JavaScript",
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $50,000"
          },
          {
            "level": "High",
            "payout": "USD $3,000"
          },
          {
            "level": "Medium",
            "payout": "USD $2,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Tropykus is a decentralized lending protocol on top of Bitcoin (i.e. second layer compatible with the Ethereum Virtual Machine EVM: RSK) inspired by Compound and Aave protocols. These lending protocols provide a decentralized marketplace for suppliers and borrowers holding crypto assets. \"), mdx(\"p\", null, \"Tropykus provides alternative deposit and lending smart contracts for users with different interests in terms of return expectations and investment horizons, with similar risk management features of other lending protocols (e.g. collateralization, liquidation incentives). It also provides markets and accepts as collateral alternative crypto assets such as rBTC, RIF, rUSDT, DOC.\"), mdx(\"p\", null, \"The main objective of Tropykus is to provide better financial services to everyday people in developing countries by creating a bridge between the needs of these users and the advantages of DeFi.\"), mdx(\"p\", null, \"For more information about Tropykus, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://tropykus.com/\"\n  }, \"https://tropykus.com/\"), \". \"), mdx(\"p\", null, \"This bug bounty program is focused on their smart contracts and is focused on preventing:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of user funds staked (principal) by freezing or theft\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Freezing of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Temporary freezing of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract gas drainage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Block stuffing without fund transfers blocked\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract fails to deliver promised returns, but doesn\\u2019t lose value\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Informational issues\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Tropykus is a decentralized lending protocol on top of Bitcoin (i.e. second layer compatible with the Ethereum Virtual Machine EVM: RSK) inspired by Compound and Aave protocols. These lending protocols provide a decentralized marketplace for suppliers and borrowers holding crypto assets. </p><p>Tropykus provides alternative deposit and lending smart contracts for users with different interests in terms of return expectations and investment horizons, with similar risk management features of other lending protocols (e.g. collateralization, liquidation incentives). It also provides markets and accepts as collateral alternative crypto assets such as rBTC, RIF, rUSDT, DOC.</p><p>The main objective of Tropykus is to provide better financial services to everyday people in developing countries by creating a bridge between the needs of these users and the advantages of DeFi.</p><p>For more information about Tropykus, please visit <a href=\"https://tropykus.com/\">https://tropykus.com/</a>. </p><p>This bug bounty program is focused on their smart contracts and is focused on preventing:</p><ul><li>Loss of user funds staked (principal) by freezing or theft</li><li>Theft of unclaimed yield</li><li>Freezing of unclaimed yield</li><li>Temporary freezing of funds</li><li>Smart contract gas drainage</li><li>Block stuffing without fund transfers blocked</li><li>Smart contract fails to deliver promised returns, but doesn’t lose value</li><li>Informational issues</li></ul>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Impacts in Scope\")), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts/Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of user funds staked (principal) by freezing or theft\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Freezing of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Temporary freezing of funds for at least 8 hours\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract gas drainage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Block stuffing without fund transfers blocked\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract fails to deliver promised returns, but doesn\\u2019t lose value\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Informational issues.\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p><strong>Impacts in Scope</strong></p><p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p><p><strong>Smart Contracts/Blockchain</strong></p><ul><li>Loss of user funds staked (principal) by freezing or theft</li><li>Theft of unclaimed yield</li><li>Freezing of unclaimed yield</li><li>Temporary freezing of funds for at least 8 hours</li><li>Smart contract gas drainage</li><li>Block stuffing without fund transfers blocked</li><li>Smart contract fails to deliver promised returns, but doesn’t lose value</li><li>Informational issues.</li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \"), mdx(\"p\", null, \"All Critical/High/Medium smart contract bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. All bug reports must also come with a suggestion for a fix to be considered for a reward. \"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Tropykus\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"XUSD\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"BTC\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"RBTC\"), \" or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"DOC\"), \", at the discretion of the team.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. </p><p>All Critical/High/Medium smart contract bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. All bug reports must also come with a suggestion for a fix to be considered for a reward. </p><p>Payouts are handled by the <strong>Tropykus</strong> team directly and are denominated in USD. However, payouts are done in <strong>USD</strong>, <strong>USDC</strong>, <strong>XUSD</strong>, <strong>BTC</strong>, <strong>RBTC</strong> or <strong>DOC</strong>, at the discretion of the team.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of Tropykus can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/Tropykus/protocol\"\n  }, \"https://github.com/Tropykus/protocol\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of Tropykus can be found at <a href=\"https://github.com/Tropykus/protocol\">https://github.com/Tropykus/protocol</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"These accepted impacts are then based on the severity classification system of this bug bounty program. When submitting a bug report, please select the severity level you feel best corresponds to the severity classification system as long as the impact itself is one of the listed items. \"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>These accepted impacts are then based on the severity classification system of this bug bounty program. When submitting a bug report, please select the severity level you feel best corresponds to the severity classification system as long as the impact itself is one of the listed items. </p>",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

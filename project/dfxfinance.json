{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "dfxfinance",
      "slug": "dfxfinance",
      "project": "DFX Finance",
      "maxBounty": 100000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6u3TfNAeYPp3iNEYgm8FWV/a75878a796fc5ec2d7c25341b18f28e6/DFX_-_Final_Logo__solo_.png",
      "launchDate": "2023-02-13T13:00-05:00",
      "updatedDate": "2023-02-13T17:56:49.386Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $100,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $50,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": false
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "7HNYLAGqkhL7UsdPuX14ll",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x65071363538824F18A0261200843F03f7293757a",
          "description": "AssimilatorFactory"
        },
        {
          "id": "5RMG1pi6kEZvdpoaghUIOj",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xB397946634F30c51DA0d38e7DCBB10363e50961E",
          "description": "Curve"
        },
        {
          "id": "6aKoczlGUAa7RKnYLnHQiY",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xbC875FAc17A1334a340e8ea7035368D6C8D8222E",
          "description": "Orchestrator"
        },
        {
          "id": "2W4zWnFoL9WDwzWvM8FOMk",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x809423EF4e30F58a9334E695cc3815ae706182F3",
          "description": "ProportionalLiquidity"
        },
        {
          "id": "522Ai6xZVghzwTHALtjzzI",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x0DC8c87340FB9cF95bA687852E04bDdf08D07eD4",
          "description": "Swaps"
        },
        {
          "id": "7h95YugleykBIF9ak2qEI7",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xF825968D6b6160FDf40d0e178d81c2C3dB4190b2",
          "description": "ViewLiquidity"
        },
        {
          "id": "7cpR5kDzznNvCGCNEbS7IR",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x4BA227405F65DD83Af6c2A502bd828Ee22597869",
          "description": "Config"
        },
        {
          "id": "4gvsuzJWoqenyyBu42KSmM",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x9AdEAc3b6d29D9D5e543B8579e803a7ccE72C9cd",
          "description": "CurveFactoryV2"
        },
        {
          "id": "2272jLUtH8JnhPpyDhgSTY",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x9bBa6805F25b35bdf65e50a42015369e7825428E",
          "description": "Router"
        },
        {
          "id": "6IIX4UwoTgK08G76o3BvMK",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xf3Cc0702493d394323187F330830B7BF0a9B545D",
          "description": "Zap"
        },
        {
          "id": "4Xf1PQyYI3cSgYGK8scpmU",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xDA9dcc7fd51F0D9Aa069a82647A5F3ba594edAED",
          "description": "dfx-cadc-usdc-v2(pool)"
        },
        {
          "id": "3wmyB515pSoaRHo8ZCYBsg",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x8cd86fbC94BeBFD910CaaE7aE4CE374886132c48",
          "description": "dfx-euroc-usdc-v2(pool)"
        },
        {
          "id": "1Yr11QWF1yvlKuIrR4czNr",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xACC5Dca0B684f444bC6b4be30B95Ca7D928A4B9c",
          "description": "dfx-xsgd-usdc-v2(pool)"
        },
        {
          "id": "4IxNF7c6g48FMLS5sFTFoV",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xc147cee0F6BB0e56240868c9f53aE916D3b86073",
          "description": "dfx-nzds-usdc-v2(pool)"
        },
        {
          "id": "6sA88KTd6LjHwmtBvI0gFZ",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x38F818fCd57F8A1782bBCC1C90CB0FD03e7f0bd1",
          "description": "dfx-tryb-usdc-v2(pool)"
        },
        {
          "id": "4niJ9BLuNiAoETyn2nfR5f",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x9aFD65013770525E43a84e49c87B3015C2C32517",
          "description": "dfx-gyen-usdc-v2(pool)"
        },
        {
          "id": "7kUsUzNun1ooi50ZT5x0Zd",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xb7dB2F8d25C51A26799bE6765720c3C6D84CD2f2",
          "description": "dfx-xidr-usdc-v2(pool)"
        },
        {
          "id": "40vrBNH85koZ998sH8XYBv",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x7611f64BDB95077C9e9e6f9ad9A1E7AbfBD2B4A7",
          "description": "dfx-cadc-usdc-v2(assimilator)"
        },
        {
          "id": "1mHKkuJMPlUUexuk8GH2e0",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xf8053A18bd7A608e54E3694fe042702CA560D1a3",
          "description": "dfx-euroc-usdc-v2(assimilator)"
        },
        {
          "id": "65PXG5MMK9VuuLyhAnWYgr",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xF866ACa6DC860e088045CbB5ee9ea48744eE2b48",
          "description": "dfx-xsgd-usdc-v2(assimilator)"
        },
        {
          "id": "NdljJqlvpzwxqwIAKV0bn",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xAb44c9482Db0FE517705D6dF72f949d5EeA91C3F",
          "description": "dfx-nzds-usdc-v2(assimilator)"
        },
        {
          "id": "6Y0ANJZljEC3lFsjoVoYQt",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x978E49F33E2c07A4D1918E95B58aC13F61ee8aa4",
          "description": "dfx-tryb-usdc-v2(assimilator)"
        },
        {
          "id": "6r6me2dmaEqBPQBrUDCmlI",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x4b0d7530F5Ab428abac06fa92163F00de89f7D27",
          "description": "dfx-gyen-usdc-v2(assimilator)"
        },
        {
          "id": "4XyCc980rPhDMW4Qbj3QHg",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xEe499d42a88aF0AE665347d3e797515A56a4E799",
          "description": "dfx-xidr-usdc-v2(assimilator)"
        },
        {
          "id": "xXeDGSD803r2MU477vHtJ",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xff6AB33C1AB250e030FBEC45A6AC0A017864818e",
          "description": "AssimilatorFactory"
        },
        {
          "id": "GcvnJ8yA6JTt12AFcGJgO",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x87cB8083995645E7C7A1548872F26FC616949222",
          "description": "Curve"
        },
        {
          "id": "7t2J4dCMVP38AkvuTzp9dF",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x6b5DEBC22960ecE445f787F9CDdB0508Fc3f2bf4",
          "description": "Orchestrator"
        },
        {
          "id": "6JR7NOLoASBbHbNyT9eQig",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x85fa8b9Df88CbFBeada955Bff4a7337b27151DbD",
          "description": "ProportionalLiquidity"
        },
        {
          "id": "11gwUsyjsm7Fp1QT8Y4LFN",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x5a0b0B891aEEc2AFBefd094938B40Eab5AE2DB61",
          "description": "Swaps"
        },
        {
          "id": "z2f4N4jcwTpOTGUCVIpyk",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xD3F216dB1E43EBAe3c1D3fE35853e81fbc845Cbc",
          "description": "ViewLiquidity"
        },
        {
          "id": "3aikKnl9EBCKXYaRrpqfKh",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x1D80D6e0083B48E54F9c336E183631eA822B35AD",
          "description": "Config"
        },
        {
          "id": "1vC1jGLWsFsbDFFsDb3SnG",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x3591040cE5dF8828b3Ed4Ec39D030F832d43fD53",
          "description": "CurveFactoryV2"
        },
        {
          "id": "yyjPZb0xs7lBOC28dl9wd",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x575F1ed1e14Ac1152Bf2F1CdfB2C1865cA246F51",
          "description": "Router"
        },
        {
          "id": "12EimzqVaxqX7vTCqlUDBq",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xA070fB11969A50aACC885B7b5245cBc84de2214c",
          "description": "Zap"
        },
        {
          "id": "2fXcARoakn1zNuszamGpg9",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x6691FA63aa1d7E422Dc5D19C9B04F25909fdE966",
          "description": "dfx-cadc-usdc-v2(pool)"
        },
        {
          "id": "5QJQOHADSIXmZDnZ2F9Apo",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x2385D7aB31F5a470B1723675846cb074988531da",
          "description": "dfx-eurs-usdc-v2(pool)"
        },
        {
          "id": "1J2mjC8p3Ip8u6gqFdL9Oc",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xBc408da6A7237682c8672eF7a66AFF09a9069b15",
          "description": "dfx-xsgd-usdc-v2(pool)"
        },
        {
          "id": "2orkCfmBOGNU0WuVDtVz4n",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xAAb708fBd208Ac262821E229ded16234277b2B13",
          "description": "dfx-tryb-usdc-v2(pool)"
        },
        {
          "id": "5Fp8wcIiq8LitFbFWgCKvB",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xCa2CC643227ff2D362Ec830BE0e16514556e32Ec",
          "description": "dfx-cadc-usdc-v2(assimilator)"
        },
        {
          "id": "2rwMkYujNjLowJb2ogZI2",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xB53901A1AaD3aED655173f0b4a003b8bBDBf9003",
          "description": "dfx-eurs-usdc-v2(assimilator)"
        },
        {
          "id": "3RIeR102PX0vi5hHBJDFhd",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x901B188dccf0E0Cee168b21a0DD416f323E902a2",
          "description": "dfx-xsgd-usdc-v2(assimilator)"
        },
        {
          "id": "7L9HEyfMktv2eJCvTzwPmt",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xD3D3D6B9E86028b944edF85331E6dD907a13dF7d",
          "description": "dfx-tryb-usdc-v2(assimilator)"
        }
      ],
      "impacts": [
        {
          "id": "35RVRKfuoqZ828d3retlDp",
          "title": "Any governance voting result manipulation",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4g60ADKxXxwQpbD26MGspr",
          "title": "Direct theft of any user funds (i.e. LP funds), whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "F2Ric4GZuw9WubbqTk4uj",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "76mhB03UuPrqw749j5kpgG",
          "title": "Loss of pool funds due to oracle manipulation",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "7x3Ec8MeE4AsFdLVcR1Wuu",
          "title": "Unauthorized minting of LPTs",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "7l75WS5tMQeOhxEEJLmqBe",
          "title": "Loss of pool funds  from Maximal-extractable value (MEV) exploration",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3mHqAokNjkb0EMCc02rieL",
          "title": "Protocol insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4spUB43WVgjsCjAE3HusMx",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6rigAgP284ulo8G5qNW1iO",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "4CKSA0FuWBUmFOLosiPVk0",
          "title": "Temporary freezing of funds for at least 1 day",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "AkUIKCXnNxJWeMv4TypHJ",
          "title": "Manipulation of pool/curve leading to reduced LP fees",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "7EjjxcusHBtCAw8bdflT8O",
          "title": "Manipulation of oracle leading to reduced LP fees",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "5pftYeVdWtGCfuLjG0toNZ",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "7nxJZZAbYC1hnNMiXFW9OA",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5TiZUYlIdnd2AiWOkyqRHO",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "6fSMYI2ynHpvlMiZUwhhlU",
          "title": "Theft of gas or unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "70PBnAyIQdb5J59CSaAOn1",
          "title": "Manipulation of oracle leading to unfavorable/unfair swap fees",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "377txqbAPOksYGfWKdnD5v",
          "title": "Smart contract fails to deliver promised returns, but doesn’t lose value",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "DFX Finance is a decentralized foreign exchange (FX) protocol optimized for trading fiat-backed foreign stablecoins, (CADC, EUROC, XSGD, etc.). You can safely earn yield or use the DFX platform and its contracts to provide true financial localization for the customers of your global business. The next generation of global finance cannot rely solely on USD-pegged stablecoins. A decentralized protocol where users can swap non-USD stablecoins pegged to various foreign currencies is not only important, but necessary.\n\nFor more information about DFX Finance, please visit [https://dfx.finance/ ](https://dfx.finance/) \n",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the  [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\n\nAll Critical and High Smart Contract bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nKnown issues highlighted in the following audit reports are considered out of scope: \n- [https://github.com/dfx-finance/protocol-v2/tree/main/audits](https://github.com/dfx-finance/protocol-v2/tree/main/audits)\n\nPayouts are handled by the __DFX Finance__ team directly and are denominated in USD. However, payouts are done in __USDC, USDT,__ and __DAI__.\n",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n- Incorrect data supplied by third party oracles\n   - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n- Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n- Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n",
      "assetsBodyV2": "All smart contracts of DFX Finance can be found at [https://github.com/dfx-finance/protocol-v2](https://github.com/dfx-finance/protocol-v2). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\nThough only the proxy contracts are listed as in-scope, current implementation and any further updates to the implementation contracts are considered in scope. When reporting a bug, please make sure to select the relevant proxy smart contract as the target. \n\nIf an impact can be caused to any other asset managed by DFX Finance that isn’t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project. ",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "DEX"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "ETH",
          "Polygon"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $100,000"
          },
          {
            "level": "High",
            "payout": "USD $50,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"DFX Finance is a decentralized foreign exchange (FX) protocol optimized for trading fiat-backed foreign stablecoins, (CADC, EUROC, XSGD, etc.). You can safely earn yield or use the DFX platform and its contracts to provide true financial localization for the customers of your global business. The next generation of global finance cannot rely solely on USD-pegged stablecoins. A decentralized protocol where users can swap non-USD stablecoins pegged to various foreign currencies is not only important, but necessary.\"), mdx(\"p\", null, \"For more information about DFX Finance, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://dfx.finance/\"\n  }, \"https://dfx.finance/ \"), \" \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>DFX Finance is a decentralized foreign exchange (FX) protocol optimized for trading fiat-backed foreign stablecoins, (CADC, EUROC, XSGD, etc.). You can safely earn yield or use the DFX platform and its contracts to provide true financial localization for the customers of your global business. The next generation of global finance cannot rely solely on USD-pegged stablecoins. A decentralized protocol where users can swap non-USD stablecoins pegged to various foreign currencies is not only important, but necessary.</p><p>For more information about DFX Finance, please visit <a href=\"https://dfx.finance/\">https://dfx.finance/ </a> </p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the  \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\"), mdx(\"p\", null, \"All Critical and High Smart Contract bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\"), mdx(\"p\", null, \"Known issues highlighted in the following audit reports are considered out of scope: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/dfx-finance/protocol-v2/tree/main/audits\"\n  }, \"https://github.com/dfx-finance/protocol-v2/tree/main/audits\"))), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"DFX Finance\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC, USDT,\"), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"DAI\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the  <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.</p><p>All Critical and High Smart Contract bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.</p><p>Known issues highlighted in the following audit reports are considered out of scope: </p><ul><li><a href=\"https://github.com/dfx-finance/protocol-v2/tree/main/audits\">https://github.com/dfx-finance/protocol-v2/tree/main/audits</a></li></ul><p>Payouts are handled by the <strong>DFX Finance</strong> team directly and are denominated in USD. However, payouts are done in <strong>USDC, USDT,</strong> and <strong>DAI</strong>.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of DFX Finance can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/dfx-finance/protocol-v2\"\n  }, \"https://github.com/dfx-finance/protocol-v2\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\"), mdx(\"p\", null, \"Though only the proxy contracts are listed as in-scope, current implementation and any further updates to the implementation contracts are considered in scope. When reporting a bug, please make sure to select the relevant proxy smart contract as the target. \"), mdx(\"p\", null, \"If an impact can be caused to any other asset managed by DFX Finance that isn\\u2019t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project. \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of DFX Finance can be found at <a href=\"https://github.com/dfx-finance/protocol-v2\">https://github.com/dfx-finance/protocol-v2</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.</p><p>Though only the proxy contracts are listed as in-scope, current implementation and any further updates to the implementation contracts are considered in scope. When reporting a bug, please make sure to select the relevant proxy smart contract as the target. </p><p>If an impact can be caused to any other asset managed by DFX Finance that isn’t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project. </p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

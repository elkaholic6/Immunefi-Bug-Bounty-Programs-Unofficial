{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "elementfinance",
      "slug": "elementfinance",
      "project": "Element Finance",
      "maxBounty": 100000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2S8lTN4XuG5nCrliVQS7Le/c5ca03e884a7a5c1804e82ca7efdf2d6/Element_logo.jpeg",
      "launchDate": "2021-05-13T00:00-05:00",
      "updatedDate": "2023-03-08T18:01:26.801Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $20,000 to USD $100,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $5,000 to USD $20,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $1,000 to USD $5,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "Up to USD $1,000",
          "pocRequired": false
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "11uaEF6qgxz54YhblAhIAx",
          "type": "smart_contract",
          "url": "https://github.com/element-fi/elf-contracts/blob/5517dbe0982b85bc7a7207b5119d9a728bf1f830/contracts/WrappedPosition.sol",
          "description": "Core Contract (Wrapped Position)"
        },
        {
          "id": "42TtcE05VT7Eo0WCSsx5Fo",
          "type": "smart_contract",
          "url": "https://github.com/element-fi/elf-contracts/blob/5517dbe0982b85bc7a7207b5119d9a728bf1f830/contracts/Tranche.sol",
          "description": "Core Contract (Tranche)"
        },
        {
          "id": "5emEii4Geu8enE4Gepxpds",
          "type": "smart_contract",
          "url": "https://github.com/element-fi/elf-contracts/blob/5517dbe0982b85bc7a7207b5119d9a728bf1f830/contracts/factories/TrancheFactory.sol",
          "description": "Core Contract (Tranche Factory)"
        },
        {
          "id": "hCZw5PxGYMe963IERXFXg",
          "type": "smart_contract",
          "url": "https://github.com/element-fi/elf-contracts/blob/5517dbe0982b85bc7a7207b5119d9a728bf1f830/contracts/InterestToken.sol",
          "description": "Core Contract (Interest Token)"
        },
        {
          "id": "4gj8opD4jhLa1cLs3dX8m0",
          "type": "smart_contract",
          "url": "https://github.com/element-fi/elf-contracts/blob/5517dbe0982b85bc7a7207b5119d9a728bf1f830/contracts/factories/InterestTokenFactory.sol",
          "description": "Core Contract (Interest Token Factory)"
        },
        {
          "id": "7EjjaRxEEJcOCAK6Z6gTXL",
          "type": "smart_contract",
          "url": "https://github.com/element-fi/elf-contracts/blob/5517dbe0982b85bc7a7207b5119d9a728bf1f830/contracts/UserProxy.sol",
          "description": "Core Contract (User Proxy)"
        },
        {
          "id": "1mmgTFu7U1NIpUWKw2w5zZ",
          "type": "smart_contract",
          "url": "https://github.com/element-fi/elf-contracts/blob/5517dbe0982b85bc7a7207b5119d9a728bf1f830/contracts/libraries/Authorizable.sol",
          "description": "Library Contract (Authorizable)"
        },
        {
          "id": "3hDNTTUAtXsP1hg1NNnKyN",
          "type": "smart_contract",
          "url": "https://github.com/element-fi/elf-contracts/blob/5517dbe0982b85bc7a7207b5119d9a728bf1f830/contracts/YVaultAssetProxy.sol",
          "description": "Integration Contract (Y Vault Asset Proxy)"
        },
        {
          "id": "5Is6jBgmnASlqcYVGvFqmW",
          "type": "smart_contract",
          "url": "https://github.com/element-fi/elf-contracts/blob/5517dbe0982b85bc7a7207b5119d9a728bf1f830/contracts/ConvergentCurvePool.sol",
          "description": "Custom Balancer Curve (Convergent Curve Pool)"
        },
        {
          "id": "64zQC6Km1P6Zjfx2TLrWoR",
          "type": "smart_contract",
          "url": "https://github.com/element-fi/elf-contracts/blob/5517dbe0982b85bc7a7207b5119d9a728bf1f830/contracts/factories/ConvergentPoolFactory.sol",
          "description": "Custom Balancer Curve (Convergent Pool Factory)"
        },
        {
          "id": "4aLKhukFVvKqB45x3TtyT1",
          "type": "smart_contract",
          "url": "https://github.com/element-fi/council/blob/main/contracts/CoreVoting.sol",
          "description": "Core Voting"
        },
        {
          "id": "2xnxSByAGOFj3BIcPvSGwQ",
          "type": "smart_contract",
          "url": "https://github.com/element-fi/council/blob/main/contracts/simpleProxy.sol",
          "description": "Simple Proxy"
        },
        {
          "id": "Z0Fjwiu6Fpl3QRsNctpy8",
          "type": "smart_contract",
          "url": "https://github.com/element-fi/council/blob/main/contracts/vaults/GSCVault.sol",
          "description": "GSC Vault"
        },
        {
          "id": "5QApYqFaUS9PTvjkqZzfXe",
          "type": "smart_contract",
          "url": "https://github.com/element-fi/council/blob/main/contracts/vaults/LockingVault.sol",
          "description": "Locking Vault"
        },
        {
          "id": "38jkDNKahRMQkT0FGb18lq",
          "type": "smart_contract",
          "url": "https://github.com/element-fi/council/blob/main/contracts/vaults/OptimisticRewards.sol",
          "description": "Optimistic Rewards"
        },
        {
          "id": "61czE0YMl1vwxJcu5AjMOQ",
          "type": "smart_contract",
          "url": "https://github.com/element-fi/council/blob/main/contracts/vaults/VestingVault.sol",
          "description": "Vesting Vault"
        },
        {
          "id": "AbKVrXSDzGoyhm67WXEMu",
          "type": "smart_contract",
          "url": "https://github.com/element-fi/council/blob/main/contracts/libraries/History.sol",
          "description": "History"
        },
        {
          "id": "4aBLT19x70WMsqjX3mEJXC",
          "type": "smart_contract",
          "url": "https://github.com/element-fi/council/blob/main/contracts/libraries/MerkleRewards.sol",
          "description": "Merkle Rewards"
        },
        {
          "id": "pVe8aNNAiYP35BrsomFq5",
          "type": "smart_contract",
          "url": "https://github.com/element-fi/council/blob/main/contracts/libraries/ReentrancyBlock.sol",
          "description": "Reentrancy Block"
        },
        {
          "id": "2DjXLDuzt6HrhB9SPHzoeB",
          "type": "smart_contract",
          "url": "https://github.com/element-fi/council/blob/main/contracts/libraries/Storage.sol",
          "description": "Storage"
        },
        {
          "id": "1bw1B1VByUTYm6nSiWEi4v",
          "type": "smart_contract",
          "url": "https://github.com/element-fi/council/blob/main/contracts/libraries/VestingVaultStorage.sol",
          "description": "Vesting Vault Storage"
        },
        {
          "id": "7zcdLtMCgLrtFaPes3hPHC",
          "type": "smart_contract",
          "url": "https://github.com/element-fi/council/blob/main/contracts/features/OptimisticGrants.sol",
          "description": "Optimistic Grants"
        },
        {
          "id": "62oawVq4YIapR5jgJWWNas",
          "type": "smart_contract",
          "url": "https://github.com/element-fi/council/blob/main/contracts/features/Spender.sol",
          "description": "Spender"
        },
        {
          "id": "1qLp4ppaObXqZcZwSYWRZr",
          "type": "smart_contract",
          "url": "https://github.com/element-fi/council/blob/main/contracts/features/Timelock.sol",
          "description": "Timelock"
        },
        {
          "id": "5GTsvSfBHOUyzjYnqKKiRl",
          "type": "smart_contract",
          "url": "https://github.com/element-fi/council/blob/main/contracts/features/Treasury.sol",
          "description": "Treasury"
        }
      ],
      "impacts": [
        {
          "id": "2JdIhS1pDM9sGSmfa7sWGI",
          "title": "Any governance voting result manipulation",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5belA3L5H3aXA3kra4ApF1",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5emnCHqOBJi8hcUymhbtXh",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "7mtsTFYKbfcippL04TtmxV",
          "title": "Miner-extractable value (MEV)",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6hSUUl1k4a9pXcPeVW0fHe",
          "title": "Protocol Insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "7gGgrpnP3fMhuAHxaOMj6E",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "1XZHnuBlH9KjSkP40prHxu",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "2Sv7yNEUM05X1WD4iuQhfo",
          "title": "Temporary freezing of funds",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "3Df4Mn43p1iO1AjsjCXWHw",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5vm55pRT1hSvSXEqccGNTM",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3OkJlKiY7beagIcVzAftTh",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "1QiHyD4iqa5jO5TSu5C1MX",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "7AXcTB5H3u8PCX5wfertON",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5DfLrDO8Jxp1yJlqJUWtrV",
          "title": "Contract fails to deliver promised returns, but doesn't lose value",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "Element Finance brings high fixed yield income to the DeFi market, initially focused on ETH, BTC, USDC, and DAI. Users can purchase ETH, BTC, USDC, and DAI at a discount without being locked into a term, allowing the exchange of the discounted asset and the base asset at any time. The fixed rate income can be secured with the exchange of any major base asset. For active DeFi users, the Element Protocol provides capital efficiency on yield positions they are already depositing into, such as Yearn or ETH2 staking. Users can sell their deposited principal at a discount as fixed yield income, leveraging or increasing exposure to yield without liquidation risk. This competitive activity is what drives the high fixed yield markets. This construction paper breaks down the Element Protocol and discusses how it can open the door to a number of new primitives and innovations.\n\nFurther information regarding Element Finance can be found on their Construction Paper, [https://paper.element.fi/](https://paper.element.fi/).  \nThe bug bounty program is focused around its smart contracts and is mostly concerned with the loss of user funds and the access to those funds without user permission.\n",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nIn addition to assessing severity, the rewards will be considered based on the impact of the discovered vulnerability as well as the level of difficulty in discovering such vulnerability.\n\nPayouts are handled by the __Element Finance__ team directly and are denominated in __USD__. However, payouts are done in __DAI__ or __USDC__.\n",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty\n\n__Terms__\n\nBy submitting your report through Immunefi, you grant Element Finance the rights to validate, mitigate, and disclose the vulnerability. All bug bounty reward decisions, including eligibility, amounts for rewards, and how such rewards will be paid, are made at Element’s sole discretion. The terms and conditions of this Bug Bounty Program may be altered at any time.",
      "assetsBodyV2": "All Smart Contracts deployed or intended for deployment (e.g not in the test folder) in [https://github.com/element-fi/elf-contracts/tree/5517dbe0982b85bc7a7207b5119d9a728bf1f830](https://github.com/element-fi/elf-contracts/tree/5517dbe0982b85bc7a7207b5119d9a728bf1f830) are within the scope of this bug bounty program. However, the Smart Contracts listed in this table are prioritized, and this prioritization is taken into account when deciding on the reward amount.\n\n__Disclosure and Reporting Guidelines__\n\nWe ask that all bug bounty hunters, security engineers, and researchers:\n\n  - Make it a priority to avoid privacy violations, degradation of user   experience, and disruption to production systems during security testing.\n  - Report vulnerabilities as soon as they have been discovered and keep them confidential between yourself and the Element team until the issue(s) has been resolved.\n  - Only use the Immunefi bug reporting interface to report vulnerability information to us.\n  - Provide the team with at least 5 working days to investigate the issue and get back to you before taking any further action.\n",
      "impactsBody": "These accepted impacts are then based on the severity classification system of this bug bounty program. When submitting a bug report, please select the severity level you feel best corresponds to the severity classification system as long as the impact itself is one of the listed items. ",
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Synthetic Assets"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $20,000 to USD $100,000"
          },
          {
            "level": "High",
            "payout": "USD $5,000 to USD $20,000"
          },
          {
            "level": "Medium",
            "payout": "USD $1,000 to USD $5,000"
          },
          {
            "level": "Low",
            "payout": "Up to USD $1,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Element Finance brings high fixed yield income to the DeFi market, initially focused on ETH, BTC, USDC, and DAI. Users can purchase ETH, BTC, USDC, and DAI at a discount without being locked into a term, allowing the exchange of the discounted asset and the base asset at any time. The fixed rate income can be secured with the exchange of any major base asset. For active DeFi users, the Element Protocol provides capital efficiency on yield positions they are already depositing into, such as Yearn or ETH2 staking. Users can sell their deposited principal at a discount as fixed yield income, leveraging or increasing exposure to yield without liquidation risk. This competitive activity is what drives the high fixed yield markets. This construction paper breaks down the Element Protocol and discusses how it can open the door to a number of new primitives and innovations.\"), mdx(\"p\", null, \"Further information regarding Element Finance can be found on their Construction Paper, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://paper.element.fi/\"\n  }, \"https://paper.element.fi/\"), \".\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"The bug bounty program is focused around its smart contracts and is mostly concerned with the loss of user funds and the access to those funds without user permission.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Element Finance brings high fixed yield income to the DeFi market, initially focused on ETH, BTC, USDC, and DAI. Users can purchase ETH, BTC, USDC, and DAI at a discount without being locked into a term, allowing the exchange of the discounted asset and the base asset at any time. The fixed rate income can be secured with the exchange of any major base asset. For active DeFi users, the Element Protocol provides capital efficiency on yield positions they are already depositing into, such as Yearn or ETH2 staking. Users can sell their deposited principal at a discount as fixed yield income, leveraging or increasing exposure to yield without liquidation risk. This competitive activity is what drives the high fixed yield markets. This construction paper breaks down the Element Protocol and discusses how it can open the door to a number of new primitives and innovations.</p><p>Further information regarding Element Finance can be found on their Construction Paper, <a href=\"https://paper.element.fi/\">https://paper.element.fi/</a>.<br/>\n<!-- -->The bug bounty program is focused around its smart contracts and is mostly concerned with the loss of user funds and the access to those funds without user permission.</p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \"), mdx(\"p\", null, \"In addition to assessing severity, the rewards will be considered based on the impact of the discovered vulnerability as well as the level of difficulty in discovering such vulnerability.\"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Element Finance\"), \" team directly and are denominated in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD\"), \". However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"DAI\"), \" or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. </p><p>In addition to assessing severity, the rewards will be considered based on the impact of the discovered vulnerability as well as the level of difficulty in discovering such vulnerability.</p><p>Payouts are handled by the <strong>Element Finance</strong> team directly and are denominated in <strong>USD</strong>. However, payouts are done in <strong>DAI</strong> or <strong>USDC</strong>.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Terms\")), mdx(\"p\", null, \"By submitting your report through Immunefi, you grant Element Finance the rights to validate, mitigate, and disclose the vulnerability. All bug bounty reward decisions, including eligibility, amounts for rewards, and how such rewards will be paid, are made at Element\\u2019s sole discretion. The terms and conditions of this Bug Bounty Program may be altered at any time.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul><p><strong>Terms</strong></p><p>By submitting your report through Immunefi, you grant Element Finance the rights to validate, mitigate, and disclose the vulnerability. All bug bounty reward decisions, including eligibility, amounts for rewards, and how such rewards will be paid, are made at Element’s sole discretion. The terms and conditions of this Bug Bounty Program may be altered at any time.</p>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All Smart Contracts deployed or intended for deployment (e.g not in the test folder) in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/element-fi/elf-contracts/tree/5517dbe0982b85bc7a7207b5119d9a728bf1f830\"\n  }, \"https://github.com/element-fi/elf-contracts/tree/5517dbe0982b85bc7a7207b5119d9a728bf1f830\"), \" are within the scope of this bug bounty program. However, the Smart Contracts listed in this table are prioritized, and this prioritization is taken into account when deciding on the reward amount.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Disclosure and Reporting Guidelines\")), mdx(\"p\", null, \"We ask that all bug bounty hunters, security engineers, and researchers:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Make it a priority to avoid privacy violations, degradation of user   experience, and disruption to production systems during security testing.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Report vulnerabilities as soon as they have been discovered and keep them confidential between yourself and the Element team until the issue(s) has been resolved.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Only use the Immunefi bug reporting interface to report vulnerability information to us.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Provide the team with at least 5 working days to investigate the issue and get back to you before taking any further action.\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All Smart Contracts deployed or intended for deployment (e.g not in the test folder) in <a href=\"https://github.com/element-fi/elf-contracts/tree/5517dbe0982b85bc7a7207b5119d9a728bf1f830\">https://github.com/element-fi/elf-contracts/tree/5517dbe0982b85bc7a7207b5119d9a728bf1f830</a> are within the scope of this bug bounty program. However, the Smart Contracts listed in this table are prioritized, and this prioritization is taken into account when deciding on the reward amount.</p><p><strong>Disclosure and Reporting Guidelines</strong></p><p>We ask that all bug bounty hunters, security engineers, and researchers:</p><ul><li>Make it a priority to avoid privacy violations, degradation of user   experience, and disruption to production systems during security testing.</li><li>Report vulnerabilities as soon as they have been discovered and keep them confidential between yourself and the Element team until the issue(s) has been resolved.</li><li>Only use the Immunefi bug reporting interface to report vulnerability information to us.</li><li>Provide the team with at least 5 working days to investigate the issue and get back to you before taking any further action.</li></ul>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"These accepted impacts are then based on the severity classification system of this bug bounty program. When submitting a bug report, please select the severity level you feel best corresponds to the severity classification system as long as the impact itself is one of the listed items. \"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>These accepted impacts are then based on the severity classification system of this bug bounty program. When submitting a bug report, please select the severity level you feel best corresponds to the severity classification system as long as the impact itself is one of the listed items. </p>",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

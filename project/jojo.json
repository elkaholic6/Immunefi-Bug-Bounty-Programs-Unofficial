{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "jojo",
      "slug": "jojo",
      "project": "JOJO",
      "maxBounty": 30000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/rWNBP92Ry81mayWFBRjvm/e5be6632e7a3bf80a1aefb6686c715b9/JOJO_logo.png",
      "launchDate": "2022-12-16T12:00-06:00",
      "updatedDate": "2023-07-10T17:19:51.291Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $30,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $10,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "critical",
          "payout": "USD $10,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "high",
          "payout": "USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "medium",
          "payout": "USD $1,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "3BbdTKUA2ZXFlGaJ8yyZuc",
          "type": "smart_contract",
          "url": "https://github.com/JOJOexchange/smart-contract-EVM/blob/b28b63ca48adf6d28e16270c1a178d7a927808e2/contracts/impl/JOJODealer.sol",
          "description": "JOJODealer"
        },
        {
          "id": "76twqK4chpEp910xUM1rUC",
          "type": "websites_and_applications",
          "url": "https://app.jojo.exchange/trade",
          "description": "Main App"
        }
      ],
      "impacts": [
        {
          "id": "nVn4HW3I4HjR23NtUj8nX",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "7ucrNUOCyf5TkrZBq9p2Ez",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "7IO9EW4nEmcUbBdDSR4fo6",
          "title": "Protocol insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2yvM99UCeyGPNGgOfWrLTh",
          "title": "Execute arbitrary system commands",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "2tYlJ19Hom30TB0kjDTHam",
          "title": "Retrieve sensitive data/files from a running server such as: /etc/shadow, database passwords, blockchain keys (this does not include non-sensitive environment variables, open source code, or usernames)",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "e5SNjW4AeepIuj8vwJbks",
          "title": "Taking down the application/website",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "2OkbvZmKS4VpwAz40zIyX4",
          "title": "Taking state-modifying authenticated actions (with or without blockchain state interaction) on behalf of other users without any interaction by that user, such as: Changing registration information, Making trades, Withdrawals, etc.",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "7EMMpnGvS8ZQxYAkt8K2tC",
          "title": "Changing the NFT metadata",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "504oUuVjTiwGy07EBY6C5H",
          "title": "Subdomain takeover with already-connected wallet interaction",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "1HoZxozGvfLTcC62dmdTwi",
          "title": "Direct theft of user funds",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "5zAWm6n4L1AQfPvVvwLqEM",
          "title": "Malicious interactions with an already-connected wallet such as: Modifying transaction arguments or parameters, Substituting contract addresses, Submitting malicious transactions",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "74fv3vV9sBvkJE5IDiZcHt",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6hAwvEZ3CCOEabjjmhXaUb",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6XVghNhrBudiUK9Es05JZ4",
          "title": "Temporary freezing of funds",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "7jcVE3IjJMQnzFVuZfRl22",
          "title": "Injecting/modifying the static content on the target application without Javascript (Persistent) such as: HTML injection without Javascript, Replacing existing text with arbitrary text, Arbitrary file uploads, etc.",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "4wY6sbL3rOrqnpB3QM7ydk",
          "title": "Changing sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, such as: Email or password of the victim, etc.",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "2VISfEYT3HqMUfj9QiuX6Y",
          "title": "Improperly disclosing confidential user information such as: Email address",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "5shGb0f7b22vwEfEr471nC",
          "title": "Subdomain takeover without already-connected wallet interaction",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "2HigDyslbJ9DVULO8A5OWG",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "2FrhFodLnBwCWP6yGt8SGb",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "TFXrzMILJdMgaH5DgnoYq",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "GaGxCbQ1Jvo9WrOwlRW6s",
          "title": "Changing non-sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, such as: Changing the name of user, Enabling/disabling notifications",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "75hyaHnVzmVTl35o0CCZ7C",
          "title": "Injecting/modifying the static content on the target application without Javascript (Reflected) such as: Reflected HTML injection, Loading external site data",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "3vMG5XYxBIOi6qyxD9hyPk",
          "title": "Redirecting users to malicious websites (Open Redirect)",
          "type": "websites_and_applications",
          "severity": "medium"
        }
      ],
      "programOverview": "JOJO is a decentralized perpetual contract exchange based on a pure on-chain perpetual contract ledger and an off-chain matching system, which could provide much deeper liquidity than the AMM type of perpetual contracts.\n\nFor more information about JOJO, please visit [https://jojo.exchange/ ](https://jojo.exchange/) \n\nJOJO provides rewards in USDT and USDC. For more details about the payment process, please view the Rewards by Threat Level section further below. \n\n__Responsible Publication__\n\nJOJO adheres to category 3. This Policy determines what information whitehats are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our [Responsible Publication](https://immunefi.com/responsible-publication/) page.\n\n__Primacy of Impact vs Primacy of Rules__\n\nJOJO adheres to the Primacy of Impact for the following severity levels:\n- Smart Contract - Critical\n\nIf a category’s severity level is covered within the Primacy of Impact, it means that even if the impacted asset is not in-scope but is owned by the project, then it would be considered as in-scope of the bug bounty program as long as it involves an impact under that respective severity level. When submitting a report, just select the Primacy of Impact asset placeholder. If the team behind this project has multiple projects, those other projects are not covered under the Primacy of Impact of this program. Instead, check if those other projects have a bug bounty program on Immunefi.\n\nTestnet and mock files are not covered under the Primacy of Impact. \n\nAll other severity levels not listed here are considered under the Primacy of Rules, which means that they are bound by the terms of the bug bounty program.\n\n__Known Issue Assurance__\n\nJOJO commits to providing Known Issue Assurance to bug submissions through their program. This means that JOJO will either disclose known issues publicly or at the very least privately via a self-reported bug submission in order to allow for a more objective and streamlined mediation process to prove that an issue is known. Otherwise, assuming the bug report itself is valid, it would result in the bug report being considered in-scope and due 100% of the reward with respect to the bug bounty program terms. \n\n__Immunefi Standard Badge__\n\nJOJO has satisfied the requirements for the [Immunefi Standard Badge,](https://immunefisupport.zendesk.com/hc/en-us/articles/6427157117713-The-Immunefi-Standard-Badge-) which is given to projects that adhere to our best practices. \n",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact the vulnerability could otherwise cause based on the Impacts in Scope table further below. \n\n__Repeatable Attack Limitations__\n\nIn cases of repeatable attacks for smart contract bugs, only the first attack will be counted, regardless of whether the smart contract is upgradable, pausable, or killable.\n\n__Public Disclosure of Known Issues__\n\nBug reports covering previously-discovered bugs acknowledged below are not eligible for any reward through the bug bounty program. \n- Incompatibility with Deflationary Tokens: primary asset and secondary asset are standard ERC20 token\n- Missing Zero Address Validation\n- Removal of `Perpetual`：It is the normal logic, delist the perpetual\n- Low-level Call: About the execute operation of Subaccount.\n- Address Poisoning Attack: caused by the user's wrong copy address and team can not do something for help.\n- Asset losses of less than 1e-2 due to loss of precision are not considered\n- Centralization Risk: admin have excessive authority, FundingRateKeeper role, JOJO operation role, valid orderSender, emergency oracle owner, insurance account. All have used multi-sig.\n- Unused contract: in the delist, we will replace the oracle to make the price anchored a fixed price\n- Open positions are discarded if `Perpetual` is deregistered: only remove when no position\n- Third Party Dependencies: chainlink Oracle Failed\n- Potential Reentrancy Attack:\n   - _settle() after IDealer(owner()).requestLiquidation\n   - change secondaryCredit after IERC20(state.primaryAsset).safeTransfer(to, primaryAmount); in funding.sol\n   - change secondaryAsset after IDecimalERC20(_secondaryAsset).decimals() in Operation.sol\n- DOS attack possible for trading: only valid msg.sender can call approveTrade. If there are too many orders and cannot be matched, we will divide them into multiple transactions.\n- setOperator function is missing onlyOwner modifier: this function is aiming to set every user own operator so no need modifier\n\n__Previous Audits__\n\nJOJO has provided these completed audit review reports for reference. Any unfixed vulnerability mentioned in these reports are not eligible for a reward.\n- [https://github.com/JOJOexchange/smart-contract-EVM/blob/fix-review/audit/JOJO_Exchange_Audit_Report.pdf](https://github.com/JOJOexchange/smart-contract-EVM/blob/fix-review/audit/JOJO_Exchange_Audit_Report.pdf)\n- [https://github.com/JOJOexchange/smart-contract-EVM/blob/fix-review/audit/REP-final-20230109T013939Z.pdf](https://github.com/JOJOexchange/smart-contract-EVM/blob/fix-review/audit/REP-final-20230109T013939Z.pdf)\n- [https://github.com/JOJOexchange/smart-contract-EVM/blob/fix-review/audit/SlowMist%20Audit%20Report%20-%20JOJOexchange.pdf](https://github.com/JOJOexchange/smart-contract-EVM/blob/fix-review/audit/SlowMist%20Audit%20Report%20-%20JOJOexchange.pdf)\n\n__Feasibility Limitations__\n\nBug reports that require an attack that involve one or more other protocols (e.g. utilizing flash loans from a margin protocol or manipulating the spot prices on a DEX), either to make an attack more severe than it would be in isolation, or to achieve an attack that would otherwise be impossible or infeasible, would be making the report out-of-scope. However, they will be considered as in-scope and categorized according to the program rules as long as all of the following are true:\n- Losses or other negative effects of the attack are inflicted upon JOJO ecosystem participants \n- The additional protocols used must have enough liquidity in various assets to allow the attack to succeed at the time of bug report submission. For example: if an attack requires an ETH flash loan, but the amount is larger than all the ETH available for loan across the ecosystem\n- Timestamp manipulation to bypass the time lock.\n\n__Proof of Concept (PoC) Requirements__\n\nA PoC is required for the following severity levels:\n- Smart Contract - Critical\n- Smart Contract - High\n- Smart Contract - Medium\n- Web/App - Critical\n- Web/App - High\n- Web/App - Medium\n\nAll PoCs submitted must comply with the [Immunefi-wide PoC Guidelines and Rules.](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules) Bug report submissions without a PoC when a PoC is required will not be provided with a reward.\n\n__Reward Payment Terms__\n\nPayouts are handled by the JOJO team directly and are denominated in USD. However, payments are done in USDT and USDC. \n",
      "outOfScopeAndRules": "These impacts are out of scope for this bug bounty program. \n\n__All Categories__\n\n- Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\n- Impacts caused by attacks requiring access to leaked keys/credentials\n- Impacts caused by attacks requiring access to privileged addresses (governance, strategist) except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\n- Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code\n- Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\n- Best practice recommendations\n- Feature requests\n- Impacts on test files and configuration files unless stated otherwise in the bug bounty program\n\n__Smart Contracts and Blockchain/DLT__ \n\n- Incorrect data supplied by third party oracles\n   - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks\n- Best practice recommendations\n\n__Web/App__ \n\n- Theoretical impacts without any proof or demonstration\n- Impacts involving attacks requiring physical access to the victim device\n- Impacts involving attacks requiring access to the local network of the victim\n- Reflected plain text injection (e.g. url parameters, path, etc.)\n   - This does not exclude reflected HTML injection with or without JavaScript\n   - This does not exclude persistent plain text injection\n- Any impacts involving self-XSS\n- Captcha bypass using OCR without impact demonstration\n- CSRF with no state modifying security impact (e.g. logout CSRF)\n- Impacts related to missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”) without demonstration of impact\n- Server-side non-confidential information disclosure, such as IPs, server names, and most stack traces\n- Impacts causing only the enumeration or confirmation of the existence of users or tenants\n- Impacts caused by vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows\n- Lack of SSL/TLS best practices\n- Impacts that only require DDoS\n- UX and UI impacts that do not materially disrupt use of the platform\n- Impacts primarily caused by browser/plugin defects\n- Leakage of non sensitive API keys (e.g. Etherscan, Infura, Alchemy, etc.)\n- Any vulnerability exploit requiring browser bugs for exploitation (e.g. CSP bypass) \n- SPF/DMARC misconfigured records\n- Missing HTTP Headers without demonstrated impact\n- Automated scanner reports without demonstrated impact\n- UI/UX best practice recommendations\n- Non-future-proof NFT rendering\n\nThe following activities are prohibited by this bug bounty program:\n\n- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n",
      "assetsBodyV2": "All code of JOJO can be found at [https://github.com/JOJOexchange/smart-contract-EVM](https://github.com/JOJOexchange/smart-contract-EVM). Documentation for the assets provided in the table can be found at [https://about.jojo.exchange/jojo/jojo-exchange/overview](https://about.jojo.exchange/jojo/jojo-exchange/overview)\n\nBlockchain explorer for JOJODealer can be found here:  [https://explorer.zksync.io/address/0x47eAD228547db8397398C1D3aAfd0847CBEbddeC](https://explorer.zksync.io/address/0x47eAD228547db8397398C1D3aAfd0847CBEbddeC)\n\nUnless explicitly listed, only pages of the web/app assets in addition to the direct link are considered in-scope of the bug bounty program. Other subdomains are not considered as in-scope. However, for subdomain takeovers that lead to an impact on the in-scope asset, please refer to our page about [Reported Subdomain Takeovers.](https://immunefisupport.zendesk.com/hc/en-us/articles/14352199704593-Reported-Subdomain-Takeovers)\n\nOther helpful links include:\n- Dev Resource - [https://jojo-docs.netlify.app/](https://jojo-docs.netlify.app/)\n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Perpetuals"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "language": null
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $30,000"
          },
          {
            "level": "High",
            "payout": "USD $10,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          }
        ],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "USD $10,000"
          },
          {
            "level": "High",
            "payout": "USD $5,000"
          },
          {
            "level": "Medium",
            "payout": "USD $1,000"
          }
        ]
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"JOJO is a decentralized perpetual contract exchange based on a pure on-chain perpetual contract ledger and an off-chain matching system, which could provide much deeper liquidity than the AMM type of perpetual contracts.\"), mdx(\"p\", null, \"For more information about JOJO, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://jojo.exchange/\"\n  }, \"https://jojo.exchange/ \"), \" \"), mdx(\"p\", null, \"JOJO provides rewards in USDT and USDC. For more details about the payment process, please view the Rewards by Threat Level section further below. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Responsible Publication\")), mdx(\"p\", null, \"JOJO adheres to category 3. This Policy determines what information whitehats are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/responsible-publication/\"\n  }, \"Responsible Publication\"), \" page.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Primacy of Impact vs Primacy of Rules\")), mdx(\"p\", null, \"JOJO adheres to the Primacy of Impact for the following severity levels:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract - Critical\")), mdx(\"p\", null, \"If a category\\u2019s severity level is covered within the Primacy of Impact, it means that even if the impacted asset is not in-scope but is owned by the project, then it would be considered as in-scope of the bug bounty program as long as it involves an impact under that respective severity level. When submitting a report, just select the Primacy of Impact asset placeholder. If the team behind this project has multiple projects, those other projects are not covered under the Primacy of Impact of this program. Instead, check if those other projects have a bug bounty program on Immunefi.\"), mdx(\"p\", null, \"Testnet and mock files are not covered under the Primacy of Impact. \"), mdx(\"p\", null, \"All other severity levels not listed here are considered under the Primacy of Rules, which means that they are bound by the terms of the bug bounty program.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Known Issue Assurance\")), mdx(\"p\", null, \"JOJO commits to providing Known Issue Assurance to bug submissions through their program. This means that JOJO will either disclose known issues publicly or at the very least privately via a self-reported bug submission in order to allow for a more objective and streamlined mediation process to prove that an issue is known. Otherwise, assuming the bug report itself is valid, it would result in the bug report being considered in-scope and due 100% of the reward with respect to the bug bounty program terms. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Immunefi Standard Badge\")), mdx(\"p\", null, \"JOJO has satisfied the requirements for the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/6427157117713-The-Immunefi-Standard-Badge-\"\n  }, \"Immunefi Standard Badge,\"), \" which is given to projects that adhere to our best practices. \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>JOJO is a decentralized perpetual contract exchange based on a pure on-chain perpetual contract ledger and an off-chain matching system, which could provide much deeper liquidity than the AMM type of perpetual contracts.</p><p>For more information about JOJO, please visit <a href=\"https://jojo.exchange/\">https://jojo.exchange/ </a> </p><p>JOJO provides rewards in USDT and USDC. For more details about the payment process, please view the Rewards by Threat Level section further below. </p><p><strong>Responsible Publication</strong></p><p>JOJO adheres to category 3. This Policy determines what information whitehats are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our <a href=\"https://immunefi.com/responsible-publication/\">Responsible Publication</a> page.</p><p><strong>Primacy of Impact vs Primacy of Rules</strong></p><p>JOJO adheres to the Primacy of Impact for the following severity levels:</p><ul><li>Smart Contract - Critical</li></ul><p>If a category’s severity level is covered within the Primacy of Impact, it means that even if the impacted asset is not in-scope but is owned by the project, then it would be considered as in-scope of the bug bounty program as long as it involves an impact under that respective severity level. When submitting a report, just select the Primacy of Impact asset placeholder. If the team behind this project has multiple projects, those other projects are not covered under the Primacy of Impact of this program. Instead, check if those other projects have a bug bounty program on Immunefi.</p><p>Testnet and mock files are not covered under the Primacy of Impact. </p><p>All other severity levels not listed here are considered under the Primacy of Rules, which means that they are bound by the terms of the bug bounty program.</p><p><strong>Known Issue Assurance</strong></p><p>JOJO commits to providing Known Issue Assurance to bug submissions through their program. This means that JOJO will either disclose known issues publicly or at the very least privately via a self-reported bug submission in order to allow for a more objective and streamlined mediation process to prove that an issue is known. Otherwise, assuming the bug report itself is valid, it would result in the bug report being considered in-scope and due 100% of the reward with respect to the bug bounty program terms. </p><p><strong>Immunefi Standard Badge</strong></p><p>JOJO has satisfied the requirements for the <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/6427157117713-The-Immunefi-Standard-Badge-\">Immunefi Standard Badge,</a> which is given to projects that adhere to our best practices. </p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact the vulnerability could otherwise cause based on the Impacts in Scope table further below. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Repeatable Attack Limitations\")), mdx(\"p\", null, \"In cases of repeatable attacks for smart contract bugs, only the first attack will be counted, regardless of whether the smart contract is upgradable, pausable, or killable.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Public Disclosure of Known Issues\")), mdx(\"p\", null, \"Bug reports covering previously-discovered bugs acknowledged below are not eligible for any reward through the bug bounty program. \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incompatibility with Deflationary Tokens: primary asset and secondary asset are standard ERC20 token\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing Zero Address Validation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Removal of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Perpetual\"), \"\\uFF1AIt is the normal logic, delist the perpetual\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Low-level Call: About the execute operation of Subaccount.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Address Poisoning Attack: caused by the user's wrong copy address and team can not do something for help.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Asset losses of less than 1e-2 due to loss of precision are not considered\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization Risk: admin have excessive authority, FundingRateKeeper role, JOJO operation role, valid orderSender, emergency oracle owner, insurance account. All have used multi-sig.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unused contract: in the delist, we will replace the oracle to make the price anchored a fixed price\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Open positions are discarded if \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Perpetual\"), \" is deregistered: only remove when no position\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Third Party Dependencies: chainlink Oracle Failed\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Potential Reentrancy Attack:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"_settle() after IDealer(owner()).requestLiquidation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"change secondaryCredit after IERC20(state.primaryAsset).safeTransfer(to, primaryAmount); in funding.sol\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"change secondaryAsset after IDecimalERC20(_secondaryAsset).decimals() in Operation.sol\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DOS attack possible for trading: only valid msg.sender can call approveTrade. If there are too many orders and cannot be matched, we will divide them into multiple transactions.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"setOperator function is missing onlyOwner modifier: this function is aiming to set every user own operator so no need modifier\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Previous Audits\")), mdx(\"p\", null, \"JOJO has provided these completed audit review reports for reference. Any unfixed vulnerability mentioned in these reports are not eligible for a reward.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/JOJOexchange/smart-contract-EVM/blob/fix-review/audit/JOJO_Exchange_Audit_Report.pdf\"\n  }, \"https://github.com/JOJOexchange/smart-contract-EVM/blob/fix-review/audit/JOJO_Exchange_Audit_Report.pdf\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/JOJOexchange/smart-contract-EVM/blob/fix-review/audit/REP-final-20230109T013939Z.pdf\"\n  }, \"https://github.com/JOJOexchange/smart-contract-EVM/blob/fix-review/audit/REP-final-20230109T013939Z.pdf\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/JOJOexchange/smart-contract-EVM/blob/fix-review/audit/SlowMist%20Audit%20Report%20-%20JOJOexchange.pdf\"\n  }, \"https://github.com/JOJOexchange/smart-contract-EVM/blob/fix-review/audit/SlowMist%20Audit%20Report%20-%20JOJOexchange.pdf\"))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Feasibility Limitations\")), mdx(\"p\", null, \"Bug reports that require an attack that involve one or more other protocols (e.g. utilizing flash loans from a margin protocol or manipulating the spot prices on a DEX), either to make an attack more severe than it would be in isolation, or to achieve an attack that would otherwise be impossible or infeasible, would be making the report out-of-scope. However, they will be considered as in-scope and categorized according to the program rules as long as all of the following are true:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Losses or other negative effects of the attack are inflicted upon JOJO ecosystem participants \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The additional protocols used must have enough liquidity in various assets to allow the attack to succeed at the time of bug report submission. For example: if an attack requires an ETH flash loan, but the amount is larger than all the ETH available for loan across the ecosystem\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Timestamp manipulation to bypass the time lock.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Proof of Concept (PoC) Requirements\")), mdx(\"p\", null, \"A PoC is required for the following severity levels:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract - Critical\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract - High\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract - Medium\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Web/App - Critical\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Web/App - High\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Web/App - Medium\")), mdx(\"p\", null, \"All PoCs submitted must comply with the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\"\n  }, \"Immunefi-wide PoC Guidelines and Rules.\"), \" Bug report submissions without a PoC when a PoC is required will not be provided with a reward.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Reward Payment Terms\")), mdx(\"p\", null, \"Payouts are handled by the JOJO team directly and are denominated in USD. However, payments are done in USDT and USDC. \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact the vulnerability could otherwise cause based on the Impacts in Scope table further below. </p><p><strong>Repeatable Attack Limitations</strong></p><p>In cases of repeatable attacks for smart contract bugs, only the first attack will be counted, regardless of whether the smart contract is upgradable, pausable, or killable.</p><p><strong>Public Disclosure of Known Issues</strong></p><p>Bug reports covering previously-discovered bugs acknowledged below are not eligible for any reward through the bug bounty program. </p><ul><li>Incompatibility with Deflationary Tokens: primary asset and secondary asset are standard ERC20 token</li><li>Missing Zero Address Validation</li><li>Removal of <code>Perpetual</code>：It is the normal logic, delist the perpetual</li><li>Low-level Call: About the execute operation of Subaccount.</li><li>Address Poisoning Attack: caused by the user&#x27;s wrong copy address and team can not do something for help.</li><li>Asset losses of less than 1e-2 due to loss of precision are not considered</li><li>Centralization Risk: admin have excessive authority, FundingRateKeeper role, JOJO operation role, valid orderSender, emergency oracle owner, insurance account. All have used multi-sig.</li><li>Unused contract: in the delist, we will replace the oracle to make the price anchored a fixed price</li><li>Open positions are discarded if <code>Perpetual</code> is deregistered: only remove when no position</li><li>Third Party Dependencies: chainlink Oracle Failed</li><li>Potential Reentrancy Attack:<ul><li>_settle() after IDealer(owner()).requestLiquidation</li><li>change secondaryCredit after IERC20(state.primaryAsset).safeTransfer(to, primaryAmount); in funding.sol</li><li>change secondaryAsset after IDecimalERC20(_secondaryAsset).decimals() in Operation.sol</li></ul></li><li>DOS attack possible for trading: only valid msg.sender can call approveTrade. If there are too many orders and cannot be matched, we will divide them into multiple transactions.</li><li>setOperator function is missing onlyOwner modifier: this function is aiming to set every user own operator so no need modifier</li></ul><p><strong>Previous Audits</strong></p><p>JOJO has provided these completed audit review reports for reference. Any unfixed vulnerability mentioned in these reports are not eligible for a reward.</p><ul><li><a href=\"https://github.com/JOJOexchange/smart-contract-EVM/blob/fix-review/audit/JOJO_Exchange_Audit_Report.pdf\">https://github.com/JOJOexchange/smart-contract-EVM/blob/fix-review/audit/JOJO_Exchange_Audit_Report.pdf</a></li><li><a href=\"https://github.com/JOJOexchange/smart-contract-EVM/blob/fix-review/audit/REP-final-20230109T013939Z.pdf\">https://github.com/JOJOexchange/smart-contract-EVM/blob/fix-review/audit/REP-final-20230109T013939Z.pdf</a></li><li><a href=\"https://github.com/JOJOexchange/smart-contract-EVM/blob/fix-review/audit/SlowMist%20Audit%20Report%20-%20JOJOexchange.pdf\">https://github.com/JOJOexchange/smart-contract-EVM/blob/fix-review/audit/SlowMist%20Audit%20Report%20-%20JOJOexchange.pdf</a></li></ul><p><strong>Feasibility Limitations</strong></p><p>Bug reports that require an attack that involve one or more other protocols (e.g. utilizing flash loans from a margin protocol or manipulating the spot prices on a DEX), either to make an attack more severe than it would be in isolation, or to achieve an attack that would otherwise be impossible or infeasible, would be making the report out-of-scope. However, they will be considered as in-scope and categorized according to the program rules as long as all of the following are true:</p><ul><li>Losses or other negative effects of the attack are inflicted upon JOJO ecosystem participants </li><li>The additional protocols used must have enough liquidity in various assets to allow the attack to succeed at the time of bug report submission. For example: if an attack requires an ETH flash loan, but the amount is larger than all the ETH available for loan across the ecosystem</li><li>Timestamp manipulation to bypass the time lock.</li></ul><p><strong>Proof of Concept (PoC) Requirements</strong></p><p>A PoC is required for the following severity levels:</p><ul><li>Smart Contract - Critical</li><li>Smart Contract - High</li><li>Smart Contract - Medium</li><li>Web/App - Critical</li><li>Web/App - High</li><li>Web/App - Medium</li></ul><p>All PoCs submitted must comply with the <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\">Immunefi-wide PoC Guidelines and Rules.</a> Bug report submissions without a PoC when a PoC is required will not be provided with a reward.</p><p><strong>Reward Payment Terms</strong></p><p>Payouts are handled by the JOJO team directly and are denominated in USD. However, payments are done in USDT and USDC. </p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"These impacts are out of scope for this bug bounty program. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"All Categories\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts caused by attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts caused by attacks requiring access to privileged addresses (governance, strategist) except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice recommendations\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Feature requests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts on test files and configuration files unless stated otherwise in the bug bounty program\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain/DLT\"), \" \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts requiring basic economic and governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity impacts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts from Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts involving centralization risks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice recommendations\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Web/App\"), \" \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theoretical impacts without any proof or demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts involving attacks requiring physical access to the victim device\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts involving attacks requiring access to the local network of the victim\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reflected plain text injection (e.g. url parameters, path, etc.)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This does not exclude reflected HTML injection with or without JavaScript\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This does not exclude persistent plain text injection\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any impacts involving self-XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Captcha bypass using OCR without impact demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with no state modifying security impact (e.g. logout CSRF)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts related to missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as \\u201Chttponly\\u201D) without demonstration of impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Server-side non-confidential information disclosure, such as IPs, server names, and most stack traces\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts causing only the enumeration or confirmation of the existence of users or tenants\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts caused by vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of SSL/TLS best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts that only require DDoS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UX and UI impacts that do not materially disrupt use of the platform\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts primarily caused by browser/plugin defects\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Leakage of non sensitive API keys (e.g. Etherscan, Infura, Alchemy, etc.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any vulnerability exploit requiring browser bugs for exploitation (e.g. CSP bypass) \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SPF/DMARC misconfigured records\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing HTTP Headers without demonstrated impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated scanner reports without demonstrated impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UI/UX best practice recommendations\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Non-future-proof NFT rendering\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third-party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks that are executed against project assets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>These impacts are out of scope for this bug bounty program. </p><p><strong>All Categories</strong></p><ul><li>Impacts requiring attacks that the reporter has already exploited themselves, leading to damage</li><li>Impacts caused by attacks requiring access to leaked keys/credentials</li><li>Impacts caused by attacks requiring access to privileged addresses (governance, strategist) except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible</li><li>Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code</li><li>Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production</li><li>Best practice recommendations</li><li>Feature requests</li><li>Impacts on test files and configuration files unless stated otherwise in the bug bounty program</li></ul><p><strong>Smart Contracts and Blockchain/DLT</strong> </p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Impacts requiring basic economic and governance attacks (e.g. 51% attack)</li><li>Lack of liquidity impacts</li><li>Impacts from Sybil attacks</li><li>Impacts involving centralization risks</li><li>Best practice recommendations</li></ul><p><strong>Web/App</strong> </p><ul><li>Theoretical impacts without any proof or demonstration</li><li>Impacts involving attacks requiring physical access to the victim device</li><li>Impacts involving attacks requiring access to the local network of the victim</li><li>Reflected plain text injection (e.g. url parameters, path, etc.)<ul><li>This does not exclude reflected HTML injection with or without JavaScript</li><li>This does not exclude persistent plain text injection</li></ul></li><li>Any impacts involving self-XSS</li><li>Captcha bypass using OCR without impact demonstration</li><li>CSRF with no state modifying security impact (e.g. logout CSRF)</li><li>Impacts related to missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”) without demonstration of impact</li><li>Server-side non-confidential information disclosure, such as IPs, server names, and most stack traces</li><li>Impacts causing only the enumeration or confirmation of the existence of users or tenants</li><li>Impacts caused by vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows</li><li>Lack of SSL/TLS best practices</li><li>Impacts that only require DDoS</li><li>UX and UI impacts that do not materially disrupt use of the platform</li><li>Impacts primarily caused by browser/plugin defects</li><li>Leakage of non sensitive API keys (e.g. Etherscan, Infura, Alchemy, etc.)</li><li>Any vulnerability exploit requiring browser bugs for exploitation (e.g. CSP bypass) </li><li>SPF/DMARC misconfigured records</li><li>Missing HTTP Headers without demonstrated impact</li><li>Automated scanner reports without demonstrated impact</li><li>UI/UX best practice recommendations</li><li>Non-future-proof NFT rendering</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet</li><li>Any testing with pricing oracles or third-party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks that are executed against project assets</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All code of JOJO can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/JOJOexchange/smart-contract-EVM\"\n  }, \"https://github.com/JOJOexchange/smart-contract-EVM\"), \". Documentation for the assets provided in the table can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://about.jojo.exchange/jojo/jojo-exchange/overview\"\n  }, \"https://about.jojo.exchange/jojo/jojo-exchange/overview\")), mdx(\"p\", null, \"Blockchain explorer for JOJODealer can be found here:  \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://explorer.zksync.io/address/0x47eAD228547db8397398C1D3aAfd0847CBEbddeC\"\n  }, \"https://explorer.zksync.io/address/0x47eAD228547db8397398C1D3aAfd0847CBEbddeC\")), mdx(\"p\", null, \"Unless explicitly listed, only pages of the web/app assets in addition to the direct link are considered in-scope of the bug bounty program. Other subdomains are not considered as in-scope. However, for subdomain takeovers that lead to an impact on the in-scope asset, please refer to our page about \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/14352199704593-Reported-Subdomain-Takeovers\"\n  }, \"Reported Subdomain Takeovers.\")), mdx(\"p\", null, \"Other helpful links include:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dev Resource - \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://jojo-docs.netlify.app/\"\n  }, \"https://jojo-docs.netlify.app/\"))));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All code of JOJO can be found at <a href=\"https://github.com/JOJOexchange/smart-contract-EVM\">https://github.com/JOJOexchange/smart-contract-EVM</a>. Documentation for the assets provided in the table can be found at <a href=\"https://about.jojo.exchange/jojo/jojo-exchange/overview\">https://about.jojo.exchange/jojo/jojo-exchange/overview</a></p><p>Blockchain explorer for JOJODealer can be found here:  <a href=\"https://explorer.zksync.io/address/0x47eAD228547db8397398C1D3aAfd0847CBEbddeC\">https://explorer.zksync.io/address/0x47eAD228547db8397398C1D3aAfd0847CBEbddeC</a></p><p>Unless explicitly listed, only pages of the web/app assets in addition to the direct link are considered in-scope of the bug bounty program. Other subdomains are not considered as in-scope. However, for subdomain takeovers that lead to an impact on the in-scope asset, please refer to our page about <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/14352199704593-Reported-Subdomain-Takeovers\">Reported Subdomain Takeovers.</a></p><p>Other helpful links include:</p><ul><li>Dev Resource - <a href=\"https://jojo-docs.netlify.app/\">https://jojo-docs.netlify.app/</a></li></ul>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

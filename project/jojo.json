{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "jojo",
      "slug": "jojo",
      "project": "JOJO",
      "maxBounty": 30000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/rWNBP92Ry81mayWFBRjvm/e5be6632e7a3bf80a1aefb6686c715b9/JOJO_logo.png",
      "launchDate": "2022-12-16T12:00-06:00",
      "updatedDate": "2023-03-16T15:15:48.634Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $30,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $10,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $3,000",
          "pocRequired": false
        },
        {
          "assetType": "websites_and_applications",
          "level": "critical",
          "payout": "USD $15,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "high",
          "payout": "USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "medium",
          "payout": "USD $1,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "3NyqJuvINirsFL84JTnXn4",
          "type": "smart_contract",
          "url": "https://testnet.arbiscan.io/address/0xFfD3B82971dAbccb3219d16b6EB2DB134bf55300#code",
          "description": "JOJODealer"
        },
        {
          "id": "5Bio52zrwJq75nszPKsTox",
          "type": "smart_contract",
          "url": "https://testnet.arbiscan.io/address/0x6558be57DAD2C41fCad8055079A7290356eD3e37#code",
          "description": "Perpetual BTCUSDC"
        },
        {
          "id": "41APWAsmo4xdeW9n0RZ9c",
          "type": "smart_contract",
          "url": "https://testnet.arbiscan.io/address/0x741654C43DC0562958E0b3c172F93f4bd54400F9#code",
          "description": "SubaccountFactory"
        },
        {
          "id": "1V9zqmmE47ckikq99G5tcq",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d#code",
          "description": "PrimaryAsset"
        },
        {
          "id": "2dJayS3BCE8OlCfphJFXgW",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0xc830c8637cA4ED48FcB98B1250aA9817EE4f2c0d#code",
          "description": "SecondaryAsset"
        },
        {
          "id": "3MgGw15qeOGv7DXYmcbJOY",
          "type": "websites_and_applications",
          "url": "https://jojo.exchange/",
          "description": "Main Web"
        },
        {
          "id": "6z7nUsEMmmPlkPwB8CbJWM",
          "type": "websites_and_applications",
          "url": "https://app.jojo.exchange/",
          "description": "Main App"
        }
      ],
      "impacts": [
        {
          "id": "nVn4HW3I4HjR23NtUj8nX",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "7ucrNUOCyf5TkrZBq9p2Ez",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "7IO9EW4nEmcUbBdDSR4fo6",
          "title": "Protocol insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4gaAAPrXwfgDXTuP7LlDkh",
          "title": "Wrong order matching",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3LLoq2Q4wVH5urqNmnoKkG",
          "title": "Trade others' fund",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "nHxYEBq5PwwekKayMUvw7",
          "title": "Unable to matching orders",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "45vGxWGSjX6bzigUEeAckd",
          "title": "Risk parameters being changed by non-owner address",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6dpMgOQ7NPnnkoAitcbWPZ",
          "title": "User escape from liquidation or being liquidated wrongly",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "LmzAqgKhMjSK0cGklw3jK",
          "title": "Execute arbitrary system commands",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "7hIdEHIc2eJmQLBfKYr0t9",
          "title": "Retrieve sensitive data/files from a running server such as /etc/shadow, database passwords, and blockchain keys (this does not include non-sensitive environment variables, open source code, or usernames)",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "42Bl2UBItVrP2T5kZat8ka",
          "title": "Taking down the application/website",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "7KpaP5PAAZ3xO430akdGE3",
          "title": "Taking state-modifying authenticated actions (with or without blockchain state interaction) on behalf of other users without any interaction by that user, such as changing registration information, making trades, withdrawals, etc.",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "7z7fxux4nO8couXN3FCmve",
          "title": "Subdomain takeover with already-connected wallet interaction",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "1daoUDpL0TAScIESMIcWSV",
          "title": "Direct theft of user funds",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "51pACffsGneP7jZDTWa1S",
          "title": "Malicious interactions with an already-connected wallet, such as modifying transaction arguments or parameters, substituting contract addresses, submitting malicious transactions",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "7mRwAbuqfGfKLw26XjBE8R",
          "title": "Temporary freezing of funds for any amount of time",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "WJXn5kZBfnf2FtlX9QMYI",
          "title": "Any risk-free arbitration",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "ELCAcpRpghmUAuKT7ymLx",
          "title": "Injecting/modifying the static content on the target application without Javascript (Persistent), such as HTML injection without Javascript, replacing the existing text with arbitrary text, arbitrary file uploads, etc.",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "4DyU4muPThwxHN4R0T6FFA",
          "title": "Changing sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, such as the email or password of the victim, etc.",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "48X8T0ukYsoNly25OUfQh0",
          "title": "Improperly disclosing confidential user information such as email address, phone number, physical address, etc.",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "6jpGTLdkelrba6OKtKBtwa",
          "title": "Redirecting users to malicious websites (Open Redirect)",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "1bE24wkMJecLFNKu5aeazl",
          "title": "Subdomain takeover without already-connected wallet interaction",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "2HigDyslbJ9DVULO8A5OWG",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "lsOQOH6s5b9j47i4eBFvu",
          "title": "Precision related issues",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "2yMKv7SKn3PymUoGBorpfk",
          "title": "Changing non-sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, i.e changing the first/last name of the user, or en/disabling notification",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "1S0WNzPok5AcQfNshtDlkI",
          "title": "Injecting/modifying the static content on the target application without Javascript (Reflected), such as reflected HTML injection or loading external site data",
          "type": "websites_and_applications",
          "severity": "medium"
        }
      ],
      "programOverview": "JOJO is a decentralized perpetual contract exchange based on a pure on-chain perpetual contract ledger and an off-chain matching system, which could provide much deeper liquidity than the AMM type of perpetual contracts.\n\nFor more information about JOJO, please visit [https://github.com/JOJOexchange/smart-contract-EVM/tree/immunefi-bug-bounty](https://github.com/JOJOexchange/smart-contract-EVM/tree/immunefi-bug-bounty).\n\nThis bug bounty program focuses on their smart contracts, websites, and apps with a primary interest in preventing the loss of user funds, either by direct draining of locked funds or social engineering attacks by redirecting users or forcing them to sign a transaction.",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\n\nAll web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. All High and Critical Smart Contract bug reports require a PoC to be eligible for a reward. Explanations and statements are not accepted as PoC, and code is required.\n\nThe following vulnerabilities are not eligible for a reward:\n\n  - [https://github.com/JOJOexchange/smart-contract-EVM/tree/main/audits](https://github.com/JOJOexchange/smart-contract-EVM/tree/main/audits)\n\nPayouts are handled by the __JOJO__ team directly and are denominated in USD. However, payouts are done in __USDT__.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\nAttacks that the reporter has already exploited themselves, leading to damage\nAttacks requiring access to leaked keys/credentials\nAttacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\n__Websites and Apps__\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Attacks requiring physical access to the victim's device\n- Attacks requiring access to the local network of the victim\n- Reflected plain text injection. Ex: URL parameters, path, etc.\n   - Reflected plain test injection does not exclude reflected HTML injection with or without javascript.\n   - Reflected plain test injection does not exclude persistent plain text injection\n- Self-XSS\n- Captcha bypass using OCR without impact demonstration\n- CSRF with no state modifying security impact (Ex: logout CSRF)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as \"httponly\") without demonstration of impact\n- Server-side non-confidential information disclosure, such as IPs, server names, and most stack traces\n- Vulnerabilities used only to enumerate or confirm the existence of users or tenants\n- Vulnerabilities requiring un-prompted, in-app user actions that are not part of the regular app workflows\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Feature requests\n- Issues related to the frontend without concrete impact and PoC\n- Best practices issues without concrete impact and PoC\n- Vulnerabilities are primarily caused by browser/plugin defects\n- Leakage of non-sensitive API keys ex: etherscan, Infura, Alchemy, etc\n- Any vulnerability exploits requiring browser bugs for exploitation. Ex: CSP bypass\n\nThis bug bounty program prohibits the following activities: \n\n- Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g., browser extensions) as well as websites (e.g., SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n",
      "assetsBodyV2": "All smart contracts of JOJO can be found at [https://github.com/JOJOexchange/smart-contract-EVM/tree/immunefi-bug-bounty](https://github.com/JOJOexchange/smart-contract-EVM/tree/immunefi-bug-bounty). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\nJOJO Dealer is a complex contract that references many other codes (every file in impl, utils, and lib). All codes it uses are in scope. \n\nIf an impact can be caused to any other asset managed by JOJO that isn’t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for consideration by the project. This only applies to ‘Critical’ impacts. \n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": null,
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "language": null
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $30,000"
          },
          {
            "level": "High",
            "payout": "USD $10,000"
          },
          {
            "level": "Medium",
            "payout": "USD $3,000"
          }
        ],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "USD $15,000"
          },
          {
            "level": "High",
            "payout": "USD $5,000"
          },
          {
            "level": "Medium",
            "payout": "USD $1,000"
          }
        ]
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"JOJO is a decentralized perpetual contract exchange based on a pure on-chain perpetual contract ledger and an off-chain matching system, which could provide much deeper liquidity than the AMM type of perpetual contracts.\"), mdx(\"p\", null, \"For more information about JOJO, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/JOJOexchange/smart-contract-EVM/tree/immunefi-bug-bounty\"\n  }, \"https://github.com/JOJOexchange/smart-contract-EVM/tree/immunefi-bug-bounty\"), \".\"), mdx(\"p\", null, \"This bug bounty program focuses on their smart contracts, websites, and apps with a primary interest in preventing the loss of user funds, either by direct draining of locked funds or social engineering attacks by redirecting users or forcing them to sign a transaction.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>JOJO is a decentralized perpetual contract exchange based on a pure on-chain perpetual contract ledger and an off-chain matching system, which could provide much deeper liquidity than the AMM type of perpetual contracts.</p><p>For more information about JOJO, please visit <a href=\"https://github.com/JOJOexchange/smart-contract-EVM/tree/immunefi-bug-bounty\">https://github.com/JOJOexchange/smart-contract-EVM/tree/immunefi-bug-bounty</a>.</p><p>This bug bounty program focuses on their smart contracts, websites, and apps with a primary interest in preventing the loss of user funds, either by direct draining of locked funds or social engineering attacks by redirecting users or forcing them to sign a transaction.</p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\"), mdx(\"p\", null, \"All web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. All High and Critical Smart Contract bug reports require a PoC to be eligible for a reward. Explanations and statements are not accepted as PoC, and code is required.\"), mdx(\"p\", null, \"The following vulnerabilities are not eligible for a reward:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/JOJOexchange/smart-contract-EVM/tree/main/audits\"\n  }, \"https://github.com/JOJOexchange/smart-contract-EVM/tree/main/audits\"))), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"JOJO\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDT\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.</p><p>All web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. All High and Critical Smart Contract bug reports require a PoC to be eligible for a reward. Explanations and statements are not accepted as PoC, and code is required.</p><p>The following vulnerabilities are not eligible for a reward:</p><ul><li><a href=\"https://github.com/JOJOexchange/smart-contract-EVM/tree/main/audits\">https://github.com/JOJOexchange/smart-contract-EVM/tree/main/audits</a></li></ul><p>Payouts are handled by the <strong>JOJO</strong> team directly and are denominated in USD. However, payouts are done in <strong>USDT</strong>.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"p\", null, \"Attacks that the reporter has already exploited themselves, leading to damage\\nAttacks requiring access to leaked keys/credentials\\nAttacks requiring access to privileged addresses (governance, strategist)\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theoretical vulnerabilities without any proof or demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring physical access to the victim's device\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to the local network of the victim\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reflected plain text injection. Ex: URL parameters, path, etc.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reflected plain test injection does not exclude reflected HTML injection with or without javascript.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reflected plain test injection does not exclude persistent plain text injection\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Self-XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Captcha bypass using OCR without impact demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with no state modifying security impact (Ex: logout CSRF)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as \\\"httponly\\\") without demonstration of impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Server-side non-confidential information disclosure, such as IPs, server names, and most stack traces\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities used only to enumerate or confirm the existence of users or tenants\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities requiring un-prompted, in-app user actions that are not part of the regular app workflows\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of SSL/TLS best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DDoS vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Feature requests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Issues related to the frontend without concrete impact and PoC\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practices issues without concrete impact and PoC\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities are primarily caused by browser/plugin defects\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Leakage of non-sensitive API keys ex: etherscan, Infura, Alchemy, etc\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any vulnerability exploits requiring browser bugs for exploitation. Ex: CSP bypass\")), mdx(\"p\", null, \"This bug bounty program prohibits the following activities: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third-party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third-party systems and applications (e.g., browser extensions) as well as websites (e.g., SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><p>Attacks that the reporter has already exploited themselves, leading to damage\nAttacks requiring access to leaked keys/credentials\nAttacks requiring access to privileged addresses (governance, strategist)</p><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p><strong>Websites and Apps</strong></p><ul><li>Theoretical vulnerabilities without any proof or demonstration</li><li>Attacks requiring physical access to the victim&#x27;s device</li><li>Attacks requiring access to the local network of the victim</li><li>Reflected plain text injection. Ex: URL parameters, path, etc.<ul><li>Reflected plain test injection does not exclude reflected HTML injection with or without javascript.</li><li>Reflected plain test injection does not exclude persistent plain text injection</li></ul></li><li>Self-XSS</li><li>Captcha bypass using OCR without impact demonstration</li><li>CSRF with no state modifying security impact (Ex: logout CSRF)</li><li>Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as &quot;httponly&quot;) without demonstration of impact</li><li>Server-side non-confidential information disclosure, such as IPs, server names, and most stack traces</li><li>Vulnerabilities used only to enumerate or confirm the existence of users or tenants</li><li>Vulnerabilities requiring un-prompted, in-app user actions that are not part of the regular app workflows</li><li>Lack of SSL/TLS best practices</li><li>DDoS vulnerabilities</li><li>Feature requests</li><li>Issues related to the frontend without concrete impact and PoC</li><li>Best practices issues without concrete impact and PoC</li><li>Vulnerabilities are primarily caused by browser/plugin defects</li><li>Leakage of non-sensitive API keys ex: etherscan, Infura, Alchemy, etc</li><li>Any vulnerability exploits requiring browser bugs for exploitation. Ex: CSP bypass</li></ul><p>This bug bounty program prohibits the following activities: </p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third-party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third-party systems and applications (e.g., browser extensions) as well as websites (e.g., SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of JOJO can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/JOJOexchange/smart-contract-EVM/tree/immunefi-bug-bounty\"\n  }, \"https://github.com/JOJOexchange/smart-contract-EVM/tree/immunefi-bug-bounty\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\"), mdx(\"p\", null, \"JOJO Dealer is a complex contract that references many other codes (every file in impl, utils, and lib). All codes it uses are in scope. \"), mdx(\"p\", null, \"If an impact can be caused to any other asset managed by JOJO that isn\\u2019t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for consideration by the project. This only applies to \\u2018Critical\\u2019 impacts. \"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of JOJO can be found at <a href=\"https://github.com/JOJOexchange/smart-contract-EVM/tree/immunefi-bug-bounty\">https://github.com/JOJOexchange/smart-contract-EVM/tree/immunefi-bug-bounty</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.</p><p>JOJO Dealer is a complex contract that references many other codes (every file in impl, utils, and lib). All codes it uses are in scope. </p><p>If an impact can be caused to any other asset managed by JOJO that isn’t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for consideration by the project. This only applies to ‘Critical’ impacts. </p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "lidoonpolygon",
      "slug": "lidoonpolygon",
      "project": "Lido on Polygon",
      "maxBounty": 2000000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/51D5leTvhTAzt8B5goyJwq/d530d33691ce32e0d4edbedcd3884dfa/Lido_for_Polygon.png",
      "launchDate": "2022-03-31T14:30-06:00",
      "updatedDate": "2023-04-15T08:41:24.673Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $100,000 to $2,000,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $20,000 to $400,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $5,000 to $100,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $2,000",
          "pocRequired": false
        },
        {
          "assetType": "websites_and_applications",
          "level": "critical",
          "payout": "USD $40,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "high",
          "payout": "USD $7,500 to $40,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "medium",
          "payout": "USD $3,250",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "2v7udBuSyrla9uuPwWWuJH",
          "type": "smart_contract",
          "url": "https://github.com/lidofinance/polygon-contracts/blob/main/contracts/StMATIC.sol",
          "description": "StMATIC"
        },
        {
          "id": "4Ll4Uqr8903czNtJ63us8h",
          "type": "smart_contract",
          "url": "https://github.com/lidofinance/polygon-contracts/blob/main/contracts/NodeOperatorRegistry.sol",
          "description": "NodeOperatorRegistry"
        },
        {
          "id": "2dvirJC3oHOBPaaTz9pANL",
          "type": "smart_contract",
          "url": "https://github.com/lidofinance/polygon-contracts/blob/main/contracts/PoLidoNFT.sol",
          "description": "PoLidoNFT"
        },
        {
          "id": "1gyt2ii1EzUpiZlAERzw4s",
          "type": "smart_contract",
          "url": "https://github.com/Shard-Labs/PoLido/blob/main/contracts/tunnel/FxBaseChildTunnel.sol",
          "description": "FxBaseChildTunnel"
        },
        {
          "id": "2mthih3QmRaFmBP7aEdMrK",
          "type": "smart_contract",
          "url": "https://github.com/Shard-Labs/PoLido/blob/main/contracts/tunnel/FxBaseRootTunnel.sol",
          "description": "FxBaseRootTunnel"
        },
        {
          "id": "ApG5yzJOb6jcu0szVDT3X",
          "type": "smart_contract",
          "url": "https://github.com/lidofinance/polygon-contracts/blob/main/contracts/state-transfer/FxStateChildTunnel.sol",
          "description": "FxStateChildTunnel"
        },
        {
          "id": "69WrxekzJNt8LsN6oPyn8G",
          "type": "smart_contract",
          "url": "https://github.com/lidofinance/polygon-contracts/blob/main/contracts/state-transfer/FxStateRootTunnel.sol",
          "description": "FxStateRootTunnel"
        },
        {
          "id": "4IrjChQdnzX5YJ0jQMUV8g",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x60a91E2B7A1568f0848f3D43353C453730082E46#code",
          "description": "lido_nft_proxy"
        },
        {
          "id": "62FEehOZBZLaj31Slh2B3I",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x4CA459DFC8b1cACa3763C954E889e6D644984385#code",
          "description": "lido_nft_impl"
        },
        {
          "id": "016o6qnjEwqcp0TZhRxAKC",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x9ee91F9f426fA633d227f7a9b000E28b9dfd8599#code",
          "description": "stMATIC_proxy"
        },
        {
          "id": "76o1B3VEqhwjGHFYTpwef",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x15152eEE59752F18C2de8fbd4Bc83Ec20c448303#code",
          "description": "stMATIC_impl"
        },
        {
          "id": "5sXiGIBYR0ZXjTmB9xjADs",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x216B8b78e0632138dc38907dd089aAB601ED6EDC#code",
          "description": "node_operator_registry_proxy"
        },
        {
          "id": "5lnneCvAKdXv4cdg9Lbgpf",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x1b6c71EdbdB8174420Cf9B368B38A1B52bfDd7F3#code",
          "description": "node_operator_registry_impl"
        },
        {
          "id": "4AV1NCUm0HdrBhPkiH6mP",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xc7dd5c30DcA04f487c9ede0c5AC580c91587fc66#code",
          "description": "fx_state_root_tunnel"
        },
        {
          "id": "6iD50HYmBH3vZJ2DF18bVP",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x0833f5bD45803E05ef54E119a77E463cE6b1a963#code",
          "description": "fx_state_child_tunnel"
        },
        {
          "id": "7ByVtXWDxuVvuF7ecwzdhf",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xdEd6C522d803E35f65318a9a4d7333a22d582199#code",
          "description": "rate_provider"
        },
        {
          "id": "2EniLezXrR82eJ5G3tEgEg",
          "type": "websites_and_applications",
          "url": "https://polygon.lido.fi/",
          "description": "Main Web App"
        }
      ],
      "impacts": [
        {
          "id": "5zek04FAOPIfqWiSIQEqni",
          "title": "Any governance voting result manipulation",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2H3innM5NPTvkMOQTpZJpk",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6Q5bTeHglwLIy2q7CrJd47",
          "title": "Miner-extractable value (MEV)",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1yZxjuvX2wF4ZkEIGIgOnr",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2saNXMrPqnc3e2rsJS6Xfb",
          "title": "Insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "45BTZL02C3iot27riM04Br",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "SoGjHGUr4xcW2TkCmOmXC",
          "title": "Ability to execute system commands",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "7wuBgPEVUB3wQc5KkMyhFB",
          "title": "Extract Sensitive data/files from the server such as /etc/passwd",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "14iaoN53MpUcKOUEfmgo0j",
          "title": "Taking Down the application/website",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "GcO3z1OFiLRIWyQrbgdDA",
          "title": "Stealing User Cookies",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "1K87RpiJOLaeOTOCWdgB2Q",
          "title": "Signing transactions for other users",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "2EW0jKLGEt2Jr8pvEEwX7R",
          "title": "Redirection of user deposits and withdrawals",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "UWx7hwCtu1XwVyeKI0ger",
          "title": "Subdomain takeover resulting in financial loss (applicable for subdomains with addresses published)",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "X0gdwwtoPaVzKDW3hEgvg",
          "title": "Wallet interaction modification resulting in financial loss",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "3O9yOYZTKXCS2fGanawnE5",
          "title": "Tampering with transactions submitted to the user’s wallet",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "738rgEO3cJYiQo0viDDUeh",
          "title": "Direct theft of user funds",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "djCe2zj36L3N9vkyaQBFK",
          "title": "Submitting malicious transactions to an already-connected wallet",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "3hSDI8jFP8wKxBR9oyi0jW",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "7MoH5nlB5G3Obh6bWoChG4",
          "title": "Temporary freezing of funds for a minimum of 24 hours",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6bUohTP99es64KOTT64XI8",
          "title": "Spoofing content on the target application (Persistent)",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "1Z9p2b7FiAaY4sPRV7nDWt",
          "title": "Users Confidential information disclosure such as Email",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "4T90VYeKP2zSm6hCwVjhXO",
          "title": "Subdomain Takeover without financial loss (applicable for subdomains with no addresses published)",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "1CpCsPGU4GZ6Jiun70IhAe",
          "title": "Privilege escalation to access unauthorized functionalities",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "2rS19bTuMT5Ix3fLosSUAb",
          "title": "Smart contract unable to operate due to lack of funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "31Pn9JOtD83ZdeFAgaHhTG",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "8mexSQPRgSnPAHEglX2hl",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "HVxjVZgPeZIo9ZHyxludo",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5N1YYK93TTTFEI72i7n0aP",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5Kb0K1QPnrYarKHQIUx7pG",
          "title": "Changing details of other users without direct financial impact (CSRF)",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "5wx17tlBqqSmt9CW6Ys2kT",
          "title": "Third-Party API keys leakage that demonstrates loss of funds or modification on the website",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "5FGAnioCGUv4fmtNuOPMah",
          "title": "Redirecting users to malicious websites (Open Redirect)",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "2FNWrM34tuRIXpKBiomcJK",
          "title": "Smart contract fails to deliver promised returns, but doesn’t lose value",
          "type": "smart_contract",
          "severity": "low"
        },
        {
          "id": "LTWvmUA70plS8Zd3lLb7A",
          "title": "Broken Link Hijacking",
          "type": "websites_and_applications",
          "severity": "low"
        }
      ],
      "programOverview": "Lido on Polygon, developed in collaboration with Shard Labs, is a liquid staking solution for MATIC.\n\nMATIC holders can now seamlessly earn staking rewards on their tokens without the need for complex infrastructure or locked/illiquid tokens. Stake your MATIC with Lido to receive stMATIC tokens which can be traded, transferred and used across the growing Polygon DeFi space.\n\nFor more information about Lido, the parent project, please visit their main bug bounty program at [https://immunefi.com/bounty/lido/](https://immunefi.com/bounty/lido/).\n\nFor more information about Lido on Polygon, please visit [https://lido.fi/polygon](https://lido.fi/polygon).  \n\nThis bug bounty program is focused on their smart contracts, website and app and is focused on preventing:\n\n  - Any governance voting result manipulation\n  - Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\n  - Permanent freezing of funds\n  - Miner-extractable value (MEV)\n  - Insolvency\n  - Theft of unclaimed yield\n  - Ability to execute system commands\n  - Extract Sensitive data/files from the server such as /etc/passwd\n  - Stealing User Cookies\n  - Taking Down the application/website\n  - Signing transactions for other users\n  - Redirection of user deposits and withdrawals\n  - Subdomain takeover resulting in financial loss (applicable for subdomains with addresses published)\n  - Wallet interaction modification resulting in financial loss\n  - Direct theft of user funds \n  - Tampering with transactions submitted to the user’s wallet\n  - Submitting malicious transactions to an already-connected wallet\n\nVulnerability reported to any Lido project is considered as reported to each Lido Bug Bounty program. Reports of the same vulnerability to multiple Lido Bug Bounty programs will be considered as a single report, when reward is calculated.\nList of Lido programs:\n  - [https://immunefi.com/bounty/lido/](https://immunefi.com/bounty/lido/)\n[  - https://immunefi.com/bounty/lidoforsolana/\n](https://immunefi.com/bounty/lidoforsolana/)",
      "prioritizedVulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n__Critical__\n  - Any governance voting result manipulation\n  - Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\n  - Permanent freezing of funds\n  - Miner-extractable value (MEV)\n  - Insolvency\n  - Theft of unclaimed yield\n\n__High__\n  - Permanent freezing of unclaimed yield\n  - Temporary freezing of funds for a minimum period of 24 hours\n\n__Medium__\n  - Smart contract unable to operate due to lack of funds \n  - Block stuffing for profit\n  - Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)\n  - Theft of gas\n  - Unbounded gas consumption \n\n__Low__\n  - Smart contract fails to deliver promised returns, but doesn’t lose value\n\n__Websites and Applications__\n\n__Critical__\n  - Ability to execute system commands\n  - Extract Sensitive data/files from the server such as /etc/passwd\n  - Stealing User Cookies\n  - Signing transactions for other users\n  - Redirection of user deposits and withdrawals\n  - Subdomain takeover resulting in financial loss (applicable for subdomains with addresses published)\n  - Wallet interaction modification resulting in financial loss\n  - Direct theft of user funds \n  - Tampering with transactions submitted to the user’s wallet\n  - Submitting malicious transactions to an already-connected wallet\n\n__High__\n  - Spoofing content on the target application (Persistent)\n  - Users Confidential information disclosure such as Email\n  - Subdomain Takeover without financial loss (applicable for subdomains with no addresses published)\n  - Privilege escalation to access unauthorized functionalities\n\n__Medium__\n  - Changing details of other users without direct financial impact (CSRF)\n  - Third-Party API keys leakage that demonstrates loss of funds or modification on the website.\n  - Redirecting users to malicious websites (Open Redirect)\n  - Taking Down the application/website\n\n__Low__\n  - Framing sensitive pages leading to financial loss (ClickJacking)\n  - Any impact involving a publicly released CVE without a working PoC\n  - Broken Link Hijacking\n\nIn case of discrepancy between [Immunefi Vulnerability Severity Classification System V2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2/) and Lido on Polygon’s classification above, Lido on Polygon’s classification will be followed.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\n\nAll web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward.  All Smart Contract bug reports require a suggestion for a fix to be eligible for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nSmart Contracts Rewards Breakdowns\n  - Smart Contracts Critical:\n    - Loss of user funds:\n      - 1% of assets at risk, minimum 100 000 USD, maximum 2 000 000 USD\n    - Loss of non-user funds (e.g. treasury):\n      - 1% of assets at risk, minimum 50 000 USD , maximum 1 000 000 USD\n\n  - Smart Contracts High:\n    - 1% of assets at risk when attack persists for 1 month\n      - minimum 20 000 USD, maximum of 400 000 USD\n\n  - Smart Contracts Medium:\n    - 1% of assets at risk when attack persists for 1 month\n      - minimum 5 000 USD, maximum 100 000 USD\n\n  - Smart Contracts Low:\n    - 2 000 USD\n\nWeb/App Rewards Breakdowns\n  - Web/App Critical:\n    - 40 000 USD\n\n  - Web/App High:\n    - 7 500 USD\n    - If attack can modify the transaction users approve so it sends funds to the wrong address: then this reward increases to a total of 40 000 USD\n\n  - Web/App Medium:\n    - 3 250 USD\n\n  - Web/App Low:\n    - 1 000 USD\n\nAll vulnerabilities marked in the [https://github.com/lidofinance/polygon-contracts/tree/main/audits](https://github.com/lidofinance/polygon-contracts/tree/main/audits) are not eligible for a reward.\n\n__Payouts are handled by the Lido on Polygon team directly and are denominated in USD. Payouts can be done in ETH, DAI, RAI or LDO, at the decision of the bug bounty hunter.__",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\n__Websites and Apps__\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Clickjacking\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n  - Vulnerabilities primarily caused by browser/plugin defects\n  - Any vulnerability exploit requiring CSP bypass resulting from a browser bug\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any distributed denial of service attacks or similar to them\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "All smart contracts of Lido on Polygon can be found at [https://github.com/lidofinance/polygon-contracts/tree/main/contracts](https://github.com/lidofinance/polygon-contracts/tree/main/contracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. In the Github link in the Assets in Scope table, only Exact Match Verified smart contracts are considered as in-scope of the bug bounty program. \n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Staking"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $100,000 to $2,000,000"
          },
          {
            "level": "High",
            "payout": "USD $20,000 to $400,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000 to $100,000"
          },
          {
            "level": "Low",
            "payout": "USD $2,000"
          }
        ],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "USD $40,000"
          },
          {
            "level": "High",
            "payout": "USD $7,500 to $40,000"
          },
          {
            "level": "Medium",
            "payout": "USD $3,250"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ]
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Lido on Polygon, developed in collaboration with Shard Labs, is a liquid staking solution for MATIC.\"), mdx(\"p\", null, \"MATIC holders can now seamlessly earn staking rewards on their tokens without the need for complex infrastructure or locked/illiquid tokens. Stake your MATIC with Lido to receive stMATIC tokens which can be traded, transferred and used across the growing Polygon DeFi space.\"), mdx(\"p\", null, \"For more information about Lido, the parent project, please visit their main bug bounty program at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/bounty/lido/\"\n  }, \"https://immunefi.com/bounty/lido/\"), \".\"), mdx(\"p\", null, \"For more information about Lido on Polygon, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://lido.fi/polygon\"\n  }, \"https://lido.fi/polygon\"), \".  \"), mdx(\"p\", null, \"This bug bounty program is focused on their smart contracts, website and app and is focused on preventing:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any governance voting result manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Miner-extractable value (MEV)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Insolvency\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ability to execute system commands\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Extract Sensitive data/files from the server such as /etc/passwd\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Stealing User Cookies\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Taking Down the application/website\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Signing transactions for other users\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Redirection of user deposits and withdrawals\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Subdomain takeover resulting in financial loss (applicable for subdomains with addresses published)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wallet interaction modification resulting in financial loss\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct theft of user funds \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tampering with transactions submitted to the user\\u2019s wallet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Submitting malicious transactions to an already-connected wallet\")), mdx(\"p\", null, \"Vulnerability reported to any Lido project is considered as reported to each Lido Bug Bounty program. Reports of the same vulnerability to multiple Lido Bug Bounty programs will be considered as a single report, when reward is calculated.\\nList of Lido programs:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://immunefi.com/bounty/lido/\"\n  }, \"https://immunefi.com/bounty/lido/\"), mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://immunefi.com/bounty/lidoforsolana/\"\n  }, \"  - https://immunefi.com/bounty/lidoforsolana/\\n\"))));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Lido on Polygon, developed in collaboration with Shard Labs, is a liquid staking solution for MATIC.</p><p>MATIC holders can now seamlessly earn staking rewards on their tokens without the need for complex infrastructure or locked/illiquid tokens. Stake your MATIC with Lido to receive stMATIC tokens which can be traded, transferred and used across the growing Polygon DeFi space.</p><p>For more information about Lido, the parent project, please visit their main bug bounty program at <a href=\"https://immunefi.com/bounty/lido/\">https://immunefi.com/bounty/lido/</a>.</p><p>For more information about Lido on Polygon, please visit <a href=\"https://lido.fi/polygon\">https://lido.fi/polygon</a>.  </p><p>This bug bounty program is focused on their smart contracts, website and app and is focused on preventing:</p><ul><li>Any governance voting result manipulation</li><li>Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield</li><li>Permanent freezing of funds</li><li>Miner-extractable value (MEV)</li><li>Insolvency</li><li>Theft of unclaimed yield</li><li>Ability to execute system commands</li><li>Extract Sensitive data/files from the server such as /etc/passwd</li><li>Stealing User Cookies</li><li>Taking Down the application/website</li><li>Signing transactions for other users</li><li>Redirection of user deposits and withdrawals</li><li>Subdomain takeover resulting in financial loss (applicable for subdomains with addresses published)</li><li>Wallet interaction modification resulting in financial loss</li><li>Direct theft of user funds </li><li>Tampering with transactions submitted to the user’s wallet</li><li>Submitting malicious transactions to an already-connected wallet</li></ul><p>Vulnerability reported to any Lido project is considered as reported to each Lido Bug Bounty program. Reports of the same vulnerability to multiple Lido Bug Bounty programs will be considered as a single report, when reward is calculated.\nList of Lido programs:</p><ul><li><a href=\"https://immunefi.com/bounty/lido/\">https://immunefi.com/bounty/lido/</a><a href=\"https://immunefi.com/bounty/lidoforsolana/\">  - https://immunefi.com/bounty/lidoforsolana/\n</a></li></ul>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Impacts in Scope\")), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Critical\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any governance voting result manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Miner-extractable value (MEV)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Insolvency\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of unclaimed yield\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"High\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Temporary freezing of funds for a minimum period of 24 hours\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Medium\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract unable to operate due to lack of funds \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Block stuffing for profit\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of gas\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unbounded gas consumption \")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Low\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract fails to deliver promised returns, but doesn\\u2019t lose value\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Applications\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Critical\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ability to execute system commands\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Extract Sensitive data/files from the server such as /etc/passwd\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Stealing User Cookies\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Signing transactions for other users\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Redirection of user deposits and withdrawals\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Subdomain takeover resulting in financial loss (applicable for subdomains with addresses published)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wallet interaction modification resulting in financial loss\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct theft of user funds \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tampering with transactions submitted to the user\\u2019s wallet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Submitting malicious transactions to an already-connected wallet\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"High\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Spoofing content on the target application (Persistent)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Users Confidential information disclosure such as Email\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Subdomain Takeover without financial loss (applicable for subdomains with no addresses published)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Privilege escalation to access unauthorized functionalities\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Medium\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Changing details of other users without direct financial impact (CSRF)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Third-Party API keys leakage that demonstrates loss of funds or modification on the website.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Redirecting users to malicious websites (Open Redirect)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Taking Down the application/website\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Low\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Framing sensitive pages leading to financial loss (ClickJacking)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any impact involving a publicly released CVE without a working PoC\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Broken Link Hijacking\")), mdx(\"p\", null, \"In case of discrepancy between \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2/\"\n  }, \"Immunefi Vulnerability Severity Classification System V2\"), \" and Lido on Polygon\\u2019s classification above, Lido on Polygon\\u2019s classification will be followed.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p><strong>Impacts in Scope</strong></p><p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p><p><strong>Smart Contracts</strong></p><p><strong>Critical</strong></p><ul><li>Any governance voting result manipulation</li><li>Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield</li><li>Permanent freezing of funds</li><li>Miner-extractable value (MEV)</li><li>Insolvency</li><li>Theft of unclaimed yield</li></ul><p><strong>High</strong></p><ul><li>Permanent freezing of unclaimed yield</li><li>Temporary freezing of funds for a minimum period of 24 hours</li></ul><p><strong>Medium</strong></p><ul><li>Smart contract unable to operate due to lack of funds </li><li>Block stuffing for profit</li><li>Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)</li><li>Theft of gas</li><li>Unbounded gas consumption </li></ul><p><strong>Low</strong></p><ul><li>Smart contract fails to deliver promised returns, but doesn’t lose value</li></ul><p><strong>Websites and Applications</strong></p><p><strong>Critical</strong></p><ul><li>Ability to execute system commands</li><li>Extract Sensitive data/files from the server such as /etc/passwd</li><li>Stealing User Cookies</li><li>Signing transactions for other users</li><li>Redirection of user deposits and withdrawals</li><li>Subdomain takeover resulting in financial loss (applicable for subdomains with addresses published)</li><li>Wallet interaction modification resulting in financial loss</li><li>Direct theft of user funds </li><li>Tampering with transactions submitted to the user’s wallet</li><li>Submitting malicious transactions to an already-connected wallet</li></ul><p><strong>High</strong></p><ul><li>Spoofing content on the target application (Persistent)</li><li>Users Confidential information disclosure such as Email</li><li>Subdomain Takeover without financial loss (applicable for subdomains with no addresses published)</li><li>Privilege escalation to access unauthorized functionalities</li></ul><p><strong>Medium</strong></p><ul><li>Changing details of other users without direct financial impact (CSRF)</li><li>Third-Party API keys leakage that demonstrates loss of funds or modification on the website.</li><li>Redirecting users to malicious websites (Open Redirect)</li><li>Taking Down the application/website</li></ul><p><strong>Low</strong></p><ul><li>Framing sensitive pages leading to financial loss (ClickJacking)</li><li>Any impact involving a publicly released CVE without a working PoC</li><li>Broken Link Hijacking</li></ul><p>In case of discrepancy between <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2/\">Immunefi Vulnerability Severity Classification System V2</a> and Lido on Polygon’s classification above, Lido on Polygon’s classification will be followed.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\"), mdx(\"p\", null, \"All web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward.  All Smart Contract bug reports require a suggestion for a fix to be eligible for a reward. Explanations and statements are not accepted as PoC and code is required.\"), mdx(\"p\", null, \"Smart Contracts Rewards Breakdowns\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Smart Contracts Critical:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of user funds:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"1% of assets at risk, minimum 100 000 USD, maximum 2 000 000 USD\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of non-user funds (e.g. treasury):\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"1% of assets at risk, minimum 50 000 USD , maximum 1 000 000 USD\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Smart Contracts High:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"1% of assets at risk when attack persists for 1 month\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"minimum 20 000 USD, maximum of 400 000 USD\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Smart Contracts Medium:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"1% of assets at risk when attack persists for 1 month\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"minimum 5 000 USD, maximum 100 000 USD\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Smart Contracts Low:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"2 000 USD\")))), mdx(\"p\", null, \"Web/App Rewards Breakdowns\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Web/App Critical:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"40 000 USD\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Web/App High:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"7 500 USD\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If attack can modify the transaction users approve so it sends funds to the wrong address: then this reward increases to a total of 40 000 USD\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Web/App Medium:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"3 250 USD\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Web/App Low:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"1 000 USD\")))), mdx(\"p\", null, \"All vulnerabilities marked in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/lidofinance/polygon-contracts/tree/main/audits\"\n  }, \"https://github.com/lidofinance/polygon-contracts/tree/main/audits\"), \" are not eligible for a reward.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Payouts are handled by the Lido on Polygon team directly and are denominated in USD. Payouts can be done in ETH, DAI, RAI or LDO, at the decision of the bug bounty hunter.\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.</p><p>All web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward.  All Smart Contract bug reports require a suggestion for a fix to be eligible for a reward. Explanations and statements are not accepted as PoC and code is required.</p><p>Smart Contracts Rewards Breakdowns</p><ul><li><p>Smart Contracts Critical:</p><ul><li>Loss of user funds:<ul><li>1% of assets at risk, minimum 100 000 USD, maximum 2 000 000 USD</li></ul></li><li>Loss of non-user funds (e.g. treasury):<ul><li>1% of assets at risk, minimum 50 000 USD , maximum 1 000 000 USD</li></ul></li></ul></li><li><p>Smart Contracts High:</p><ul><li>1% of assets at risk when attack persists for 1 month<ul><li>minimum 20 000 USD, maximum of 400 000 USD</li></ul></li></ul></li><li><p>Smart Contracts Medium:</p><ul><li>1% of assets at risk when attack persists for 1 month<ul><li>minimum 5 000 USD, maximum 100 000 USD</li></ul></li></ul></li><li><p>Smart Contracts Low:</p><ul><li>2 000 USD</li></ul></li></ul><p>Web/App Rewards Breakdowns</p><ul><li><p>Web/App Critical:</p><ul><li>40 000 USD</li></ul></li><li><p>Web/App High:</p><ul><li>7 500 USD</li><li>If attack can modify the transaction users approve so it sends funds to the wrong address: then this reward increases to a total of 40 000 USD</li></ul></li><li><p>Web/App Medium:</p><ul><li>3 250 USD</li></ul></li><li><p>Web/App Low:</p><ul><li>1 000 USD</li></ul></li></ul><p>All vulnerabilities marked in the <a href=\"https://github.com/lidofinance/polygon-contracts/tree/main/audits\">https://github.com/lidofinance/polygon-contracts/tree/main/audits</a> are not eligible for a reward.</p><p><strong>Payouts are handled by the Lido on Polygon team directly and are denominated in USD. Payouts can be done in ETH, DAI, RAI or LDO, at the decision of the bug bounty hunter.</strong></p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theoretical vulnerabilities without any proof or demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Content spoofing / Text injection issues\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Clickjacking\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Self-XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Captcha bypass using OCR\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with no security impact (logout CSRF, change language, etc.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as \\u201Chttponly\\u201D)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Server-side information disclosure such as IPs, server names, and most stack traces\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities used to enumerate or confirm the existence of users or tenants\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities requiring unlikely user actions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of SSL/TLS best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DDoS vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring privileged access from within the organization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Feature requests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities primarily caused by browser/plugin defects\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any vulnerability exploit requiring CSP bypass resulting from a browser bug\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any distributed denial of service attacks or similar to them\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p><strong>Websites and Apps</strong></p><ul><li>Theoretical vulnerabilities without any proof or demonstration</li><li>Content spoofing / Text injection issues</li><li>Clickjacking</li><li>Self-XSS</li><li>Captcha bypass using OCR</li><li>CSRF with no security impact (logout CSRF, change language, etc.)</li><li>Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)</li><li>Server-side information disclosure such as IPs, server names, and most stack traces</li><li>Vulnerabilities used to enumerate or confirm the existence of users or tenants</li><li>Vulnerabilities requiring unlikely user actions</li><li>URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)</li><li>Lack of SSL/TLS best practices</li><li>DDoS vulnerabilities</li><li>Attacks requiring privileged access from within the organization</li><li>Feature requests</li><li>Best practices</li><li>Vulnerabilities primarily caused by browser/plugin defects</li><li>Any vulnerability exploit requiring CSP bypass resulting from a browser bug</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any distributed denial of service attacks or similar to them</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of Lido on Polygon can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/lidofinance/polygon-contracts/tree/main/contracts\"\n  }, \"https://github.com/lidofinance/polygon-contracts/tree/main/contracts\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. In the Github link in the Assets in Scope table, only Exact Match Verified smart contracts are considered as in-scope of the bug bounty program. \"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of Lido on Polygon can be found at <a href=\"https://github.com/lidofinance/polygon-contracts/tree/main/contracts\">https://github.com/lidofinance/polygon-contracts/tree/main/contracts</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. In the Github link in the Assets in Scope table, only Exact Match Verified smart contracts are considered as in-scope of the bug bounty program. </p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

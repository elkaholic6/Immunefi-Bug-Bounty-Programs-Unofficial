{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "gerowallet",
      "slug": "gerowallet",
      "project": "GeroWallet",
      "maxBounty": 8000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3pwhSRguB1VotAmj7ej7bO/278feaf90251df480880e49c60725123/GeroWallet.jpeg",
      "launchDate": "2021-08-06T11:00-05:00",
      "updatedDate": "2023-02-14T22:00:40.209Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "websites_and_applications",
          "level": "critical",
          "payout": "USD $8,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "high",
          "payout": "USD $4,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "14nFtLgmfmAUU7EURS2u8I",
          "type": "websites_and_applications",
          "url": "https://gerowallet.io",
          "description": null
        },
        {
          "id": "4hXmZxbqj2qpH3vrMa1PC0",
          "type": "websites_and_applications",
          "url": "https://chrome.google.com/webstore/detail/gerowallet/bgpipimickeadkjlklgciifhnalhdjhe/",
          "description": "Extension"
        },
        {
          "id": "7DMrLUvC4zoyHZqaNfMxip",
          "type": "websites_and_applications",
          "url": "https://play.google.com/store/apps/details?id=io.gerowallet.dev",
          "description": "Android Application GeroWallet  - Beta"
        }
      ],
      "impacts": [
        {
          "id": "2yXQoYQNtmO7Imp3ZyYQIF",
          "title": "Execute arbitrary system commands which can then be used for attacks against user’s funds.",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "1pd22R6YJnsTDhcw0TLRON",
          "title": "Retrieve sensitive data/files from a running server which can then be used for attacks against user’s funds.",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "7jgFajrPaLjJpN9ICsNo7s",
          "title": "Direct theft of user funds",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "1U36dkhMPOvH2wS7nmT5a",
          "title": "Taking down the backend system (DDOS attacks not in scope)",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "1vZODLV6gbXS2AxXE1Szo7",
          "title": "Taking state-modifying authenticated actions (with or without blockchain state interaction) on behalf of other users without any interaction by that user, such as, changing registration information, commenting, voting, making trades, withdrawals, etc.",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "64hfwoe5E2xtHF5vVzv4vj",
          "title": "Malicious interactions with an already-connected wallet such as modifying transaction arguments or parameters, substituting contract addresses, submitting malicious transactions",
          "type": "websites_and_applications",
          "severity": "high"
        }
      ],
      "programOverview": "GeroWallet is an all-in-one DeFi app designed to be a powerful instrument for experienced and new users alike. GeroWallet delivers a redefined UX by focusing on a user-centric design. Our product features a built-in multi-functional toolkit that boasts  swapping, liquidity lock, staking, dAPP connector and fiat on/off ramp functionality.\n\nFor more information about GeroWallet, please visit [https://gerowallet.io/](https://gerowallet.io/).   \n\nThe bug bounty program covers its Website, Mobile Application and Chrome Extension and is focused on preventing the following impacts:\n\n  - Thefts and freezing of principal of any amount\n  - Theft of any funds / tokens / nfts \n  - Leak of seed phrase\n  - Manipulating the user to send funds within the wallet\n  - Man in the middle attacks that lead to financial loss\n  - XSS/CSRF with financial loss as a result\n  - Loss of any fiat amount when user will be using on/off ramp services",
      "prioritizedVulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types. However, they are only accepted if they result in an accepted impact.\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking \n  - Misleading Unicode text (e.g. using right to left override characters)",
      "rewardsBody": "Rewards are distributed for critical vulnerabilities only, defined as vulnerabilities that lead __directly__ to a financial loss for users. \n\nAll bug reports must come with a PoC demonstrating direct financial impact in order to be accepted.\n\nBug reports that do not contain a vulnerability that leads to a direct loss of funds are not accepted in this bug bounty program. Additionally, any vulnerability that involves social engineering is not in-scope. \n\nPayouts are handled by the __GeroWallet__ team directly and are denominated in USD. Payouts are done in __$GERO__.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - Attacks requiring social engineering\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)",
      "assetsBodyV2": "Backend Services hosted in AWS are out of scope unless there is a vulnerability that can lead to loss of client’s funds or something equivalent.\n\nThe GeroWallet Chrome Extension is in scope. However, anything else around the Google domain is not in scope. The link is only provided as a means to access the extension. \n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": null,
        "projectType": null,
        "ecosystem": [
          "Cardano"
        ],
        "programType": [
          "Websites and Applications"
        ],
        "language": null
      },
      "legacy": {
        "technologies": [
          "Websites and Applications"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "USD $8,000"
          },
          {
            "level": "High",
            "payout": "USD $4,000"
          }
        ]
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"GeroWallet is an all-in-one DeFi app designed to be a powerful instrument for experienced and new users alike. GeroWallet delivers a redefined UX by focusing on a user-centric design. Our product features a built-in multi-functional toolkit that boasts  swapping, liquidity lock, staking, dAPP connector and fiat on/off ramp functionality.\"), mdx(\"p\", null, \"For more information about GeroWallet, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://gerowallet.io/\"\n  }, \"https://gerowallet.io/\"), \".   \"), mdx(\"p\", null, \"The bug bounty program covers its Website, Mobile Application and Chrome Extension and is focused on preventing the following impacts:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Thefts and freezing of principal of any amount\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of any funds / tokens / nfts \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Leak of seed phrase\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Manipulating the user to send funds within the wallet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Man in the middle attacks that lead to financial loss\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"XSS/CSRF with financial loss as a result\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of any fiat amount when user will be using on/off ramp services\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>GeroWallet is an all-in-one DeFi app designed to be a powerful instrument for experienced and new users alike. GeroWallet delivers a redefined UX by focusing on a user-centric design. Our product features a built-in multi-functional toolkit that boasts  swapping, liquidity lock, staking, dAPP connector and fiat on/off ramp functionality.</p><p>For more information about GeroWallet, please visit <a href=\"https://gerowallet.io/\">https://gerowallet.io/</a>.   </p><p>The bug bounty program covers its Website, Mobile Application and Chrome Extension and is focused on preventing the following impacts:</p><ul><li>Thefts and freezing of principal of any amount</li><li>Theft of any funds / tokens / nfts </li><li>Leak of seed phrase</li><li>Manipulating the user to send funds within the wallet</li><li>Man in the middle attacks that lead to financial loss</li><li>XSS/CSRF with financial loss as a result</li><li>Loss of any fiat amount when user will be using on/off ramp services</li></ul>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are especially interested in receiving and rewarding vulnerabilities of the following types. However, they are only accepted if they result in an accepted impact.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Remote Code Execution\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusting trust/dependency vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vertical Privilege Escalation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"XML External Entities Injection\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SQL Injection\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFI/RFI\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Horizontal Privilege Escalation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Stored XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reflective XSS with impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct object reference\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Internal SSRF\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Session fixation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Insecure Deserialization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DOM XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SSL misconfigurations\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SSL/TLS issues (weak crypto, improper setup)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"URL redirect\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Clickjacking \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Misleading Unicode text (e.g. using right to left override characters)\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>We are especially interested in receiving and rewarding vulnerabilities of the following types. However, they are only accepted if they result in an accepted impact.</p><p><strong>Websites and Apps</strong></p><ul><li>Remote Code Execution</li><li>Trusting trust/dependency vulnerabilities</li><li>Vertical Privilege Escalation</li><li>XML External Entities Injection</li><li>SQL Injection</li><li>LFI/RFI</li><li>Horizontal Privilege Escalation</li><li>Stored XSS</li><li>Reflective XSS with impact</li><li>CSRF with impact</li><li>Direct object reference</li><li>Internal SSRF</li><li>Session fixation</li><li>Insecure Deserialization</li><li>DOM XSS</li><li>SSL misconfigurations</li><li>SSL/TLS issues (weak crypto, improper setup)</li><li>URL redirect</li><li>Clickjacking </li><li>Misleading Unicode text (e.g. using right to left override characters)</li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed for critical vulnerabilities only, defined as vulnerabilities that lead \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"directly\"), \" to a financial loss for users. \"), mdx(\"p\", null, \"All bug reports must come with a PoC demonstrating direct financial impact in order to be accepted.\"), mdx(\"p\", null, \"Bug reports that do not contain a vulnerability that leads to a direct loss of funds are not accepted in this bug bounty program. Additionally, any vulnerability that involves social engineering is not in-scope. \"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"GeroWallet\"), \" team directly and are denominated in USD. Payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"$GERO\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed for critical vulnerabilities only, defined as vulnerabilities that lead <strong>directly</strong> to a financial loss for users. </p><p>All bug reports must come with a PoC demonstrating direct financial impact in order to be accepted.</p><p>Bug reports that do not contain a vulnerability that leads to a direct loss of funds are not accepted in this bug bounty program. Additionally, any vulnerability that involves social engineering is not in-scope. </p><p>Payouts are handled by the <strong>GeroWallet</strong> team directly and are denominated in USD. Payouts are done in <strong>$GERO</strong>.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring social engineering\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theoretical vulnerabilities without any proof or demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Content spoofing / Text injection issues\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Self-XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Captcha bypass using OCR\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with no security impact (logout CSRF, change language, etc.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as \\u201Chttponly\\u201D)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Server-side information disclosure such as IPs, server names, and most stack traces\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities used to enumerate or confirm the existence of users or tenants\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities requiring unlikely user actions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of SSL/TLS best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DDoS vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring privileged access from within the organization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Feature requests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practices\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li><li>Attacks requiring social engineering</li></ul><p><strong>Websites and Apps</strong></p><ul><li>Theoretical vulnerabilities without any proof or demonstration</li><li>Content spoofing / Text injection issues</li><li>Self-XSS</li><li>Captcha bypass using OCR</li><li>CSRF with no security impact (logout CSRF, change language, etc.)</li><li>Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)</li><li>Server-side information disclosure such as IPs, server names, and most stack traces</li><li>Vulnerabilities used to enumerate or confirm the existence of users or tenants</li><li>Vulnerabilities requiring unlikely user actions</li><li>URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)</li><li>Lack of SSL/TLS best practices</li><li>DDoS vulnerabilities</li><li>Attacks requiring privileged access from within the organization</li><li>Feature requests</li><li>Best practices</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Backend Services hosted in AWS are out of scope unless there is a vulnerability that can lead to loss of client\\u2019s funds or something equivalent.\"), mdx(\"p\", null, \"The GeroWallet Chrome Extension is in scope. However, anything else around the Google domain is not in scope. The link is only provided as a means to access the extension. \"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Backend Services hosted in AWS are out of scope unless there is a vulnerability that can lead to loss of client’s funds or something equivalent.</p><p>The GeroWallet Chrome Extension is in scope. However, anything else around the Google domain is not in scope. The link is only provided as a means to access the extension. </p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

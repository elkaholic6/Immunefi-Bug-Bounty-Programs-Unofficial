{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "sovryn",
      "slug": "sovryn",
      "project": "Sovryn",
      "maxBounty": 1000000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1WxmZjVBKwVs8B9tTr8DGp/78025280490aea0dbcddf7bebed36c18/Sovryn-logo.png",
      "launchDate": "2021-03-03T00:00-07:00",
      "updatedDate": "2023-05-23T17:07:31.551Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to USD $1,000,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $22,140",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $8,800",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $2,200",
          "pocRequired": false
        },
        {
          "assetType": "websites_and_applications",
          "level": "critical",
          "payout": "USD $22,140",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "high",
          "payout": "USD $8,800",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "medium",
          "payout": "USD $2,200",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "2s7SxPGyin1Kr1rwynfoiQ",
          "type": "smart_contract",
          "url": "https://github.com/DistributedCollective/Sovryn-smart-contracts/tree/master",
          "description": null
        },
        {
          "id": "3GKgOguUsvt592k9iPPcDo",
          "type": "smart_contract",
          "url": "https://github.com/DistributedCollective/Bridge-SC/tree/master",
          "description": "Blockchain/DLT - Bridge/FastBtc"
        },
        {
          "id": "6HU3wEZEkDdsMpEGDrEHkq",
          "type": "smart_contract",
          "url": "https://github.com/DistributedCollective/bidirectional-fastbtc",
          "description": "Blockchain/DLT - BiDirectional/FastBtc"
        },
        {
          "id": "3Uo5ZGIaELTPDXVywWH2HT",
          "type": "smart_contract",
          "url": "https://github.com/DistributedCollective/fastBTC-confirmation-node",
          "description": "Blockchain/DLT - FastBtc/ConfirmationNode"
        },
        {
          "id": "T9TmYpF1S4Yx8uzYOTX0U",
          "type": "smart_contract",
          "url": "https://github.com/DistributedCollective/FastBTC",
          "description": "Blockchain/DLT - Fast/BTC"
        },
        {
          "id": "6HYMbbnjNlEGiQcKJ0iiKf",
          "type": "websites_and_applications",
          "url": "https://www.sovryn.app/",
          "description": "Web/App"
        },
        {
          "id": "2CcYikgt3U4wBQ6HwQw0IN",
          "type": "websites_and_applications",
          "url": "https://live.sovryn.app",
          "description": "Web/App"
        }
      ],
      "impacts": [
        {
          "id": "37WAU8qFIJsLpBhOeOxGyp",
          "title": "Critical Blockchain/DLT impact leading to direct economic damage",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "4jKUf1ZrUaTQ2Bm99QZHEW",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6NnXRynWLOgGDXlUQk7yjK",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4dXkvgzPxINzC4pWnwRnw0",
          "title": "Protocol Insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5Sc10Ukyb16pyBDSErf3lK",
          "title": "Ability to execute system commands resulting in a financial loss",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "tJxHfu6fawUE2Zdl3tqZ1",
          "title": "Extract Sensitive data/files from the server such as /etc/passwd resulting in a financial loss",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "5HCVgrLMrCxVJJp6X4aQ2z",
          "title": "Signing transactions for other users",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "7zlEzkXaEh5X3Sf57RgbYf",
          "title": "Redirection of user deposits and withdrawals",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "7043UKFP6YrJo2PoKpSguj",
          "title": "Subdomain takeover resulting in financial loss (applicable for subdomains with addresses published)",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "4akRUplxQhrMLdoENcex1b",
          "title": "Wallet interaction modification resulting in financial loss",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "4vNRrWTCHeMznKBx8NAnfB",
          "title": "Direct theft of user funds",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "6T8mnmReaY0xPvqRXudazQ",
          "title": "Tampering with transactions submitted to the user’s wallet",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "7GD2ANqoGzBWRxfp6lKXto",
          "title": "Submitting malicious transactions to an already-connected wallet",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "lOStLD0HCe4FFyM8LpTGl",
          "title": "High Blockchain/DLT impact leading to direct economic damage",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "3GW0T1Hiinz7WjK1hEUEA",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "01MftOZ8f7yzQUq946TYow",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "1BHdxzZJTndSj1Up93JxJP",
          "title": "Temporary freezing of funds",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "5a6bn37NWkFkYVFMarIlPn",
          "title": "Privilege escalation to access unauthorized functionalities",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "1so76smFRhQF94rR1aRQu2",
          "title": "Taking Down the application/website",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "2lwPKK2i1MX3V6sgCy8OS4",
          "title": "Any governance voting result manipulation",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "7gtXdMuSyuMmRqoPPhmHyw",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5Uyyf6TQ9Rvm309hyl9xc8",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "4XhQ7G2Dizee5xlM4PpxYN",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "1El1v2pGNTggoLt0qQ5n3S",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "pnoRm3FM3hhC1P2aGLcEa",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "UHHfM2bVaTanRQAgYjulm",
          "title": "Changing details of other users without direct financial impact (CSRF)",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "7BgDAfttuf3WhDBYIgjaWw",
          "title": "Third-Party API keys leakage that demonstrates loss of funds or modification on the website",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "5jlz1uRdvx2GCYDq8QNEjX",
          "title": "Redirecting users to malicious websites (Open Redirect)",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "5MhcusjZ2LR5oNweD92TXh",
          "title": "Stealing User Cookies",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "60JA1mvXOaT5kd1ErVuYz8",
          "title": "Subdomain Takeover without financial loss (applicable for subdomains with no addresses published)",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "39kxzhDZfWDrMi5DkwIqX",
          "title": "Extract Sensitive data/files from the server with an impact on the system",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "1i53WaGPzSDX0d20UzRdIE",
          "title": "Users Confidential information disclosure such as Email",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "15VAbwCEqLnBs03pfVanu5",
          "title": "Spoofing content on the target application (Persistent)",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "50aH59VD1JrYyr68CMvD08",
          "title": "Contract fails to deliver promised returns, but doesn't lose value",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "Sovryn is an on-chain decentralized trading and lending protocol deployed on RSK, a side chain of the Bitcoin blockchain-powered by merge-mining, and is governed by the community. The Sovryn protocol is controlled by its community and stakeholders. There is no single company, organization, or individual that represents or controls the Sovryn protocol. While the Sovryn community is built on the principles of transparency, the Sovryn protocol's decentralized structure means that there is no single party that can be relied upon to provide you with accurate information. \n\nThe SOV token is used to tokenize the rights, rewards, and risks associated with participating in Sovryn Bitocracy. It is used to represent voting power and to wrap the rewards and risks of Sovryn's future into a digital representation. SOV can be used by the Sovryn protocol whenever there is a need to balance risks and rewards. Changes to the protocol introduce risks, but if they are successful, can grow the use of the protocol and the fee revenue it generates. SOV can be staked to cover user losses and thus insure that they do not occur. \n\nThe Sovryn bug bounty program was initially submitted as [Sovryn Improvement Proposal 8](https://github.com/DistributedCollective/SIPS/blob/main/SIP-0008.md) and was [approved on February 26 with 100% consensus](https://twitter.com/SovrynBTC/status/1365431235217096704?s=20). It is focused around its smart contracts and the prevention of loss of user funds. \nFor more information about Sovryn, please visit [https://www.sovryn.app/](https://www.sovryn.app/). \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Any governance voting result manipulation\n  - Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\n  - Permanent freezing of funds\n  - Theft of unclaimed yield\n  - Taking Down the application/website\n  - Redirection of user deposits and withdrawals\n  - Subdomain takeover resulting in financial loss",
      "prioritizedVulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Blockchain/DLT:__ \n\n  - Anything that leads to direct economic damage \n\n__Smart Contracts__\n\n  - Any governance voting result manipulation\n  - Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\n  - Permanent freezing of funds\n  - Miner-extractable value (MEV)\n  - Protocol Insolvency\n  - Theft of unclaimed yield\n  - Permanent freezing of unclaimed yield\n  - Temporary freezing of funds for at least one hour \n  - Smart contract unable to operate due to lack of token funds \n  - Block stuffing for profit\n  - Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)\n  - Theft of gas\n  - Unbounded gas consumption \n  - Smart contract fails to deliver promised returns, but doesn’t lose value\n\n__Web/App__\n\n  - Ability to execute system commands\n  - Extract Sensitive data/files from the server such as /etc/passwd\n  - Stealing User Cookies\n  - Taking Down the application/website\n  - Bypassing Authentication\n  - Signing transactions for other users\n  - Redirection of user deposits and withdrawals\n  - Subdomain takeover resulting in financial loss (applicable for subdomains with addresses published)\n  - Wallet interaction modification resulting in financial loss\n  - Direct theft of user funds \n  - Tampering with transactions submitted to the user’s wallet\n  - Submitting malicious transactions to an already-connected wallet\n  - Spoofing content on the target application (Persistent)\n  - Users Confidential information disclosure such as Email\n  - Subdomain Takeover without financial loss (applicable for subdomains with no addresses published)\n  - Privilege escalation to access unauthorized functionalities\n  - Changing details of other users without direct financial impact (CSRF)\n  - Third-Party API keys leakage that demonstrates loss of funds or modification on the website.\n  - Redirecting users to malicious websites (Open Redirect)",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\n\nAll web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. In addition, Critical and High severity reports must come with a suggestion for a fix to be considered for a reward. \n\nCritical and High severity Solidity Contracts bug reports  must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code or pseudo code is required. In addition, Critical and High severity reports must come with a suggestion for a fix to be considered for a reward.\n\nRewards for critical smart contract and blockchain/DLT vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of __USD 50 000__ for Critical bug reports. \n\nFor Blockchain/DLT infrastructure, only vulnerabilities that result in direct economic damage to yield will be considered as __High__, and only vulnerabilities that result in direct economic damage to principal funds will be considered as __Critical__.\n\nPayouts are handled by the __Sovryn__ team directly and are denominated in USD. 50% of the payouts are done in __BTC__, and the other 50% is paid out in __SOV__ according to a 24 month vesting schedule (with monthly vesting).\n\n| __Blockchain/DLT__     | __Payout__     |\n| ---------- | ---------- |\n| __Critical__       | Up to USD $1,000,000       |\n| __High__       | USD $22,140       |\n",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n  - [https://github.com/DistributedCollective/Sovryn-smart-contracts/tree/master/contracts/governance](https://github.com/DistributedCollective/Sovryn-smart-contracts/tree/master/contracts/governance) is an exception and considered out of scope for this program\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n  - Vulnerabilities primarily caused by browser/plugin defects\n  - Any vulnerability exploit requiring CSP bypass resulting from a browser bug \n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "Only the branches in the assets in scope table are considered as in-scope of the bug bounty program, but for the asset exceptions below in the Out of Scope & Rules section. All other branches, including the default branch are considered as out-of-scope. \n\nAll smart contracts of Sovryn can be found at [https://github.com/DistributedCollective](https://github.com/DistributedCollective). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n",
      "impactsBody": null,
      "immunefiStandard": null,
      "tags": {
        "productType": [
          "Lending",
          "Staking"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "RSK"
        ],
        "programType": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $1,000,000"
          },
          {
            "level": "High",
            "payout": "USD $22,140"
          },
          {
            "level": "Medium",
            "payout": "USD $8,800"
          },
          {
            "level": "Low",
            "payout": "USD $2,200"
          }
        ],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "USD $22,140"
          },
          {
            "level": "High",
            "payout": "USD $8,800"
          },
          {
            "level": "Medium",
            "payout": "USD $2,200"
          }
        ]
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Sovryn is an on-chain decentralized trading and lending protocol deployed on RSK, a side chain of the Bitcoin blockchain-powered by merge-mining, and is governed by the community. The Sovryn protocol is controlled by its community and stakeholders. There is no single company, organization, or individual that represents or controls the Sovryn protocol. While the Sovryn community is built on the principles of transparency, the Sovryn protocol's decentralized structure means that there is no single party that can be relied upon to provide you with accurate information. \"), mdx(\"p\", null, \"The SOV token is used to tokenize the rights, rewards, and risks associated with participating in Sovryn Bitocracy. It is used to represent voting power and to wrap the rewards and risks of Sovryn's future into a digital representation. SOV can be used by the Sovryn protocol whenever there is a need to balance risks and rewards. Changes to the protocol introduce risks, but if they are successful, can grow the use of the protocol and the fee revenue it generates. SOV can be staked to cover user losses and thus insure that they do not occur. \"), mdx(\"p\", null, \"The Sovryn bug bounty program was initially submitted as \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/DistributedCollective/SIPS/blob/main/SIP-0008.md\"\n  }, \"Sovryn Improvement Proposal 8\"), \" and was \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://twitter.com/SovrynBTC/status/1365431235217096704?s=20\"\n  }, \"approved on February 26 with 100% consensus\"), \". It is focused around its smart contracts and the prevention of loss of user funds.\\nFor more information about Sovryn, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.sovryn.app/\"\n  }, \"https://www.sovryn.app/\"), \". \"), mdx(\"p\", null, \"This bug bounty program is focused on their smart contracts and app and is focused on preventing:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any governance voting result manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Taking Down the application/website\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Redirection of user deposits and withdrawals\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Subdomain takeover resulting in financial loss\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Sovryn is an on-chain decentralized trading and lending protocol deployed on RSK, a side chain of the Bitcoin blockchain-powered by merge-mining, and is governed by the community. The Sovryn protocol is controlled by its community and stakeholders. There is no single company, organization, or individual that represents or controls the Sovryn protocol. While the Sovryn community is built on the principles of transparency, the Sovryn protocol&#x27;s decentralized structure means that there is no single party that can be relied upon to provide you with accurate information. </p><p>The SOV token is used to tokenize the rights, rewards, and risks associated with participating in Sovryn Bitocracy. It is used to represent voting power and to wrap the rewards and risks of Sovryn&#x27;s future into a digital representation. SOV can be used by the Sovryn protocol whenever there is a need to balance risks and rewards. Changes to the protocol introduce risks, but if they are successful, can grow the use of the protocol and the fee revenue it generates. SOV can be staked to cover user losses and thus insure that they do not occur. </p><p>The Sovryn bug bounty program was initially submitted as <a href=\"https://github.com/DistributedCollective/SIPS/blob/main/SIP-0008.md\">Sovryn Improvement Proposal 8</a> and was <a href=\"https://twitter.com/SovrynBTC/status/1365431235217096704?s=20\">approved on February 26 with 100% consensus</a>. It is focused around its smart contracts and the prevention of loss of user funds.\nFor more information about Sovryn, please visit <a href=\"https://www.sovryn.app/\">https://www.sovryn.app/</a>. </p><p>This bug bounty program is focused on their smart contracts and app and is focused on preventing:</p><ul><li>Any governance voting result manipulation</li><li>Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield</li><li>Permanent freezing of funds</li><li>Theft of unclaimed yield</li><li>Taking Down the application/website</li><li>Redirection of user deposits and withdrawals</li><li>Subdomain takeover resulting in financial loss</li></ul>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Impacts in Scope\")), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Blockchain/DLT:\"), \" \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Anything that leads to direct economic damage \")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any governance voting result manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Miner-extractable value (MEV)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Protocol Insolvency\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Temporary freezing of funds for at least one hour \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract unable to operate due to lack of token funds \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Block stuffing for profit\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of gas\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unbounded gas consumption \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract fails to deliver promised returns, but doesn\\u2019t lose value\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Web/App\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ability to execute system commands\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Extract Sensitive data/files from the server such as /etc/passwd\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Stealing User Cookies\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Taking Down the application/website\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bypassing Authentication\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Signing transactions for other users\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Redirection of user deposits and withdrawals\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Subdomain takeover resulting in financial loss (applicable for subdomains with addresses published)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wallet interaction modification resulting in financial loss\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct theft of user funds \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tampering with transactions submitted to the user\\u2019s wallet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Submitting malicious transactions to an already-connected wallet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Spoofing content on the target application (Persistent)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Users Confidential information disclosure such as Email\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Subdomain Takeover without financial loss (applicable for subdomains with no addresses published)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Privilege escalation to access unauthorized functionalities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Changing details of other users without direct financial impact (CSRF)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Third-Party API keys leakage that demonstrates loss of funds or modification on the website.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Redirecting users to malicious websites (Open Redirect)\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p><strong>Impacts in Scope</strong></p><p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p><p><strong>Blockchain/DLT:</strong> </p><ul><li>Anything that leads to direct economic damage </li></ul><p><strong>Smart Contracts</strong></p><ul><li>Any governance voting result manipulation</li><li>Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield</li><li>Permanent freezing of funds</li><li>Miner-extractable value (MEV)</li><li>Protocol Insolvency</li><li>Theft of unclaimed yield</li><li>Permanent freezing of unclaimed yield</li><li>Temporary freezing of funds for at least one hour </li><li>Smart contract unable to operate due to lack of token funds </li><li>Block stuffing for profit</li><li>Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)</li><li>Theft of gas</li><li>Unbounded gas consumption </li><li>Smart contract fails to deliver promised returns, but doesn’t lose value</li></ul><p><strong>Web/App</strong></p><ul><li>Ability to execute system commands</li><li>Extract Sensitive data/files from the server such as /etc/passwd</li><li>Stealing User Cookies</li><li>Taking Down the application/website</li><li>Bypassing Authentication</li><li>Signing transactions for other users</li><li>Redirection of user deposits and withdrawals</li><li>Subdomain takeover resulting in financial loss (applicable for subdomains with addresses published)</li><li>Wallet interaction modification resulting in financial loss</li><li>Direct theft of user funds </li><li>Tampering with transactions submitted to the user’s wallet</li><li>Submitting malicious transactions to an already-connected wallet</li><li>Spoofing content on the target application (Persistent)</li><li>Users Confidential information disclosure such as Email</li><li>Subdomain Takeover without financial loss (applicable for subdomains with no addresses published)</li><li>Privilege escalation to access unauthorized functionalities</li><li>Changing details of other users without direct financial impact (CSRF)</li><li>Third-Party API keys leakage that demonstrates loss of funds or modification on the website.</li><li>Redirecting users to malicious websites (Open Redirect)</li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\"), mdx(\"p\", null, \"All web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. In addition, Critical and High severity reports must come with a suggestion for a fix to be considered for a reward. \"), mdx(\"p\", null, \"Critical and High severity Solidity Contracts bug reports  must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code or pseudo code is required. In addition, Critical and High severity reports must come with a suggestion for a fix to be considered for a reward.\"), mdx(\"p\", null, \"Rewards for critical smart contract and blockchain/DLT vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 50 000\"), \" for Critical bug reports. \"), mdx(\"p\", null, \"For Blockchain/DLT infrastructure, only vulnerabilities that result in direct economic damage to yield will be considered as \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"High\"), \", and only vulnerabilities that result in direct economic damage to principal funds will be considered as \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Critical\"), \".\"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Sovryn\"), \" team directly and are denominated in USD. 50% of the payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"BTC\"), \", and the other 50% is paid out in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"SOV\"), \" according to a 24 month vesting schedule (with monthly vesting).\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"th\"\n  }, \"Blockchain/DLT\")), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"th\"\n  }, \"Payout\")))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"Critical\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Up to USD $1,000,000\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"High\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"USD $22,140\")))));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.</p><p>All web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. In addition, Critical and High severity reports must come with a suggestion for a fix to be considered for a reward. </p><p>Critical and High severity Solidity Contracts bug reports  must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code or pseudo code is required. In addition, Critical and High severity reports must come with a suggestion for a fix to be considered for a reward.</p><p>Rewards for critical smart contract and blockchain/DLT vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of <strong>USD 50 000</strong> for Critical bug reports. </p><p>For Blockchain/DLT infrastructure, only vulnerabilities that result in direct economic damage to yield will be considered as <strong>High</strong>, and only vulnerabilities that result in direct economic damage to principal funds will be considered as <strong>Critical</strong>.</p><p>Payouts are handled by the <strong>Sovryn</strong> team directly and are denominated in USD. 50% of the payouts are done in <strong>BTC</strong>, and the other 50% is paid out in <strong>SOV</strong> according to a 24 month vesting schedule (with monthly vesting).</p><table><thead><tr><th><strong>Blockchain/DLT</strong></th><th><strong>Payout</strong></th></tr></thead><tbody><tr><td><strong>Critical</strong></td><td>Up to USD $1,000,000</td></tr><tr><td><strong>High</strong></td><td>USD $22,140</td></tr></tbody></table>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/DistributedCollective/Sovryn-smart-contracts/tree/master/contracts/governance\"\n  }, \"https://github.com/DistributedCollective/Sovryn-smart-contracts/tree/master/contracts/governance\"), \" is an exception and considered out of scope for this program\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theoretical vulnerabilities without any proof or demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Content spoofing / Text injection issues\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Self-XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Captcha bypass using OCR\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with no security impact (logout CSRF, change language, etc.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as \\u201Chttponly\\u201D)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Server-side information disclosure such as IPs, server names, and most stack traces\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities used to enumerate or confirm the existence of users or tenants\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities requiring unlikely user actions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of SSL/TLS best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DDoS vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring privileged access from within the organization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Feature requests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities primarily caused by browser/plugin defects\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any vulnerability exploit requiring CSP bypass resulting from a browser bug \")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li><li><a href=\"https://github.com/DistributedCollective/Sovryn-smart-contracts/tree/master/contracts/governance\">https://github.com/DistributedCollective/Sovryn-smart-contracts/tree/master/contracts/governance</a> is an exception and considered out of scope for this program</li></ul><p><strong>Websites and Apps</strong></p><ul><li>Theoretical vulnerabilities without any proof or demonstration</li><li>Content spoofing / Text injection issues</li><li>Self-XSS</li><li>Captcha bypass using OCR</li><li>CSRF with no security impact (logout CSRF, change language, etc.)</li><li>Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)</li><li>Server-side information disclosure such as IPs, server names, and most stack traces</li><li>Vulnerabilities used to enumerate or confirm the existence of users or tenants</li><li>Vulnerabilities requiring unlikely user actions</li><li>URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)</li><li>Lack of SSL/TLS best practices</li><li>DDoS vulnerabilities</li><li>Attacks requiring privileged access from within the organization</li><li>Feature requests</li><li>Best practices</li><li>Vulnerabilities primarily caused by browser/plugin defects</li><li>Any vulnerability exploit requiring CSP bypass resulting from a browser bug </li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the branches in the assets in scope table are considered as in-scope of the bug bounty program, but for the asset exceptions below in the Out of Scope & Rules section. All other branches, including the default branch are considered as out-of-scope. \"), mdx(\"p\", null, \"All smart contracts of Sovryn can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/DistributedCollective\"\n  }, \"https://github.com/DistributedCollective\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the branches in the assets in scope table are considered as in-scope of the bug bounty program, but for the asset exceptions below in the Out of Scope &amp; Rules section. All other branches, including the default branch are considered as out-of-scope. </p><p>All smart contracts of Sovryn can be found at <a href=\"https://github.com/DistributedCollective\">https://github.com/DistributedCollective</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

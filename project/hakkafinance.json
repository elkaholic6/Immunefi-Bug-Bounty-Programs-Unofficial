{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "hakkafinance",
      "slug": "hakkafinance",
      "project": "Hakka Finance",
      "maxBounty": 1000000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3NYcVrpN5R4C8oIPUmEisj/c514d484f64f4d7c0478178edca9de08/Hakka_Finance_logo.png",
      "launchDate": "2022-03-28T11:30-06:00",
      "updatedDate": "2023-03-28T15:41:48.882Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to USD $1,000,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "Up to USD $10,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "Up to USD $3,000",
          "pocRequired": false
        },
        {
          "assetType": "websites_and_applications",
          "level": "critical",
          "payout": "Up to USD $15,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "high",
          "payout": "Up to USD $5,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "3x9Uh9dCM4ejOPxIccg97y",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xd9958826Bce875A75cc1789D5929459E6ff15040#code",
          "description": "sHAKKA"
        },
        {
          "id": "4bVX8qggmQPf1wQrNQXfqc",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x83D0D842e6DB3B020f384a2af11bD14787BEC8E7#code",
          "description": "GuildBank"
        },
        {
          "id": "5ucYGqJ6IuY8Vhf2kXE7M5",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xde02313f8BF17f31380c63e41CDECeE98Bc2b16d#code",
          "description": "Burner"
        },
        {
          "id": "1doKRaGJ6ZmTEsuXpSjISl",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x66be1bc6C6aF47900BBD4F3711801bE6C2c6CB32#code",
          "description": "3F Mutual"
        },
        {
          "id": "1jtqjrD9WplCEYoDCfzrat",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x0F2fd95c221770d108aCD5363D25b06Bdc43140B#code",
          "description": "Hakka Intelligence v1"
        },
        {
          "id": "2j8ZreoqNNC4jpONp0JQ7H",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x51F12323820b3c0077864990d9E6aD9604238Ed6#code",
          "description": "VestingVault"
        },
        {
          "id": "4y7LqwvnprSEonnRdDVXfA",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xF4D1F9674c8e9f29A69DC2E6f841292e675B7977#code",
          "description": "sHAKKA Reward Pool"
        },
        {
          "id": "1oa8G6fM2FVbDQiCiHNm3I",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x6dbff20caff68b99b1e67b50d14a9d7bbdfa94dc#code",
          "description": "VestingVault"
        },
        {
          "id": "1QQayqSJRHRRnuFtDxBd8s",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x47Ca2166A5b837e891E6E64E780d1B43FC0a4E95#code",
          "description": "TokenFactory"
        },
        {
          "id": "id8aVKei5mzmv6xniI6vy",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xc6183a902FD287CC47b525a75C8d3381C6eae42f",
          "description": "iGainAAVEIRS"
        },
        {
          "id": "3V6XRFCgJ4RmygrJmysmBh",
          "type": "websites_and_applications",
          "url": "https://igain.finance/",
          "description": "iGain Ecosystem:"
        },
        {
          "id": "eWXgLzS5N0j11CQGrJz4G",
          "type": "websites_and_applications",
          "url": "https://igain.finance/irs/",
          "description": "iGain IRS:"
        },
        {
          "id": "34mdUPvmjzb5xi1MDG7VeI",
          "type": "websites_and_applications",
          "url": "https://igain.finance/ig/",
          "description": "iGain IG"
        },
        {
          "id": "3BcafugR2ghETD4CRAcZMq",
          "type": "websites_and_applications",
          "url": "https://intelligence.hakka.finance/",
          "description": "Hakka Intelligence:"
        },
        {
          "id": "2ztfYt5K7vgN9W93Zc6S1I",
          "type": "websites_and_applications",
          "url": "https://hakka.finance",
          "description": "Hakka Finance"
        }
      ],
      "impacts": [
        {
          "id": "7en06aQYr4FzMQaWUfgnLu",
          "title": "Any governance voting result manipulation",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6g5QZNqWjsPBhOVav6W8nL",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4UNT4lxPJvlyvxv7O6ONFz",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1y6CgKtDtjeKw515LH5Rkj",
          "title": "Miner-extractable value (MEV)",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "68DekT5lbTTcZCMwUpY5kn",
          "title": "Protocol Insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5NlqlpcrvrWcjkbIFCn4uK",
          "title": "Ability to execute system commands",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "5Rq66zkH2N5YRRZ4GyfjRL",
          "title": "Extract Sensitive data/files from the server such as /etc/passwd",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "5gvf8T4US9JWA319xA0aaZ",
          "title": "Stealing User Cookies",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "VdeYnPCmQBTogMzjptkF7",
          "title": "Bypassing Authentication",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "7F7U6ywfREm5vRqPaJYjKH",
          "title": "Taking Down the application/website",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "6U69i4sYDYISGIwEpw4Ziy",
          "title": "Signing transactions for other users",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "51h3QIR3zPvMxi9j6rkenx",
          "title": "Redirection of user deposits and withdrawals",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "7hrPzgq6jTdDXsmGOY2vR7",
          "title": "Subdomain takeover resulting in financial loss (applicable for subdomains with addresses published)",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "1IMvMFDzkyUCoObZW2zixG",
          "title": "Wallet interaction modification resulting in financial loss",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "6ktFwjcv4oWqLIYCLrqEcA",
          "title": "Direct theft of user funds",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "5CVU7m5p4mwLNXjJS3X2Zt",
          "title": "Submitting malicious transactions to an already-connected wallet",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "5e6h8f1cmt9J4I4VMD12Ta",
          "title": "Tampering with transactions submitted to the user’s wallet",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "VXM4RiwwFfUQ7Ehl2enQE",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "42hte75XYw9HVGDjwVIDX4",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6TnLIk7vvVYK04F3Alm8LF",
          "title": "Temporary freezing of funds for more than 24 hrs",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "22P8Hn4oIglam51a5gj5af",
          "title": "Spoofing content on the target application (Persistent)",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "1qasTrn8Q0vtXUhmsiqnnq",
          "title": "Users Confidential information disclosure such as Email",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "9g5WVj2kpoxqatZuZU23U",
          "title": "Subdomain Takeover without financial loss (applicable for subdomains with no addresses published)",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "1xOxtpdYatei0TolOTNicQ",
          "title": "Privilege escalation to access unauthorized functionalities",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "34XX3JeQtFR9ey8ojz49m1",
          "title": "Smart contract unable to operate due to lack of funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "2ZQEyBlMB7BOe9IEfPfMC0",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "7FkC0g3LJTDJbL2P3n8mkz",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "7jEbThESuVEdBx7GZZVVxK",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "2fgWbmvoXXLfYRnMauz01A",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        }
      ],
      "programOverview": "Hakka Finance is a set of decentralized finance (DeFi) applications, which form an all-inclusive ecosystem of tools that allow users to pursue financial sovereignty. The current product offering consists of a stablecoin automated market maker (AMM) DEX, a gamified insurance product, an onchain prediction market and a derivative framework. All of this is administered and governed by a homonymous governance token, which goes by the ticker of HAKKA.\n\nFor more information about Hakka Finance, please visit [https://hakka.finance/](https://hakka.finance/). \n\nThis bug bounty program is focused on their smart contracts, website and app and is focused on preventing:\n\n  - Any governance voting result manipulation\n  - Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\n  - Permanent freezing of funds\n  - Miner-extractable value (MEV)\n  - Protocol Insolvency",
      "prioritizedVulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n__Critical__\n  - Any governance voting result manipulation\n  - Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\n  - Permanent freezing of funds\n  - Miner-extractable value (MEV)\n  - Protocol Insolvency\n\n__High__\n  - Theft of unclaimed yield\n  - Permanent freezing of unclaimed yield\n  - Temporary freezing of funds for more than 24 hrs\n\n__Medium__\n  - Smart contract unable to operate due to lack of funds \n  - Block stuffing for profit\n  - Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)\n  - Theft of gas\n  - Unbounded gas consumption \n\n__Websites and Applications__\n\n__Critical__\n  - Ability to execute system commands\n  - Extract Sensitive data/files from the server such as /etc/passwd\n  - Stealing User Cookies\n  - Taking Down the application/website\n  - Bypassing Authentication\n  - Signing transactions for other users\n  - Redirection of user deposits and withdrawals\n  - Subdomain takeover resulting in financial loss (applicable for subdomains with addresses published)\n  - Wallet interaction modification resulting in financial loss\n  - Direct theft of user funds \n  - Tampering with transactions submitted to the user’s wallet\n  - Submitting malicious transactions to an already-connected wallet\n\n__High__\n  - Spoofing content on the target application (Persistent)\n  - Users Confidential information disclosure such as Email\n  - Subdomain Takeover without financial loss (applicable for subdomains with no addresses published)\n  - Privilege escalation to access unauthorized functionalities",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\n\nAll web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. All High and Critical Smart Contract bug reports require a PoC to be eligible for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nCritical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team.\n\nThe following vulnerabilities are not eligible for a reward:\n\n  - In [https://github.com/artistic709/ImpermanentGain/blob/main/v2/IGainBase.sol](https://github.com/artistic709/ImpermanentGain/blob/main/v2/IGainBase.sol), on line 701, the transaction will fail if *reserveOut* is smaller than *amountIn*. This happens when you want to sell Long or Short with *burnA()* or *burnB()* and the liquidity is too small compared to the amount to be sold.\n\nPayouts are handled by the __Hakka Finance__ team directly and are denominated in USD. However, payouts are done in __USDT__, __USDC and ETH__, with the choice of the ratio at the discretion of the team.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\n__Websites and Apps__\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n  - Vulnerabilities primarily caused by browser/plugin defects\n  - Any vulnerability exploit requiring CSP bypass resulting from a browser bug\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "All smart contracts of Hakka Finance can be found at \n  - https://github.com/hakkafinance/iGain/tree/main/v2\n  - https://github.com/hakkafinance/HakkaFinance\n  - https://github.com/hakkafinance/urban-giggle\n  - https://github.com/hakkafinance/3FMutual\n\nHowever, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\nThe on-chain instance of iGain v2 would be expired and redeployed continuously. Therefore, it’s difficult to  choose a specific term on blockchain explorer for reference, but we put the previous expired contracts as an example. \n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "AMM",
          "DEX",
          "Insurance",
          "Stablecoin"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "BSC",
          "ETH",
          "Fantom",
          "Polygon"
        ],
        "programType": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $1,000,000"
          },
          {
            "level": "High",
            "payout": "Up to USD $10,000"
          },
          {
            "level": "Medium",
            "payout": "Up to USD $3,000"
          }
        ],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $15,000"
          },
          {
            "level": "High",
            "payout": "Up to USD $5,000"
          }
        ]
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Hakka Finance is a set of decentralized finance (DeFi) applications, which form an all-inclusive ecosystem of tools that allow users to pursue financial sovereignty. The current product offering consists of a stablecoin automated market maker (AMM) DEX, a gamified insurance product, an onchain prediction market and a derivative framework. All of this is administered and governed by a homonymous governance token, which goes by the ticker of HAKKA.\"), mdx(\"p\", null, \"For more information about Hakka Finance, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://hakka.finance/\"\n  }, \"https://hakka.finance/\"), \". \"), mdx(\"p\", null, \"This bug bounty program is focused on their smart contracts, website and app and is focused on preventing:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any governance voting result manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Miner-extractable value (MEV)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Protocol Insolvency\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Hakka Finance is a set of decentralized finance (DeFi) applications, which form an all-inclusive ecosystem of tools that allow users to pursue financial sovereignty. The current product offering consists of a stablecoin automated market maker (AMM) DEX, a gamified insurance product, an onchain prediction market and a derivative framework. All of this is administered and governed by a homonymous governance token, which goes by the ticker of HAKKA.</p><p>For more information about Hakka Finance, please visit <a href=\"https://hakka.finance/\">https://hakka.finance/</a>. </p><p>This bug bounty program is focused on their smart contracts, website and app and is focused on preventing:</p><ul><li>Any governance voting result manipulation</li><li>Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield</li><li>Permanent freezing of funds</li><li>Miner-extractable value (MEV)</li><li>Protocol Insolvency</li></ul>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Impacts in Scope\")), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Critical\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any governance voting result manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Miner-extractable value (MEV)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Protocol Insolvency\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"High\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Temporary freezing of funds for more than 24 hrs\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Medium\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract unable to operate due to lack of funds \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Block stuffing for profit\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of gas\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unbounded gas consumption \")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Applications\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Critical\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ability to execute system commands\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Extract Sensitive data/files from the server such as /etc/passwd\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Stealing User Cookies\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Taking Down the application/website\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bypassing Authentication\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Signing transactions for other users\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Redirection of user deposits and withdrawals\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Subdomain takeover resulting in financial loss (applicable for subdomains with addresses published)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wallet interaction modification resulting in financial loss\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct theft of user funds \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tampering with transactions submitted to the user\\u2019s wallet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Submitting malicious transactions to an already-connected wallet\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"High\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Spoofing content on the target application (Persistent)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Users Confidential information disclosure such as Email\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Subdomain Takeover without financial loss (applicable for subdomains with no addresses published)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Privilege escalation to access unauthorized functionalities\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p><strong>Impacts in Scope</strong></p><p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p><p><strong>Smart Contracts</strong></p><p><strong>Critical</strong></p><ul><li>Any governance voting result manipulation</li><li>Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield</li><li>Permanent freezing of funds</li><li>Miner-extractable value (MEV)</li><li>Protocol Insolvency</li></ul><p><strong>High</strong></p><ul><li>Theft of unclaimed yield</li><li>Permanent freezing of unclaimed yield</li><li>Temporary freezing of funds for more than 24 hrs</li></ul><p><strong>Medium</strong></p><ul><li>Smart contract unable to operate due to lack of funds </li><li>Block stuffing for profit</li><li>Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)</li><li>Theft of gas</li><li>Unbounded gas consumption </li></ul><p><strong>Websites and Applications</strong></p><p><strong>Critical</strong></p><ul><li>Ability to execute system commands</li><li>Extract Sensitive data/files from the server such as /etc/passwd</li><li>Stealing User Cookies</li><li>Taking Down the application/website</li><li>Bypassing Authentication</li><li>Signing transactions for other users</li><li>Redirection of user deposits and withdrawals</li><li>Subdomain takeover resulting in financial loss (applicable for subdomains with addresses published)</li><li>Wallet interaction modification resulting in financial loss</li><li>Direct theft of user funds </li><li>Tampering with transactions submitted to the user’s wallet</li><li>Submitting malicious transactions to an already-connected wallet</li></ul><p><strong>High</strong></p><ul><li>Spoofing content on the target application (Persistent)</li><li>Users Confidential information disclosure such as Email</li><li>Subdomain Takeover without financial loss (applicable for subdomains with no addresses published)</li><li>Privilege escalation to access unauthorized functionalities</li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\"), mdx(\"p\", null, \"All web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. All High and Critical Smart Contract bug reports require a PoC to be eligible for a reward. Explanations and statements are not accepted as PoC and code is required.\"), mdx(\"p\", null, \"Critical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team.\"), mdx(\"p\", null, \"The following vulnerabilities are not eligible for a reward:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/artistic709/ImpermanentGain/blob/main/v2/IGainBase.sol\"\n  }, \"https://github.com/artistic709/ImpermanentGain/blob/main/v2/IGainBase.sol\"), \", on line 701, the transaction will fail if \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"reserveOut\"), \" is smaller than \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"amountIn\"), \". This happens when you want to sell Long or Short with \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"burnA()\"), \" or \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"burnB()\"), \" and the liquidity is too small compared to the amount to be sold.\")), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Hakka Finance\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDT\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC and ETH\"), \", with the choice of the ratio at the discretion of the team.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.</p><p>All web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. All High and Critical Smart Contract bug reports require a PoC to be eligible for a reward. Explanations and statements are not accepted as PoC and code is required.</p><p>Critical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team.</p><p>The following vulnerabilities are not eligible for a reward:</p><ul><li>In <a href=\"https://github.com/artistic709/ImpermanentGain/blob/main/v2/IGainBase.sol\">https://github.com/artistic709/ImpermanentGain/blob/main/v2/IGainBase.sol</a>, on line 701, the transaction will fail if <em>reserveOut</em> is smaller than <em>amountIn</em>. This happens when you want to sell Long or Short with <em>burnA()</em> or <em>burnB()</em> and the liquidity is too small compared to the amount to be sold.</li></ul><p>Payouts are handled by the <strong>Hakka Finance</strong> team directly and are denominated in USD. However, payouts are done in <strong>USDT</strong>, <strong>USDC and ETH</strong>, with the choice of the ratio at the discretion of the team.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theoretical vulnerabilities without any proof or demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Content spoofing / Text injection issues\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Self-XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Captcha bypass using OCR\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with no security impact (logout CSRF, change language, etc.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as \\u201Chttponly\\u201D)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Server-side information disclosure such as IPs, server names, and most stack traces\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities used to enumerate or confirm the existence of users or tenants\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities requiring unlikely user actions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of SSL/TLS best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DDoS vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring privileged access from within the organization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Feature requests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities primarily caused by browser/plugin defects\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any vulnerability exploit requiring CSP bypass resulting from a browser bug\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p><strong>Websites and Apps</strong></p><ul><li>Theoretical vulnerabilities without any proof or demonstration</li><li>Content spoofing / Text injection issues</li><li>Self-XSS</li><li>Captcha bypass using OCR</li><li>CSRF with no security impact (logout CSRF, change language, etc.)</li><li>Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)</li><li>Server-side information disclosure such as IPs, server names, and most stack traces</li><li>Vulnerabilities used to enumerate or confirm the existence of users or tenants</li><li>Vulnerabilities requiring unlikely user actions</li><li>URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)</li><li>Lack of SSL/TLS best practices</li><li>DDoS vulnerabilities</li><li>Attacks requiring privileged access from within the organization</li><li>Feature requests</li><li>Best practices</li><li>Vulnerabilities primarily caused by browser/plugin defects</li><li>Any vulnerability exploit requiring CSP bypass resulting from a browser bug</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of Hakka Finance can be found at \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/hakkafinance/iGain/tree/main/v2\"\n  }, \"https://github.com/hakkafinance/iGain/tree/main/v2\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/hakkafinance/HakkaFinance\"\n  }, \"https://github.com/hakkafinance/HakkaFinance\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/hakkafinance/urban-giggle\"\n  }, \"https://github.com/hakkafinance/urban-giggle\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/hakkafinance/3FMutual\"\n  }, \"https://github.com/hakkafinance/3FMutual\"))), mdx(\"p\", null, \"However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\"), mdx(\"p\", null, \"The on-chain instance of iGain v2 would be expired and redeployed continuously. Therefore, it\\u2019s difficult to  choose a specific term on blockchain explorer for reference, but we put the previous expired contracts as an example. \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of Hakka Finance can be found at </p><ul><li><a href=\"https://github.com/hakkafinance/iGain/tree/main/v2\">https://github.com/hakkafinance/iGain/tree/main/v2</a></li><li><a href=\"https://github.com/hakkafinance/HakkaFinance\">https://github.com/hakkafinance/HakkaFinance</a></li><li><a href=\"https://github.com/hakkafinance/urban-giggle\">https://github.com/hakkafinance/urban-giggle</a></li><li><a href=\"https://github.com/hakkafinance/3FMutual\">https://github.com/hakkafinance/3FMutual</a></li></ul><p>However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.</p><p>The on-chain instance of iGain v2 would be expired and redeployed continuously. Therefore, it’s difficult to  choose a specific term on blockchain explorer for reference, but we put the previous expired contracts as an example. </p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

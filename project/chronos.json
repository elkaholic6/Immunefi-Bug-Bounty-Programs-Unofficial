{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "chronos",
      "slug": "chronos",
      "project": "Chronos",
      "maxBounty": 100000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4sAf1WHAAXhPp881JNzRXn/4ea0ccdd45b18840e863024c8be0a477/Chronos_logo.jpeg",
      "launchDate": "2023-04-25T12:00+03:00",
      "updatedDate": "2023-05-03T05:32:32.453Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $30,000 to USD $100,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $15,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "56atoXd1ASpOtFGKZHYHvA",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x15b2fb8f08e4ac1ce019eadae02ee92aedf06851",
          "description": "Chronos Token"
        },
        {
          "id": "1uNYVTj8NblVxSpTgw1Oor",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xCe9240869391928253Ed9cc9Bcb8cb98CB5B0722",
          "description": "Proxy Contract: Implementation PairFactoryUpgradeable"
        },
        {
          "id": "6u5DB1cPVsXdEahswWtwdj",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x55d26d7e20bfb42948a05d6d9a69af8fd5400fa0",
          "description": "ChrNFT"
        },
        {
          "id": "4zxbdgfvMUYHKNwlhwEUvv",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x9A01857f33aa382b1d5bb96C3180347862432B0d",
          "description": "Proxy Contract: Implementation  VotingEscrow"
        },
        {
          "id": "5GlGf1KPwOqKdMIbFj1BHp",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x24917Af386e2FCF1aa1994FD3949f080740aEb23",
          "description": "Proxy Contract: Implementation  GaugeFactoryV2"
        },
        {
          "id": "5LtfngYu7JBXAu2iorkzhz",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x538f0127D85E5C096f906396F5f6357A9c17c819",
          "description": "Proxy Contract: Implementation  BribeFactoryV2"
        },
        {
          "id": "59HOizjPUvqm3guC5vg0yx",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x9774Ae804E6662385F5AB9b01417BC2c6E548468",
          "description": "Proxy Contract: Implementation  MaLPNFT"
        },
        {
          "id": "6tlwNHVzlPy5YAJR29aUJ0",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xC72b5C6D2C33063E89a50B2F77C99193aE6cEe6c",
          "description": "Proxy Contract: Implementation  VoterV2_1"
        },
        {
          "id": "7ejeprNFk7pXtfLLMyeLk0",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x233001101D35D7A5CAB7D51BCfbaB3679AE4dc15",
          "description": "Proxy Contract: Implementation  MinterUpgradeable"
        }
      ],
      "impacts": [
        {
          "id": "3nYUGtuYaomkd5gsJ3W05B",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "60DjtYbd1tC7kz9rUbiQOe",
          "title": "Direct theft of any user NFTs, whether at-rest or in-motion, other than unclaimed royalties",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "27mNqKxNst2iyd0BA7QCwy",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4F3RF4KcPO60q0HwO9zU5L",
          "title": "Permanent freezing of NFTs",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1xrEJYus6IgWFNY3SdZlkD",
          "title": "Unauthorized minting of NFTs",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6TbzTNj8oJv320l6xIZSL3",
          "title": "Unintended alteration of what the NFT represents (e.g. payload, artistic content)",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3To8WXhuhBuf1Bp9Lc4Io9",
          "title": "Protocol insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1FLyFobWhDvN5r15XRD5Tm",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "43F1Ygt1rQbiAeWWBcO64F",
          "title": "Theft of unclaimed royalties",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "7lePmGrPV34xtbvbWHCTqr",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "5qO3LXQF6O9RtbfMjGD4UD",
          "title": "Permanent freezing of unclaimed royalties",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "74CGGOMI5SPEXMuI7rcOYK",
          "title": "Temporary freezing of funds for more than 5 days",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6VEHyjRCS4goHxU3rgvy9n",
          "title": "Temporary freezing NFTs for more than 5 days",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "2rOlKN7SqyLn4bny30JlQ3",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        }
      ],
      "programOverview": "Chronos Finance is a community driven liquidity layer & AMM on Arbitrum, that uses a vote escrowed model to drive Liquidity to the highest volume pairs.\n\nFor more information about Chronos, please visit [https://chronos.exchange/. ](https://chronos.exchange/) \n\n__Responsible Publication__\n\nChronos adheres to __category 3__. This Policy determines what information whitehats are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our [Responsible Publication](https://immunefi.com/responsible-publication/) page.\n\n__For Whitehats:__ It is highly recommended that you review the details of this program in full. Although many Bug Bounty programs have standard terms and conditions, each also has their own unique details that are critical to your success.  \n\nPrior to submitting a report please review the[ Immunefi Bug Report Template and Best Practices. ](https://immunefisupport.zendesk.com/hc/en-us/articles/12435277406481-Bug-Report-Template)\n",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are considered out-of-scope and ineligible for payout.",
      "rewardsBody": "Please review how rewards are distributed based on the [Immunefi Vulnerability Severity Classification System V2.3.](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3/) This is a simplified 5-level scale system with separate scales for Smart Contracts and Websites/Apps.\n\n__*Critical Rewards will be calculated as follows:__ \n\n__Max Value__ = 10% of the total value of funds at risk, with a limit of $100,000.\n\n__Additional considerations:__ There is a limit to the rewards related to theft and/or permanent loss of funds. There is a minimum payout of $30,000 USD if the discovered bug/vulnerability can impact more than $2,000 or more in assets.\n\nAll the rewards given will have a vesting schedule of 2 months, managed by a smart contract.\n\n__Example:__ If a critical bug is found resulting in $700,000 in damage, you would receive the initial $30,000 for the critical bug + $70,000 ($700,000 * 0.1) as the 10% additional bounty. \nTotal = $100,000\n\nIn cases of repeatable attacks, only the first attack is considered unless the smart contract cannot be upgraded or paused. If the attack impacts a smart contract directly holding funds that cannot be upgraded or paused, the amount of funds at risk will be calculated with the first attack being at 100% of the funds that could be stolen and then a reduction of 25% from the amount of the first attack for every 300 blocks the attack needs for subsequent attacks from the first attack, rounded down. For avoidance of doubt, if a second attack would happen at 600 blocks and then a third at 900 blocks, the funds at risk would be counted at 50% and 25% from the first attack, respectively.\n\n__Payouts and Payout Requirements__\n\nPayouts are handled by the Chronos team directly and are denominated in USD. However, all payouts are done in CHR. Chronos commits to honoring payouts according to the terms set out in this program at the time of report submission, and to treat this program as the agreement and source of truth concerning bug reports and responsible disclosures. \n\n$CHR Token =0x15b2fb8f08e4ac1ce019eadae02ee92aedf06851\nCoingecko = https://www.coingecko.com/en/coins/chronos-finance\n\nFor the purposes of determining report validity, this is a __Primacy of Impact__ program. \n\nLearn more about report validity best practices here: [Best Practice - Primacy of Impact vs Primacy of Rules.](https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact) \n\n__KYC Requirements__\n\nChronos __does not__ have a Know Your Customer (KYC) requirement for bug bounty payouts. \n\n__Audit Discoveries and Known Issues__\n\nBug reports covering previously-discovered bugs are not eligible for any reward through the bug bounty program. If a bug report covers a known issue, it may be rejected together with proof of the issue being known before escalation of the bug report via Immunefi. \n\nPrevious audits and known issues can be found at:\n\n| Description of known issue     | Related Impact-in-Scope     |\n| ---------- | ---------- |\n| [https://github.com/peckshield/publications/blob/master/audit_reports/PeckShield-Audit-Report-Thena-v1.0.pdf](https://github.com/peckshield/publications/blob/master/audit_reports/PeckShield-Audit-Report-Thena-v1.0.pdf)       | Forked code from Thena       |\n| [https://skynet.certik.com/projects/chronos-exchange ](https://skynet.certik.com/projects/chronos-exchange)      | 2 audits of chronos in certik        |\n",
      "outOfScopeAndRules": "The following impacts and attack vectors are excluded from rewards by default for all Immunefi bug bounty programs: \n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist), except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\n- Broken link hijacking is out of scope\n\n__Smart Contracts and Blockchain/DLT__\n\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n- Centralization risks\n\n__Prohibited Activities__\n\nThe following activities are prohibited by this bug bounty program. Violation of these rules can result in a temporary suspension or permanent ban from the Immunefi platform at the sole discretion of the Immunefi team, which may also result in: 1) the forfeiture and loss of access to all bug submissions, and 2) zero payout. \n\nPlease note that Immunefi has no tolerance for spam/low-quality/incomplete bug reports, “beg bounty” behavior, and misrepresentation of assets and severity. Immunefi exists to protect the global crypto community, not facilitate grift.\n\nProhibited: \n- Any testing with mainnet or public testnet deployed code; all testing should be done on private testnets\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- [Any other actions prohibited by the Immunefi Rules.](https://immunefi.com/rules/) These rules are subject to change at any time.  \n",
      "assetsBodyV2": "Impacts only apply to assets in active use by the project like contracts on mainnet or web/app assets used in production. Any impact that applies to assets not in active use, like test or mock files, are out-of-scope of the bug bounty program unless explicitly mentioned as in-scope. \n\n__Smart Contracts__ \n\n- __Smart Contracts - PoC__, Smart Contract bug reports are to include a runnable Proof of Concept (PoC) in order to prove impact.  \n- For more information on PoCs please visit: [Proof of Concept (PoC) Guidelines and Rules](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules)\n- All smart contracts of Chronos can be found at: [https://github.com/ChronosEx ](https://github.com/ChronosEx)\n\n__Impacts to other assets__ \n\nHackers are encouraged to submit issues outside of the outlined Impacts and Assets in Scope. \n\nIf whitehats can demonstrate a critical impact on code in production for an asset not in scope, Chronos encourages you to submit your bug report using the “primacy of impact exception” asset. \n\n__Impacts in Scope__\n\n(For Blockchain/DLT and Smart Contracts Only) This program is considered to be governed by Primacy of Impact. For more information on what this means visit: [Best Practice - Primacy of Impact vs Primacy of Rules.](https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact) \n\nImpacts are based on the [Immunefi Vulnerability Severity Classification System V2.3.](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3/)\n\nAt Immunefi, we classify bugs on a simplified 5-level scale:\n- Critical\n- High\n- Medium\n- Low\n- None\n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "DEX"
        ],
        "projectType": [
          "Defi",
          "NFT"
        ],
        "ecosystem": [
          "Arbitrum"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $30,000 to USD $100,000"
          },
          {
            "level": "High",
            "payout": "USD $15,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Chronos Finance is a community driven liquidity layer & AMM on Arbitrum, that uses a vote escrowed model to drive Liquidity to the highest volume pairs.\"), mdx(\"p\", null, \"For more information about Chronos, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://chronos.exchange/\"\n  }, \"https://chronos.exchange/. \"), \" \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Responsible Publication\")), mdx(\"p\", null, \"Chronos adheres to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"category 3\"), \". This Policy determines what information whitehats are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/responsible-publication/\"\n  }, \"Responsible Publication\"), \" page.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"For Whitehats:\"), \" It is highly recommended that you review the details of this program in full. Although many Bug Bounty programs have standard terms and conditions, each also has their own unique details that are critical to your success.  \"), mdx(\"p\", null, \"Prior to submitting a report please review the\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/12435277406481-Bug-Report-Template\"\n  }, \" Immunefi Bug Report Template and Best Practices. \")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Chronos Finance is a community driven liquidity layer &amp; AMM on Arbitrum, that uses a vote escrowed model to drive Liquidity to the highest volume pairs.</p><p>For more information about Chronos, please visit <a href=\"https://chronos.exchange/\">https://chronos.exchange/. </a> </p><p><strong>Responsible Publication</strong></p><p>Chronos adheres to <strong>category 3</strong>. This Policy determines what information whitehats are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our <a href=\"https://immunefi.com/responsible-publication/\">Responsible Publication</a> page.</p><p><strong>For Whitehats:</strong> It is highly recommended that you review the details of this program in full. Although many Bug Bounty programs have standard terms and conditions, each also has their own unique details that are critical to your success.  </p><p>Prior to submitting a report please review the<a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/12435277406481-Bug-Report-Template\"> Immunefi Bug Report Template and Best Practices. </a></p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are considered out-of-scope and ineligible for payout.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are considered out-of-scope and ineligible for payout.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Please review how rewards are distributed based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3/\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.3.\"), \" This is a simplified 5-level scale system with separate scales for Smart Contracts and Websites/Apps.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"*Critical Rewards will be calculated as follows:\"), \" \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Max Value\"), \" = 10% of the total value of funds at risk, with a limit of $100,000.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Additional considerations:\"), \" There is a limit to the rewards related to theft and/or permanent loss of funds. There is a minimum payout of $30,000 USD if the discovered bug/vulnerability can impact more than $2,000 or more in assets.\"), mdx(\"p\", null, \"All the rewards given will have a vesting schedule of 2 months, managed by a smart contract.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\"), \" If a critical bug is found resulting in $700,000 in damage, you would receive the initial $30,000 for the critical bug + $70,000 ($700,000 * 0.1) as the 10% additional bounty.\\nTotal = $100,000\"), mdx(\"p\", null, \"In cases of repeatable attacks, only the first attack is considered unless the smart contract cannot be upgraded or paused. If the attack impacts a smart contract directly holding funds that cannot be upgraded or paused, the amount of funds at risk will be calculated with the first attack being at 100% of the funds that could be stolen and then a reduction of 25% from the amount of the first attack for every 300 blocks the attack needs for subsequent attacks from the first attack, rounded down. For avoidance of doubt, if a second attack would happen at 600 blocks and then a third at 900 blocks, the funds at risk would be counted at 50% and 25% from the first attack, respectively.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Payouts and Payout Requirements\")), mdx(\"p\", null, \"Payouts are handled by the Chronos team directly and are denominated in USD. However, all payouts are done in CHR. Chronos commits to honoring payouts according to the terms set out in this program at the time of report submission, and to treat this program as the agreement and source of truth concerning bug reports and responsible disclosures. \"), mdx(\"p\", null, \"$CHR Token =0x15b2fb8f08e4ac1ce019eadae02ee92aedf06851\\nCoingecko = \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.coingecko.com/en/coins/chronos-finance\"\n  }, \"https://www.coingecko.com/en/coins/chronos-finance\")), mdx(\"p\", null, \"For the purposes of determining report validity, this is a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Primacy of Impact\"), \" program. \"), mdx(\"p\", null, \"Learn more about report validity best practices here: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact\"\n  }, \"Best Practice - Primacy of Impact vs Primacy of Rules.\"), \" \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"KYC Requirements\")), mdx(\"p\", null, \"Chronos \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"does not\"), \" have a Know Your Customer (KYC) requirement for bug bounty payouts. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Audit Discoveries and Known Issues\")), mdx(\"p\", null, \"Bug reports covering previously-discovered bugs are not eligible for any reward through the bug bounty program. If a bug report covers a known issue, it may be rejected together with proof of the issue being known before escalation of the bug report via Immunefi. \"), mdx(\"p\", null, \"Previous audits and known issues can be found at:\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Description of known issue\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Related Impact-in-Scope\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://github.com/peckshield/publications/blob/master/audit_reports/PeckShield-Audit-Report-Thena-v1.0.pdf\"\n  }, \"https://github.com/peckshield/publications/blob/master/audit_reports/PeckShield-Audit-Report-Thena-v1.0.pdf\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Forked code from Thena\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://skynet.certik.com/projects/chronos-exchange\"\n  }, \"https://skynet.certik.com/projects/chronos-exchange \")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2 audits of chronos in certik\")))));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Please review how rewards are distributed based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3/\">Immunefi Vulnerability Severity Classification System V2.3.</a> This is a simplified 5-level scale system with separate scales for Smart Contracts and Websites/Apps.</p><p><strong>*Critical Rewards will be calculated as follows:</strong> </p><p><strong>Max Value</strong> = 10% of the total value of funds at risk, with a limit of $100,000.</p><p><strong>Additional considerations:</strong> There is a limit to the rewards related to theft and/or permanent loss of funds. There is a minimum payout of $30,000 USD if the discovered bug/vulnerability can impact more than $2,000 or more in assets.</p><p>All the rewards given will have a vesting schedule of 2 months, managed by a smart contract.</p><p><strong>Example:</strong> If a critical bug is found resulting in $700,000 in damage, you would receive the initial $30,000 for the critical bug + $70,000 ($700,000 * 0.1) as the 10% additional bounty.\nTotal = $100,000</p><p>In cases of repeatable attacks, only the first attack is considered unless the smart contract cannot be upgraded or paused. If the attack impacts a smart contract directly holding funds that cannot be upgraded or paused, the amount of funds at risk will be calculated with the first attack being at 100% of the funds that could be stolen and then a reduction of 25% from the amount of the first attack for every 300 blocks the attack needs for subsequent attacks from the first attack, rounded down. For avoidance of doubt, if a second attack would happen at 600 blocks and then a third at 900 blocks, the funds at risk would be counted at 50% and 25% from the first attack, respectively.</p><p><strong>Payouts and Payout Requirements</strong></p><p>Payouts are handled by the Chronos team directly and are denominated in USD. However, all payouts are done in CHR. Chronos commits to honoring payouts according to the terms set out in this program at the time of report submission, and to treat this program as the agreement and source of truth concerning bug reports and responsible disclosures. </p><p>$CHR Token =0x15b2fb8f08e4ac1ce019eadae02ee92aedf06851\nCoingecko = <a href=\"https://www.coingecko.com/en/coins/chronos-finance\">https://www.coingecko.com/en/coins/chronos-finance</a></p><p>For the purposes of determining report validity, this is a <strong>Primacy of Impact</strong> program. </p><p>Learn more about report validity best practices here: <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact\">Best Practice - Primacy of Impact vs Primacy of Rules.</a> </p><p><strong>KYC Requirements</strong></p><p>Chronos <strong>does not</strong> have a Know Your Customer (KYC) requirement for bug bounty payouts. </p><p><strong>Audit Discoveries and Known Issues</strong></p><p>Bug reports covering previously-discovered bugs are not eligible for any reward through the bug bounty program. If a bug report covers a known issue, it may be rejected together with proof of the issue being known before escalation of the bug report via Immunefi. </p><p>Previous audits and known issues can be found at:</p><table><thead><tr><th>Description of known issue</th><th>Related Impact-in-Scope</th></tr></thead><tbody><tr><td><a href=\"https://github.com/peckshield/publications/blob/master/audit_reports/PeckShield-Audit-Report-Thena-v1.0.pdf\">https://github.com/peckshield/publications/blob/master/audit_reports/PeckShield-Audit-Report-Thena-v1.0.pdf</a></td><td>Forked code from Thena</td></tr><tr><td><a href=\"https://skynet.certik.com/projects/chronos-exchange\">https://skynet.certik.com/projects/chronos-exchange </a></td><td>2 audits of chronos in certik</td></tr></tbody></table>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following impacts and attack vectors are excluded from rewards by default for all Immunefi bug bounty programs: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist), except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Broken link hijacking is out of scope\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain/DLT\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Prohibited Activities\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program. Violation of these rules can result in a temporary suspension or permanent ban from the Immunefi platform at the sole discretion of the Immunefi team, which may also result in: 1) the forfeiture and loss of access to all bug submissions, and 2) zero payout. \"), mdx(\"p\", null, \"Please note that Immunefi has no tolerance for spam/low-quality/incomplete bug reports, \\u201Cbeg bounty\\u201D behavior, and misrepresentation of assets and severity. Immunefi exists to protect the global crypto community, not facilitate grift.\"), mdx(\"p\", null, \"Prohibited: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet deployed code; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://immunefi.com/rules/\"\n  }, \"Any other actions prohibited by the Immunefi Rules.\"), \" These rules are subject to change at any time.  \")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following impacts and attack vectors are excluded from rewards by default for all Immunefi bug bounty programs: </p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist), except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible</li><li>Broken link hijacking is out of scope</li></ul><p><strong>Smart Contracts and Blockchain/DLT</strong></p><ul><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p><strong>Prohibited Activities</strong></p><p>The following activities are prohibited by this bug bounty program. Violation of these rules can result in a temporary suspension or permanent ban from the Immunefi platform at the sole discretion of the Immunefi team, which may also result in: 1) the forfeiture and loss of access to all bug submissions, and 2) zero payout. </p><p>Please note that Immunefi has no tolerance for spam/low-quality/incomplete bug reports, “beg bounty” behavior, and misrepresentation of assets and severity. Immunefi exists to protect the global crypto community, not facilitate grift.</p><p>Prohibited: </p><ul><li>Any testing with mainnet or public testnet deployed code; all testing should be done on private testnets</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li><li><a href=\"https://immunefi.com/rules/\">Any other actions prohibited by the Immunefi Rules.</a> These rules are subject to change at any time.  </li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Impacts only apply to assets in active use by the project like contracts on mainnet or web/app assets used in production. Any impact that applies to assets not in active use, like test or mock files, are out-of-scope of the bug bounty program unless explicitly mentioned as in-scope. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts\"), \" \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Smart Contracts - PoC\"), \", Smart Contract bug reports are to include a runnable Proof of Concept (PoC) in order to prove impact.  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For more information on PoCs please visit: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\"\n  }, \"Proof of Concept (PoC) Guidelines and Rules\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All smart contracts of Chronos can be found at: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ChronosEx\"\n  }, \"https://github.com/ChronosEx \"))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Impacts to other assets\"), \" \"), mdx(\"p\", null, \"Hackers are encouraged to submit issues outside of the outlined Impacts and Assets in Scope. \"), mdx(\"p\", null, \"If whitehats can demonstrate a critical impact on code in production for an asset not in scope, Chronos encourages you to submit your bug report using the \\u201Cprimacy of impact exception\\u201D asset. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Impacts in Scope\")), mdx(\"p\", null, \"(For Blockchain/DLT and Smart Contracts Only) This program is considered to be governed by Primacy of Impact. For more information on what this means visit: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact\"\n  }, \"Best Practice - Primacy of Impact vs Primacy of Rules.\"), \" \"), mdx(\"p\", null, \"Impacts are based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3/\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.3.\")), mdx(\"p\", null, \"At Immunefi, we classify bugs on a simplified 5-level scale:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Critical\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"High\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Medium\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Low\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"None\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Impacts only apply to assets in active use by the project like contracts on mainnet or web/app assets used in production. Any impact that applies to assets not in active use, like test or mock files, are out-of-scope of the bug bounty program unless explicitly mentioned as in-scope. </p><p><strong>Smart Contracts</strong> </p><ul><li><strong>Smart Contracts - PoC</strong>, Smart Contract bug reports are to include a runnable Proof of Concept (PoC) in order to prove impact.  </li><li>For more information on PoCs please visit: <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\">Proof of Concept (PoC) Guidelines and Rules</a></li><li>All smart contracts of Chronos can be found at: <a href=\"https://github.com/ChronosEx\">https://github.com/ChronosEx </a></li></ul><p><strong>Impacts to other assets</strong> </p><p>Hackers are encouraged to submit issues outside of the outlined Impacts and Assets in Scope. </p><p>If whitehats can demonstrate a critical impact on code in production for an asset not in scope, Chronos encourages you to submit your bug report using the “primacy of impact exception” asset. </p><p><strong>Impacts in Scope</strong></p><p>(For Blockchain/DLT and Smart Contracts Only) This program is considered to be governed by Primacy of Impact. For more information on what this means visit: <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact\">Best Practice - Primacy of Impact vs Primacy of Rules.</a> </p><p>Impacts are based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3/\">Immunefi Vulnerability Severity Classification System V2.3.</a></p><p>At Immunefi, we classify bugs on a simplified 5-level scale:</p><ul><li>Critical</li><li>High</li><li>Medium</li><li>Low</li><li>None</li></ul>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "keep3rnetwork",
      "slug": "keep3rnetwork",
      "project": "Keep3r Network",
      "maxBounty": 250000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/10L9tJ5tgrPqXmkhFF6ThR/50746e69a4c7fd48e18fd2ecdd2c180f/Keep3r.png",
      "launchDate": "2022-01-19T01:00+01:00",
      "updatedDate": "2022-11-22T13:48:40.765Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to USD $250,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "Up to USD $40,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": false
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "2N4aKhIHAQkFTNNqpWYGx1",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x2fc52c61fb0c03489649311989ce2689d93dc1a2",
          "description": "Vyper_contract"
        },
        {
          "id": "6eV4qCeukJaaSpAJoEjl86",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x076bbbd5384acd0550d8d58bc758dd9e0287cccf",
          "description": "veclaim"
        },
        {
          "id": "3YOhJliF9GlZ5TPgAc7coD",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x5555f75e3d5278082200fb451d1b6ba946d8e13b",
          "description": "FixedForex"
        },
        {
          "id": "n4bLcbEoYIvk3PqvUfsiz",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x69681f8fde45345c3870bcd5eaf4a05a60e7d227",
          "description": "FixedForex"
        },
        {
          "id": "fnsFNobjhEbMprTlJjjCf",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xFAFdF0C4c1CB09d430Bf88c75D88BB46DAe09967",
          "description": "FixedForex"
        },
        {
          "id": "4nPX73lXNVNl3Ck8cNG5P9",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x96e61422b6a9ba0e068b6c5add4ffabc6a4aae27",
          "description": "FixedEUR"
        },
        {
          "id": "7tTJXExhtqS03ejvni5bxm",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x95dfdc8161832e4ff7816ac4b6367ce201538253",
          "description": "FixedForex"
        },
        {
          "id": "5ihVYs7cqhC86CZ0O5puEu",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x0ea89fb2e5b8fa8f14b741ffe1a4617a32611dfc",
          "description": "Vyper_contract"
        },
        {
          "id": "7yki3XH1F7hQlXbb4pME0O",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x90aAb6C9D887A7Ff8320e56fbd1F4Ff80A0811d5",
          "description": "GaugeProxy"
        },
        {
          "id": "6hnn9fAC562hdUoAgx6BOp",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x4A6cFf9E1456eAa3b6f37572395C6fa0c959edAB",
          "description": "Keep3r V2"
        },
        {
          "id": "63Ido5KAtCUG59xetcTlEW",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xc07c37a0a1e557e0d1704c90d966b37a67a45dd4",
          "description": "Keep3r Helper"
        },
        {
          "id": "45BNMnSrjFlbZke6tqwGw6",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x005634CfeF45e5a19C84aEdE6f0af17833471852",
          "description": "Pair Manager Factory [Uni V3]"
        },
        {
          "id": "2ItMv4clRQrt2cXYTOr97F",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x7396899638410094b3690f8bd2b56f07fdab620c",
          "description": "Keep3r Job Registry"
        }
      ],
      "impacts": [
        {
          "id": "5mu4M4sm3FbpX6uHe96syG",
          "title": "Loss of user funds staked (principal) by freezing or theft",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1HeXsPTopXFGZRtIUxV5gj",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "47zpK23dmbOl0q3grXnEVh",
          "title": "Vote manipulation",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "562DKI55Nqs4RcE4qVd1zr",
          "title": "Incorrect polling actions",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "387WiqL08zMSG4TMNwhmwI",
          "title": "Loss of governance funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "VQBHXvORaXIeAeN2JFia8",
          "title": "Freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "2XvB2SbmWJ7raBhluIZwEd",
          "title": "Temporary freezing of funds for at least 5 minutes",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "5O8qoTMu3qUV0Tb1vdGKFW",
          "title": "Unable to call smart contract",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "58j8aqoR02XS6ZPeViMMFF",
          "title": "Smart contract gas drainage",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "2dDK6sAmHAGET8h4Qj4Tka",
          "title": "Smart contract fails to deliver promised returns",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "Keep3r Network is a decentralized keeper network for projects that need external devops and for external teams to find keeper jobs.\n\nA Keeper is the term used to refer to an external person and/or team that executes a job. This can be as simplistic as calling a transaction, or as complex as requiring extensive off-chain logic. The scope of Keep3r network is not to manage these jobs themselves, but to allow contracts to register as jobs for keepers, and keepers to register themselves as available to perform jobs. It is up to the individual keeper to set up their devops and infrastructure and create their own rules based on what transactions they deem profitable.\n\nA Job is the term used to refer to a smart contract that wishes an external entity to perform an action. They would like the action to be performed in \"good will\" and not have a malicious result. For this reason they register as a job, and keepers can then execute on their contract.\n\nFor more information about Keep3r, please visit [https://keep3r.network/](https://keep3r.network/).  \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing the loss of funds.",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theftLoss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for at least 5 minutes\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation\n  - Incorrect polling actions",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nCritical smart contract bug reports must come with a PoC in order to be considered for a reward. Other severity levels may require a PoC during the bug validation process. \n\nCritical smart contract vulnerabilities are paid at 10% of economic damage, primarily based on funds at risk. The team may, at its discretion, take into consideration other aspects such as PR and branding effects. However, there is a minimum reward of __USD 50 000__.\n\nHigh smart contract vulnerability rewards are further restricted to be 100% of the funds affected within this severity level. However, the minimum reward is __USD 10 000__. For vulnerabilities involving a temporary lock-up, the reward is further increased by __USD 5 000__, until the cap, for every additional 5 minutes, based on the minimum 5 minute requirement to be qualified as in-scope. \n\nPayouts are handled by the __Keep3r Network__ team directly and are denominated in USD. However, payouts are done in __ETH__.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are __prohibited__ by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "All smart contracts of Keep3r Network can be found at [https://github.com/keep3r-network](https://github.com/keep3r-network). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. The following folders are the most relevant:\n\n  - [https://github.com/keep3r-network/ff](https://github.com/keep3r-network/ff)\n  - [https://github.com/keep3r-network/OptionsLM](https://github.com/keep3r-network/OptionsLM)\n  - [https://github.com/keep3r-network/keep3r.network](https://github.com/keep3r-network/keep3r.network)",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": null,
        "projectType": null,
        "ecosystem": null,
        "programType": [
          "Smart Contract"
        ],
        "language": null
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $250,000"
          },
          {
            "level": "High",
            "payout": "Up to USD $40,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Keep3r Network is a decentralized keeper network for projects that need external devops and for external teams to find keeper jobs.\"), mdx(\"p\", null, \"A Keeper is the term used to refer to an external person and/or team that executes a job. This can be as simplistic as calling a transaction, or as complex as requiring extensive off-chain logic. The scope of Keep3r network is not to manage these jobs themselves, but to allow contracts to register as jobs for keepers, and keepers to register themselves as available to perform jobs. It is up to the individual keeper to set up their devops and infrastructure and create their own rules based on what transactions they deem profitable.\"), mdx(\"p\", null, \"A Job is the term used to refer to a smart contract that wishes an external entity to perform an action. They would like the action to be performed in \\\"good will\\\" and not have a malicious result. For this reason they register as a job, and keepers can then execute on their contract.\"), mdx(\"p\", null, \"For more information about Keep3r, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://keep3r.network/\"\n  }, \"https://keep3r.network/\"), \".  \"), mdx(\"p\", null, \"This bug bounty program is focused on their smart contracts and is focused on preventing the loss of funds.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Keep3r Network is a decentralized keeper network for projects that need external devops and for external teams to find keeper jobs.</p><p>A Keeper is the term used to refer to an external person and/or team that executes a job. This can be as simplistic as calling a transaction, or as complex as requiring extensive off-chain logic. The scope of Keep3r network is not to manage these jobs themselves, but to allow contracts to register as jobs for keepers, and keepers to register themselves as available to perform jobs. It is up to the individual keeper to set up their devops and infrastructure and create their own rules based on what transactions they deem profitable.</p><p>A Job is the term used to refer to a smart contract that wishes an external entity to perform an action. They would like the action to be performed in &quot;good will&quot; and not have a malicious result. For this reason they register as a job, and keepers can then execute on their contract.</p><p>For more information about Keep3r, please visit <a href=\"https://keep3r.network/\">https://keep3r.network/</a>.  </p><p>This bug bounty program is focused on their smart contracts and is focused on preventing the loss of funds.</p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of user funds staked (principal) by freezing or theftLoss of user funds staked (principal) by freezing or theft\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of governance funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Freezing of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Temporary freezing of funds for at least 5 minutes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unable to call smart contract\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract gas drainage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract fails to deliver promised returns\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vote manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect polling actions\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p><p><strong>Smart Contracts</strong></p><ul><li>Loss of user funds staked (principal) by freezing or theftLoss of user funds staked (principal) by freezing or theft</li><li>Loss of governance funds</li><li>Theft of unclaimed yield</li><li>Freezing of unclaimed yield</li><li>Temporary freezing of funds for at least 5 minutes</li><li>Unable to call smart contract</li><li>Smart contract gas drainage</li><li>Smart contract fails to deliver promised returns</li><li>Vote manipulation</li><li>Incorrect polling actions</li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \"), mdx(\"p\", null, \"Critical smart contract bug reports must come with a PoC in order to be considered for a reward. Other severity levels may require a PoC during the bug validation process. \"), mdx(\"p\", null, \"Critical smart contract vulnerabilities are paid at 10% of economic damage, primarily based on funds at risk. The team may, at its discretion, take into consideration other aspects such as PR and branding effects. However, there is a minimum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 50 000\"), \".\"), mdx(\"p\", null, \"High smart contract vulnerability rewards are further restricted to be 100% of the funds affected within this severity level. However, the minimum reward is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 10 000\"), \". For vulnerabilities involving a temporary lock-up, the reward is further increased by \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 5 000\"), \", until the cap, for every additional 5 minutes, based on the minimum 5 minute requirement to be qualified as in-scope. \"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Keep3r Network\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ETH\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. </p><p>Critical smart contract bug reports must come with a PoC in order to be considered for a reward. Other severity levels may require a PoC during the bug validation process. </p><p>Critical smart contract vulnerabilities are paid at 10% of economic damage, primarily based on funds at risk. The team may, at its discretion, take into consideration other aspects such as PR and branding effects. However, there is a minimum reward of <strong>USD 50 000</strong>.</p><p>High smart contract vulnerability rewards are further restricted to be 100% of the funds affected within this severity level. However, the minimum reward is <strong>USD 10 000</strong>. For vulnerabilities involving a temporary lock-up, the reward is further increased by <strong>USD 5 000</strong>, until the cap, for every additional 5 minutes, based on the minimum 5 minute requirement to be qualified as in-scope. </p><p>Payouts are handled by the <strong>Keep3r Network</strong> team directly and are denominated in USD. However, payouts are done in <strong>ETH</strong>.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\")), mdx(\"p\", null, \"The following activities are \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"prohibited\"), \" by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li></ul><p>The following activities are <strong>prohibited</strong> by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of Keep3r Network can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/keep3r-network\"\n  }, \"https://github.com/keep3r-network\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. The following folders are the most relevant:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/keep3r-network/ff\"\n  }, \"https://github.com/keep3r-network/ff\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/keep3r-network/OptionsLM\"\n  }, \"https://github.com/keep3r-network/OptionsLM\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/keep3r-network/keep3r.network\"\n  }, \"https://github.com/keep3r-network/keep3r.network\"))));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of Keep3r Network can be found at <a href=\"https://github.com/keep3r-network\">https://github.com/keep3r-network</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. The following folders are the most relevant:</p><ul><li><a href=\"https://github.com/keep3r-network/ff\">https://github.com/keep3r-network/ff</a></li><li><a href=\"https://github.com/keep3r-network/OptionsLM\">https://github.com/keep3r-network/OptionsLM</a></li><li><a href=\"https://github.com/keep3r-network/keep3r.network\">https://github.com/keep3r-network/keep3r.network</a></li></ul>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

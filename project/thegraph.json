{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "thegraph",
      "slug": "thegraph",
      "project": "The Graph",
      "maxBounty": 2500000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2L62ScwrnMTV5zczetmm3N/9596805cc6742d3f1ff64d1abb9121e3/thegraph-logo.jpg",
      "launchDate": "2021-08-04T00:00-05:00",
      "updatedDate": "2023-02-03T00:11:42.821Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "blockchain_dlt",
          "level": "critical",
          "payout": "Up to USD $2,500,000",
          "pocRequired": false
        },
        {
          "assetType": "blockchain_dlt",
          "level": "high",
          "payout": "Up to USD $200,000",
          "pocRequired": false
        },
        {
          "assetType": "blockchain_dlt",
          "level": "medium",
          "payout": "Up to USD $20,000",
          "pocRequired": false
        },
        {
          "assetType": "blockchain_dlt",
          "level": "low",
          "payout": "Up to USD $5,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to USD $2,500,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "Up to USD $200,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "Up to USD $20,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "Up to USD $5,000",
          "pocRequired": false
        },
        {
          "assetType": "websites_and_applications",
          "level": "critical",
          "payout": "Up to USD $50,000",
          "pocRequired": false
        },
        {
          "assetType": "websites_and_applications",
          "level": "high",
          "payout": "Up to USD $20,000",
          "pocRequired": false
        },
        {
          "assetType": "websites_and_applications",
          "level": "medium",
          "payout": "Up to USD $5,000",
          "pocRequired": false
        },
        {
          "assetType": "websites_and_applications",
          "level": "low",
          "payout": "Up to USD $5,000",
          "pocRequired": false
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "2SpJzvfyGnQG0vz5nnkYBl",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x24CCD4D3Ac8529fF08c58F74ff6755036E616117",
          "description": "Controller (Ethereum mainnet)"
        },
        {
          "id": "3h2Vn980ZOjzxfT9Sx6P54",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xc944E90C64B2c07662A292be6244BDf05Cda44a7",
          "description": "raphToken (Ethereum mainnet)"
        },
        {
          "id": "5gLkelR6TObj31ZQFi31i8",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x64F990Bf16552A693dCB043BB7bf3866c5E05DdB",
          "description": "EpochManager (Ethereum mainnet)"
        },
        {
          "id": "3xVDqnIQejWgxycK2qWZqA",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x97307b963662cCA2f7eD50e38dCC555dfFc4FB0b",
          "description": " DisputeManager (Ethereum mainnet)"
        },
        {
          "id": "40XNNGG46Cl3wz7fgnBdeh",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xF55041E37E12cD407ad00CE2910B8269B01263b9",
          "description": "Staking (Ethereum mainnet)"
        },
        {
          "id": "1UeQCfgbMwFgC0qvNzZc4c",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x8FE00a685Bcb3B2cc296ff6FfEaB10acA4CE1538",
          "description": "Curation (Ethereum mainnet)"
        },
        {
          "id": "3Xr3c6YBiUvXBVIbpp8dmv",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x9Ac758AB77733b4150A901ebd659cbF8cB93ED66",
          "description": "RewardsManager (Ethereum mainnet)"
        },
        {
          "id": "1QGv8O40gcEWVVPwQ1Lbl7",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xaD0C9DaCf1e515615b0581c8D7E295E296Ec26E6",
          "description": "ServiceRegistry (Ethereum mainnet)"
        },
        {
          "id": "7K8GpyQuMxwZx0Pje3Rpw0",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xaDcA0dd4729c8BA3aCf3E99F3A9f471EF37b6825",
          "description": "GNS (Ethereum mainnet)"
        },
        {
          "id": "6BbaiSjkWJ5Xc1cuJMRfVz",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xFCf78AC094288D7200cfdB367A8CD07108dFa128",
          "description": "GraphTokenLockManager (Token Distribution https://github.com/graphprotocol/token-distribution) (Ethereum mainnet)"
        },
        {
          "id": "2kI8QpwBkO5koXEhAhtxOC",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xbE5e630383b5BAEcF0Db7b15C50d410edD5A2255",
          "description": "GraphTokenLockWallet (Token Distribution https://github.com/graphprotocol/token-distribution)(Ethereum mainnet)"
        },
        {
          "id": "TCI8OwgYGWODd0GWYb0zj",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x36aFF7001294daE4C2ED4fDEfC478a00De77F090",
          "description": "BridgeEscrow (Ethereum Mainnet)"
        },
        {
          "id": "2CLYsRuul7WAnXdUlO3Z84",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x01cDC91B0A9bA741903aA3699BF4CE31d6C5cC06",
          "description": "L1GraphTokenGateway (Ethereum Mainnet)"
        },
        {
          "id": "70eyxOtJHxzV7sD5KVOFbg",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x2983936aC20202a6555993448E0d5654AC8Ca5fd",
          "description": "GraphProxyAdmin (Arbitrum)"
        },
        {
          "id": "5Fo41mwmj4ez6Nl34mTnfO",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xA489FDc65229D6225014C0b357BCD19af6f00eE9",
          "description": "BancorFormula (Arbitrum)"
        },
        {
          "id": "3MgHkL7aSiyfEq7uifFGTB",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x0a8491544221dd212964fbb96487467291b2C97e",
          "description": "Controller (Arbitrum)"
        },
        {
          "id": "4gY54OAFHixHqUIi40GWnN",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x5A843145c43d328B9bB7a4401d94918f131bB281",
          "description": "EpochManager (Arbitrum)"
        },
        {
          "id": "2MWcKOsWrcwWNF9q1MWsto",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x9623063377AD1B27544C965cCd7342f7EA7e88C7",
          "description": " L2GraphToken (Arbitrum)"
        },
        {
          "id": "6pka5T0ntCqmevnBBT0rOb",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x47a0d56ea574419B524285d52fFe7198297D209c",
          "description": "GraphCurationToken (Arbitrum)"
        },
        {
          "id": "2QnTmqhnUEZlU2ag69Q97k",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x072884c745c0A23144753335776c99BE22588f8A",
          "description": "ServiceRegistry (Arbitrum)"
        },
        {
          "id": "7pkC6YnhhxFp6ECnQJkw8Z",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x22d78fb4bc72e191C765807f8891B5e1785C8014",
          "description": "Curation (Arbitrum)"
        },
        {
          "id": "73qBVvhrXtlVkBZeFbxnjE",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x96cce9b6489744630A058324FB22e7CD02815ebe",
          "description": "SubgraphNFTDescriptor (Arbitrum)"
        },
        {
          "id": "3jryk5bR3W6AUC2lVdQ0YL",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x3FbD54f0cc17b7aE649008dEEA12ed7D2622B23f",
          "description": "SubgraphNFT (Arbitrum)"
        },
        {
          "id": "6HYrBQgR3guQkuxI1Mx5bX",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xec9A7fb6CbC2E41926127929c2dcE6e9c5D33Bec",
          "description": "GNS (Arbitrum)"
        },
        {
          "id": "5t40xhwMrfGENYekiSfnyr",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x00669A4CF01450B64E8A2A20E9b1FCB71E61eF03",
          "description": "Staking (Arbitrum)"
        },
        {
          "id": "ubZJazVOv9dofOIyROx3G",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x971B9d3d0Ae3ECa029CAB5eA1fB0F72c85e6a525",
          "description": "RewardsManager (Arbitrum)"
        },
        {
          "id": "31xfglnwXsWx8dSWUSgY8g",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x0Ab2B043138352413Bb02e67E626a70320E3BD46",
          "description": "DisputeManager (Arbitrum)"
        },
        {
          "id": "3w1fZwRWwSLnDWlIu7zY5R",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x993F00C98D1678371a7b261Ed0E0D4b6F42d9aEE",
          "description": "AllocationExchange (Arbitrum)"
        },
        {
          "id": "326304VPmkvOF4jEvZyK4b",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x65E1a5e8946e7E87d9774f5288f41c30a99fD302",
          "description": "L2GraphTokenGateway (Arbitrum)"
        },
        {
          "id": "3Pfgy8u0XV9ryZ6dNrKtNQ",
          "type": "blockchain_dlt",
          "url": "https://github.com/graphprotocol/graph-node",
          "description": "Graph Node (Indexer Software Stack)"
        },
        {
          "id": "3nPvlMrO3N1TUbXOpYGO8B",
          "type": "blockchain_dlt",
          "url": "https://github.com/graphprotocol/agora",
          "description": "Agora (Indexer Software Stack)"
        },
        {
          "id": "ckYoktz4dKRSARQTGKN7N",
          "type": "blockchain_dlt",
          "url": "https://github.com/graphprotocol/indexer",
          "description": "Indexer (Indexer Software Stack)"
        },
        {
          "id": "4LO8wZQvQ9sDAmeHEPeBkQ",
          "type": "blockchain_dlt",
          "url": "https://github.com/graphprotocol/AllocationOpt.jl",
          "description": "Indexer Allocation Optimizer"
        },
        {
          "id": "63CpS1DDwfehS9qBB0soEd",
          "type": "blockchain_dlt",
          "url": "https://github.com/graphprotocol/block-oracle",
          "description": "Epoch Block Oracle"
        },
        {
          "id": "4tiD7esgkp2ztskwRhfVhX",
          "type": "blockchain_dlt",
          "url": "https://github.com/graphprotocol/block-oracle/tree/main/packages/subgraph",
          "description": "Epoch Block Oracle (Subgraph)"
        },
        {
          "id": "7BOnDJKoyeg3e7zsqsHo2l",
          "type": "websites_and_applications",
          "url": "https://thegraph.com/explorer",
          "description": "Explorer"
        },
        {
          "id": "3zqCzPIDd5va2IeiPkRYwt",
          "type": "websites_and_applications",
          "url": "https://thegraph.com/studio/",
          "description": "Studio"
        },
        {
          "id": "5W1IjGHV12gaL6WMTjh4l8",
          "type": "websites_and_applications",
          "url": "https://gateway.network.thegraph.com/",
          "description": "The Graph Gateway"
        }
      ],
      "impacts": [
        {
          "id": "063H8oSDWqq4gyOJPKXAB",
          "title": "A bug that could cause significant (>$1M) funds being lost (not including slashing)",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "3UWmyrfH39YRUJCrXJg6qM",
          "title": "A bug that could cause significant (>$1M) funds being lost (not including slashing)",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "316N8ghAVYua0jOWIqoo3d",
          "title": "A bug that could cause significant (>$1M) funds being lost (not including slashing)",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6Cfwpfi3MiEgMe1WL11O1g",
          "title": "Halt application functionality for majority of users",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "7zzMWd0eC4kOnZbEwLS7jx",
          "title": "A bug in the default Indexer software that could result in private information being stolen",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "1jaVXjUjxKMFbLEzCe5IJ0",
          "title": "A bug that could cause network disruption at Indexer and Gateway level, taking at least 50% of both Gateways and Indexer nodes down",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "1khvfo0xl0E7mMjNOwsiO8",
          "title": "A bug that could lead to non-deterministic syncing of subgraph data (graph node only)",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "2z0kyf7ljiWdxLmRWOzno3",
          "title": "Private information being stolen",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "1JJMdp6xDAtYQcvZP5j1Nd",
          "title": "A bug that could allow impersonating other users, leading to negative impact to network participants through loss of funds",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "18B8PNOKKN7SdEoHhSUFbs",
          "title": "A bug that could cause incorrect payouts of query fees or indexing rewards",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "4T0hpWtEATxjX81hwHtqp4",
          "title": "An economic attack that could result in Indexers, Curators or Delegators losing a significant amount of funds or being exploited",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "6XUixNLLGGJ9SVLM90v1O4",
          "title": "A bug that could cause network participants to be impersonated and unwanted actions being taken (eg. funds being transferred)",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "78Aj87Hmj2sUPPu9RH1XrK",
          "title": "A bug that could cause incorrect payouts of query fees or indexing rewards",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "2rBqyAKtSQCF6PAokEdw5k",
          "title": "An economic attack that could result in Indexers, Curators or Delegators losing a significant amount of funds or being exploited",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "3Va3zezmKtFYOCutA7IzxR",
          "title": "A bug that could cause network participants to be impersonated and unwanted actions being taken (eg. funds being transferred)",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "26c8jrDJ1bG1HcllQ4EkHl",
          "title": "A bug that could halt or delay an Indexer’s ability to process a query or receive payments",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "62usb3RcGSB5B6H8g0SZti",
          "title": "A bug in the default Indexer software that could result in a “halt\" or an impact on liveness",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "VVHDE8dRIlKUnhf2gYd5v",
          "title": "A griefing attack on the services provided or network participants",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "1OZPuIu5UBh7I3bGXr90jj",
          "title": "A bug in a smart contract that could result in a “halt\" or an impact on liveness",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "DnXtpV2HkWpUuQaI2vfra",
          "title": "A bug that could cause the service (Studio or The Graph’s decentralized network) functionality, throughput, or utility to be degraded but not disabled for other network participants",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "qbWBAm9PBgFMVNlSSW5rP",
          "title": "A bug that allows remote code execution resulting in private information being stolen",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "C5FvfoCAjOkpMXN47DBa7",
          "title": "A bug whereby an attacker does not pay sufficient GRT fees for the load they exert on the network",
          "type": "blockchain_dlt",
          "severity": "low"
        },
        {
          "id": "01V700wiCJSdtY5WG7C3s",
          "title": "A vulnerability that could cause inaccurate query data to be served",
          "type": "blockchain_dlt",
          "severity": "low"
        },
        {
          "id": "4TH3ZyZN5fmsKWDyWItb0P",
          "title": "A vulnerability that could cause two or more Indexers to provide different results for the same query when the approved code is run",
          "type": "blockchain_dlt",
          "severity": "low"
        },
        {
          "id": "p75PVb8er8vs9U8I09sQH",
          "title": "A bug that could cause the service functionality, throughput, or utility to be degraded but not disabled",
          "type": "blockchain_dlt",
          "severity": "low"
        }
      ],
      "programOverview": "The Graph is an indexing protocol for querying networks like Ethereum and IPFS. It is a decentralized network comprised of multiple stakeholders incentivized to build and offer an efficient and reliable open data marketplace, through GraphQL-based APIs.\n\nThe Graph learns what and how to index Blockchain data based on subgraph descriptions, known as the subgraph manifest. The subgraph description defines the smart contracts of interest for a subgraph, the events in those contracts to pay attention to, and how to map data to data that The Graph will index and store in its decentralized network, to be served by Indexers. Indexers are network participants responsible for running their own infrastructure capable of indexing subgraphs and subsequently serve such data.\n\nThe network is fully permissionless, meaning that every stakeholder can design, implement and deploy subgraphs, with Indexers choosing which subgraphs to index based on a number of factors such as Curators’ interest (signaling high-quality ones which may result in high query volume). Delegators are another key network participant in this open data economy, who delegate their stake towards Indexers, receiving, in turn, a portion of both network rewards and fees from subsequently served queries. Like Delegators, Curators also receive a portion of the query fees, when staking their own GRT in a subgraph’s bounding curve (signaling).\n\nFor more information about The Graph, please visit their website at [https://thegraph.com/](https://thegraph.com/). \n\nThe bug bounty program, managed and funded by The Graph Foundation, is focused on the prevention of negative impacts to the whole ecosystem, such as:\n\n  - Loss of User Funds\n  - Exposure of private information (keys, PII)\n  - Determinism bugs that could lead to incorrect or inconsistent query results by Indexers in the network\n  - Vulnerabilities in the Indexer software (eg. Graph Node, Indexer CLI) that could result in the Indexer being slashed or not running effectively\n  - Vulnerabilities that could degrade the indexing or querying service\n  - Bugs that could facilitate Sybil attacks\n\nBug bounty hunters submit bug reports at their own risk of being rejected as a known issue. \n",
      "prioritizedVulnerabilities": "__Rules and Requirements__\n\nAll bounty hunters must abide by rules when reporting bugs to be eligible for rewards. We appreciate your cooperation.\n\n__Report Responsibly__\n\nReport vulnerabilities to The Graph first by submitting a bug report on Immunefi, to mitigate attacks and in the best interest of the network’s safety. Give reasonable time for The Graph to fix the bug before sharing publicly.\n\n__Don't Exploit Reported Bugs__\n\nDo not exploit bugs in the code to gain an advantage or conduct malicious activity in the network. No hacking or social engineering of other network users.\n\n__Don’t Violate Privacy__\n\nDo not violate the privacy of network users, other bounty hunters, or The Graph.\n\n__Don’t Attack or Defraud The Graph__\n\nDo not attack The Graph team, operations, or technology (eg. DDOS attack, spam, social engineering) or defraud The Graph team or network users.\n\n__Please also note reporting requirements:__\n\n  - Bugs will only be rewarded once for successful reporting and confirmation of fix to the first person to report the bug.\n\n  - Vulnerabilities must be reproducible by The Graph team (please include all relevant links, docs, and code)\n\n  - Single vulnerabilities can be submitted per report, multiple submissions for the same vulnerability will not be counted. In case the same vulnerability and/or exploit applies to different assets in scope, these must be mentioned in a single report.\n\n  - Bounty hunters can submit multiple bug reports\n\n  - Public disclosure of the vulnerability prior to resolution may cancel a pending reward. We reserve the right to disqualify individuals from the program for disrespectful or disruptive behavior.\n\n  - The Graph and affiliates will not negotiate in response to duress or threats (e.g., we will not negotiate the payout amount under threat of withholding the vulnerability or threat of releasing the vulnerability or any exposed data to the public).",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from the consequence of exploitation to privilege required to the likelihood of a successful exploit. \n\nRewards for critical vulnerabilities are capped at 10% of economic damage, primarily focusing on the possible loss of funds for Indexers, Delegators, and Curators at Smart Contract level only, but also taking into consideration other aspects such as branding and PR, at the discretion of The Graph Foundation.\n\nFinal reward amounts for High, Medium, and Low, for web/app assets will be decided by The Graph Foundation based on factors such as economic impact, likelihood of being exploited, and thoroughness of the bug report. Though this bug bounty program takes into consideration the severity classification system, the primary baseline before further consideration is the Impacts in Scope table, though that itself isn’t the final determinant. The Graph Foundation may also reward more than the maximum published amount at its discretion.\n\nIn order to qualify for a reward, bug bounty hunters will need to provide KYC through [https://register.thegraph.com](https://register.thegraph.com) and share the following information:\n  - E-mail address;\n  - Name;\n  - Wallet address the GRT should be sent to. This address must correspond the same listed in the report. \nAdditionally, all bug reports must come with log components, reproduction, and data about vulnerabilities to support learnings and bug fixes. This can be satisfied by providing relevant screenshots, docs, code, and steps to reproduce the issue.\n\nPayouts are handled by __The Graph Foundation__ and are denominated in USD. All payouts are done in __GRT__, following the GRT price at transaction time.\n",
      "outOfScopeAndRules": "There are several known potential exploits on Ethereum and The Graph infrastructure. Bounty hunters will not be rewarded for reporting these:\n\n  - Frontrunning, including backrunning and sandwich attacks\n  - Known issues previously reported in security audits are out of scope. All protocol audits can be found here: [https://www.notion.so/thegraphfoundation/External-Protocol-Audits-95b73b22af3341b6933d74465f5f7059 ](https://www.notion.so/thegraphfoundation/External-Protocol-Audits-95b73b22af3341b6933d74465f5f7059)\n    - Specifically related to OpenZeppelin’s “The Graph Protocol Audit” (August 31, 2020), C01 and C02 have already been addressed by the core dev team. More on C02 can be found here: [https://forum.thegraph.com/t/openzeppelin-protocol-audit-prysm-groups-c02-economic-attack-resolution-summary/3280?u=pedro](https://forum.thegraph.com/t/openzeppelin-protocol-audit-prysm-groups-c02-economic-attack-resolution-summary/3280?u=pedro)\n  - Natural network activity like curation whose involved mechanisms could result in unprofitable actions for the particular stakeholder\n\nAdditionally, all of the following vulnerabilities and bug report types are not considered as in-scope in this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks that rely on social engineering\n  - Attacks requiring access to leaked keys/credentials\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nRules and Requirements\nAll bounty hunters must abide by rules when reporting bugs to be eligible for rewards. We appreciate your cooperation.\n\nReport Responsibly\n\nReport vulnerabilities to The Graph first by submitting a bug report on Immunefi, to mitigate attacks and in the best interest of the network’s safety. Give reasonable time for The Graph to fix the bug before sharing publicly.\n\nDon't Exploit Reported Bugs\n\nDo not exploit bugs in the code to gain an advantage or conduct malicious activity in the network. No hacking or social engineering of other network users.\n\nDon’t Violate Privacy\n\nDo not violate the privacy of network users, other bounty hunters, or The Graph.\n\nDon’t Attack or Defraud The Graph\n\nDo not attack The Graph team, operations, or technology (eg. DDOS attack, spam, social engineering) or defraud The Graph team or network users.\n\nPlease also note reporting requirements:\n\n  - Bugs will only be rewarded once for successful reporting and confirmation of fix to the first person to report the bug.\n  - Vulnerabilities must be reproducible by The Graph team (please include all relevant links, docs, and code)\n  - Single vulnerabilities can be submitted per form, multiple submissions for the same vulnerability will not be counted\n  - Bounty hunters can submit multiple bug reports\n  - Public disclosure of the vulnerability prior to resolution may cancel a pending reward. We reserve the right to disqualify individuals from the program for disrespectful or disruptive behavior.\n  - The Graph and affiliates will not negotiate in response to duress or threats (e.g., we will not negotiate the payout amount under threat of withholding the vulnerability or threat of releasing the vulnerability or any exposed data to the public).\n",
      "assetsBodyV2": "__Note on Smart Contracts:__\nThe Graph protocol is in the process of migrating to Arbitrum, as the preferred L2. For this reason, there are Smart Contracts deployed in multiple chains. Not all are equal, so bug bounty hunters are encouraged to check the code on both chains. Once fully migrated, this bug bounty program will be updated too, removing unnecessary ones.\n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Staking"
        ],
        "projectType": [
          "Blockchain",
          "Infrastructure"
        ],
        "ecosystem": [
          "ETH",
          "Polygon",
          "Avalanche",
          "Fantom",
          "Fuse"
        ],
        "programType": [
          "Blockchain/DLT",
          "Smart Contract",
          "Websites and Applications"
        ],
        "language": [
          "Solidity",
          "Rust"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Websites and Applications",
          "Blockchain/DLT"
        ],
        "blockchain_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $2,500,000"
          },
          {
            "level": "High",
            "payout": "Up to USD $200,000"
          },
          {
            "level": "Medium",
            "payout": "Up to USD $20,000"
          },
          {
            "level": "Low",
            "payout": "Up to USD $5,000"
          }
        ],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $2,500,000"
          },
          {
            "level": "High",
            "payout": "Up to USD $200,000"
          },
          {
            "level": "Medium",
            "payout": "Up to USD $20,000"
          },
          {
            "level": "Low",
            "payout": "Up to USD $5,000"
          }
        ],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $50,000"
          },
          {
            "level": "High",
            "payout": "Up to USD $20,000"
          },
          {
            "level": "Medium",
            "payout": "Up to USD $5,000"
          },
          {
            "level": "Low",
            "payout": "Up to USD $5,000"
          }
        ]
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The Graph is an indexing protocol for querying networks like Ethereum and IPFS. It is a decentralized network comprised of multiple stakeholders incentivized to build and offer an efficient and reliable open data marketplace, through GraphQL-based APIs.\"), mdx(\"p\", null, \"The Graph learns what and how to index Blockchain data based on subgraph descriptions, known as the subgraph manifest. The subgraph description defines the smart contracts of interest for a subgraph, the events in those contracts to pay attention to, and how to map data to data that The Graph will index and store in its decentralized network, to be served by Indexers. Indexers are network participants responsible for running their own infrastructure capable of indexing subgraphs and subsequently serve such data.\"), mdx(\"p\", null, \"The network is fully permissionless, meaning that every stakeholder can design, implement and deploy subgraphs, with Indexers choosing which subgraphs to index based on a number of factors such as Curators\\u2019 interest (signaling high-quality ones which may result in high query volume). Delegators are another key network participant in this open data economy, who delegate their stake towards Indexers, receiving, in turn, a portion of both network rewards and fees from subsequently served queries. Like Delegators, Curators also receive a portion of the query fees, when staking their own GRT in a subgraph\\u2019s bounding curve (signaling).\"), mdx(\"p\", null, \"For more information about The Graph, please visit their website at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://thegraph.com/\"\n  }, \"https://thegraph.com/\"), \". \"), mdx(\"p\", null, \"The bug bounty program, managed and funded by The Graph Foundation, is focused on the prevention of negative impacts to the whole ecosystem, such as:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of User Funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Exposure of private information (keys, PII)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Determinism bugs that could lead to incorrect or inconsistent query results by Indexers in the network\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities in the Indexer software (eg. Graph Node, Indexer CLI) that could result in the Indexer being slashed or not running effectively\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities that could degrade the indexing or querying service\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bugs that could facilitate Sybil attacks\")), mdx(\"p\", null, \"Bug bounty hunters submit bug reports at their own risk of being rejected as a known issue. \"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The Graph is an indexing protocol for querying networks like Ethereum and IPFS. It is a decentralized network comprised of multiple stakeholders incentivized to build and offer an efficient and reliable open data marketplace, through GraphQL-based APIs.</p><p>The Graph learns what and how to index Blockchain data based on subgraph descriptions, known as the subgraph manifest. The subgraph description defines the smart contracts of interest for a subgraph, the events in those contracts to pay attention to, and how to map data to data that The Graph will index and store in its decentralized network, to be served by Indexers. Indexers are network participants responsible for running their own infrastructure capable of indexing subgraphs and subsequently serve such data.</p><p>The network is fully permissionless, meaning that every stakeholder can design, implement and deploy subgraphs, with Indexers choosing which subgraphs to index based on a number of factors such as Curators’ interest (signaling high-quality ones which may result in high query volume). Delegators are another key network participant in this open data economy, who delegate their stake towards Indexers, receiving, in turn, a portion of both network rewards and fees from subsequently served queries. Like Delegators, Curators also receive a portion of the query fees, when staking their own GRT in a subgraph’s bounding curve (signaling).</p><p>For more information about The Graph, please visit their website at <a href=\"https://thegraph.com/\">https://thegraph.com/</a>. </p><p>The bug bounty program, managed and funded by The Graph Foundation, is focused on the prevention of negative impacts to the whole ecosystem, such as:</p><ul><li>Loss of User Funds</li><li>Exposure of private information (keys, PII)</li><li>Determinism bugs that could lead to incorrect or inconsistent query results by Indexers in the network</li><li>Vulnerabilities in the Indexer software (eg. Graph Node, Indexer CLI) that could result in the Indexer being slashed or not running effectively</li><li>Vulnerabilities that could degrade the indexing or querying service</li><li>Bugs that could facilitate Sybil attacks</li></ul><p>Bug bounty hunters submit bug reports at their own risk of being rejected as a known issue. </p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Rules and Requirements\")), mdx(\"p\", null, \"All bounty hunters must abide by rules when reporting bugs to be eligible for rewards. We appreciate your cooperation.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Report Responsibly\")), mdx(\"p\", null, \"Report vulnerabilities to The Graph first by submitting a bug report on Immunefi, to mitigate attacks and in the best interest of the network\\u2019s safety. Give reasonable time for The Graph to fix the bug before sharing publicly.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Don't Exploit Reported Bugs\")), mdx(\"p\", null, \"Do not exploit bugs in the code to gain an advantage or conduct malicious activity in the network. No hacking or social engineering of other network users.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Don\\u2019t Violate Privacy\")), mdx(\"p\", null, \"Do not violate the privacy of network users, other bounty hunters, or The Graph.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Don\\u2019t Attack or Defraud The Graph\")), mdx(\"p\", null, \"Do not attack The Graph team, operations, or technology (eg. DDOS attack, spam, social engineering) or defraud The Graph team or network users.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Please also note reporting requirements:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Bugs will only be rewarded once for successful reporting and confirmation of fix to the first person to report the bug.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Vulnerabilities must be reproducible by The Graph team (please include all relevant links, docs, and code)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Single vulnerabilities can be submitted per report, multiple submissions for the same vulnerability will not be counted. In case the same vulnerability and/or exploit applies to different assets in scope, these must be mentioned in a single report.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Bounty hunters can submit multiple bug reports\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Public disclosure of the vulnerability prior to resolution may cancel a pending reward. We reserve the right to disqualify individuals from the program for disrespectful or disruptive behavior.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The Graph and affiliates will not negotiate in response to duress or threats (e.g., we will not negotiate the payout amount under threat of withholding the vulnerability or threat of releasing the vulnerability or any exposed data to the public).\"))));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p><strong>Rules and Requirements</strong></p><p>All bounty hunters must abide by rules when reporting bugs to be eligible for rewards. We appreciate your cooperation.</p><p><strong>Report Responsibly</strong></p><p>Report vulnerabilities to The Graph first by submitting a bug report on Immunefi, to mitigate attacks and in the best interest of the network’s safety. Give reasonable time for The Graph to fix the bug before sharing publicly.</p><p><strong>Don&#x27;t Exploit Reported Bugs</strong></p><p>Do not exploit bugs in the code to gain an advantage or conduct malicious activity in the network. No hacking or social engineering of other network users.</p><p><strong>Don’t Violate Privacy</strong></p><p>Do not violate the privacy of network users, other bounty hunters, or The Graph.</p><p><strong>Don’t Attack or Defraud The Graph</strong></p><p>Do not attack The Graph team, operations, or technology (eg. DDOS attack, spam, social engineering) or defraud The Graph team or network users.</p><p><strong>Please also note reporting requirements:</strong></p><ul><li><p>Bugs will only be rewarded once for successful reporting and confirmation of fix to the first person to report the bug.</p></li><li><p>Vulnerabilities must be reproducible by The Graph team (please include all relevant links, docs, and code)</p></li><li><p>Single vulnerabilities can be submitted per report, multiple submissions for the same vulnerability will not be counted. In case the same vulnerability and/or exploit applies to different assets in scope, these must be mentioned in a single report.</p></li><li><p>Bounty hunters can submit multiple bug reports</p></li><li><p>Public disclosure of the vulnerability prior to resolution may cancel a pending reward. We reserve the right to disqualify individuals from the program for disrespectful or disruptive behavior.</p></li><li><p>The Graph and affiliates will not negotiate in response to duress or threats (e.g., we will not negotiate the payout amount under threat of withholding the vulnerability or threat of releasing the vulnerability or any exposed data to the public).</p></li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from the consequence of exploitation to privilege required to the likelihood of a successful exploit. \"), mdx(\"p\", null, \"Rewards for critical vulnerabilities are capped at 10% of economic damage, primarily focusing on the possible loss of funds for Indexers, Delegators, and Curators at Smart Contract level only, but also taking into consideration other aspects such as branding and PR, at the discretion of The Graph Foundation.\"), mdx(\"p\", null, \"Final reward amounts for High, Medium, and Low, for web/app assets will be decided by The Graph Foundation based on factors such as economic impact, likelihood of being exploited, and thoroughness of the bug report. Though this bug bounty program takes into consideration the severity classification system, the primary baseline before further consideration is the Impacts in Scope table, though that itself isn\\u2019t the final determinant. The Graph Foundation may also reward more than the maximum published amount at its discretion.\"), mdx(\"p\", null, \"In order to qualify for a reward, bug bounty hunters will need to provide KYC through \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://register.thegraph.com\"\n  }, \"https://register.thegraph.com\"), \" and share the following information:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"E-mail address;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Name;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wallet address the GRT should be sent to. This address must correspond the same listed in the report.\\nAdditionally, all bug reports must come with log components, reproduction, and data about vulnerabilities to support learnings and bug fixes. This can be satisfied by providing relevant screenshots, docs, code, and steps to reproduce the issue.\")), mdx(\"p\", null, \"Payouts are handled by \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"The Graph Foundation\"), \" and are denominated in USD. All payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"GRT\"), \", following the GRT price at transaction time.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from the consequence of exploitation to privilege required to the likelihood of a successful exploit. </p><p>Rewards for critical vulnerabilities are capped at 10% of economic damage, primarily focusing on the possible loss of funds for Indexers, Delegators, and Curators at Smart Contract level only, but also taking into consideration other aspects such as branding and PR, at the discretion of The Graph Foundation.</p><p>Final reward amounts for High, Medium, and Low, for web/app assets will be decided by The Graph Foundation based on factors such as economic impact, likelihood of being exploited, and thoroughness of the bug report. Though this bug bounty program takes into consideration the severity classification system, the primary baseline before further consideration is the Impacts in Scope table, though that itself isn’t the final determinant. The Graph Foundation may also reward more than the maximum published amount at its discretion.</p><p>In order to qualify for a reward, bug bounty hunters will need to provide KYC through <a href=\"https://register.thegraph.com\">https://register.thegraph.com</a> and share the following information:</p><ul><li>E-mail address;</li><li>Name;</li><li>Wallet address the GRT should be sent to. This address must correspond the same listed in the report.\nAdditionally, all bug reports must come with log components, reproduction, and data about vulnerabilities to support learnings and bug fixes. This can be satisfied by providing relevant screenshots, docs, code, and steps to reproduce the issue.</li></ul><p>Payouts are handled by <strong>The Graph Foundation</strong> and are denominated in USD. All payouts are done in <strong>GRT</strong>, following the GRT price at transaction time.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"There are several known potential exploits on Ethereum and The Graph infrastructure. Bounty hunters will not be rewarded for reporting these:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Frontrunning, including backrunning and sandwich attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Known issues previously reported in security audits are out of scope. All protocol audits can be found here: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.notion.so/thegraphfoundation/External-Protocol-Audits-95b73b22af3341b6933d74465f5f7059\"\n  }, \"https://www.notion.so/thegraphfoundation/External-Protocol-Audits-95b73b22af3341b6933d74465f5f7059 \"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Specifically related to OpenZeppelin\\u2019s \\u201CThe Graph Protocol Audit\\u201D (August 31, 2020), C01 and C02 have already been addressed by the core dev team. More on C02 can be found here: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://forum.thegraph.com/t/openzeppelin-protocol-audit-prysm-groups-c02-economic-attack-resolution-summary/3280?u=pedro\"\n  }, \"https://forum.thegraph.com/t/openzeppelin-protocol-audit-prysm-groups-c02-economic-attack-resolution-summary/3280?u=pedro\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Natural network activity like curation whose involved mechanisms could result in unprofitable actions for the particular stakeholder\")), mdx(\"p\", null, \"Additionally, all of the following vulnerabilities and bug report types are not considered as in-scope in this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that rely on social engineering\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\")), mdx(\"p\", null, \"Rules and Requirements\\nAll bounty hunters must abide by rules when reporting bugs to be eligible for rewards. We appreciate your cooperation.\"), mdx(\"p\", null, \"Report Responsibly\"), mdx(\"p\", null, \"Report vulnerabilities to The Graph first by submitting a bug report on Immunefi, to mitigate attacks and in the best interest of the network\\u2019s safety. Give reasonable time for The Graph to fix the bug before sharing publicly.\"), mdx(\"p\", null, \"Don't Exploit Reported Bugs\"), mdx(\"p\", null, \"Do not exploit bugs in the code to gain an advantage or conduct malicious activity in the network. No hacking or social engineering of other network users.\"), mdx(\"p\", null, \"Don\\u2019t Violate Privacy\"), mdx(\"p\", null, \"Do not violate the privacy of network users, other bounty hunters, or The Graph.\"), mdx(\"p\", null, \"Don\\u2019t Attack or Defraud The Graph\"), mdx(\"p\", null, \"Do not attack The Graph team, operations, or technology (eg. DDOS attack, spam, social engineering) or defraud The Graph team or network users.\"), mdx(\"p\", null, \"Please also note reporting requirements:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bugs will only be rewarded once for successful reporting and confirmation of fix to the first person to report the bug.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities must be reproducible by The Graph team (please include all relevant links, docs, and code)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Single vulnerabilities can be submitted per form, multiple submissions for the same vulnerability will not be counted\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bounty hunters can submit multiple bug reports\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of the vulnerability prior to resolution may cancel a pending reward. We reserve the right to disqualify individuals from the program for disrespectful or disruptive behavior.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The Graph and affiliates will not negotiate in response to duress or threats (e.g., we will not negotiate the payout amount under threat of withholding the vulnerability or threat of releasing the vulnerability or any exposed data to the public).\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>There are several known potential exploits on Ethereum and The Graph infrastructure. Bounty hunters will not be rewarded for reporting these:</p><ul><li>Frontrunning, including backrunning and sandwich attacks</li><li>Known issues previously reported in security audits are out of scope. All protocol audits can be found here: <a href=\"https://www.notion.so/thegraphfoundation/External-Protocol-Audits-95b73b22af3341b6933d74465f5f7059\">https://www.notion.so/thegraphfoundation/External-Protocol-Audits-95b73b22af3341b6933d74465f5f7059 </a><ul><li>Specifically related to OpenZeppelin’s “The Graph Protocol Audit” (August 31, 2020), C01 and C02 have already been addressed by the core dev team. More on C02 can be found here: <a href=\"https://forum.thegraph.com/t/openzeppelin-protocol-audit-prysm-groups-c02-economic-attack-resolution-summary/3280?u=pedro\">https://forum.thegraph.com/t/openzeppelin-protocol-audit-prysm-groups-c02-economic-attack-resolution-summary/3280?u=pedro</a></li></ul></li><li>Natural network activity like curation whose involved mechanisms could result in unprofitable actions for the particular stakeholder</li></ul><p>Additionally, all of the following vulnerabilities and bug report types are not considered as in-scope in this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks that rely on social engineering</li><li>Attacks requiring access to leaked keys/credentials</li><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li></ul><p>Rules and Requirements\nAll bounty hunters must abide by rules when reporting bugs to be eligible for rewards. We appreciate your cooperation.</p><p>Report Responsibly</p><p>Report vulnerabilities to The Graph first by submitting a bug report on Immunefi, to mitigate attacks and in the best interest of the network’s safety. Give reasonable time for The Graph to fix the bug before sharing publicly.</p><p>Don&#x27;t Exploit Reported Bugs</p><p>Do not exploit bugs in the code to gain an advantage or conduct malicious activity in the network. No hacking or social engineering of other network users.</p><p>Don’t Violate Privacy</p><p>Do not violate the privacy of network users, other bounty hunters, or The Graph.</p><p>Don’t Attack or Defraud The Graph</p><p>Do not attack The Graph team, operations, or technology (eg. DDOS attack, spam, social engineering) or defraud The Graph team or network users.</p><p>Please also note reporting requirements:</p><ul><li>Bugs will only be rewarded once for successful reporting and confirmation of fix to the first person to report the bug.</li><li>Vulnerabilities must be reproducible by The Graph team (please include all relevant links, docs, and code)</li><li>Single vulnerabilities can be submitted per form, multiple submissions for the same vulnerability will not be counted</li><li>Bounty hunters can submit multiple bug reports</li><li>Public disclosure of the vulnerability prior to resolution may cancel a pending reward. We reserve the right to disqualify individuals from the program for disrespectful or disruptive behavior.</li><li>The Graph and affiliates will not negotiate in response to duress or threats (e.g., we will not negotiate the payout amount under threat of withholding the vulnerability or threat of releasing the vulnerability or any exposed data to the public).</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note on Smart Contracts:\"), \"\\nThe Graph protocol is in the process of migrating to Arbitrum, as the preferred L2. For this reason, there are Smart Contracts deployed in multiple chains. Not all are equal, so bug bounty hunters are encouraged to check the code on both chains. Once fully migrated, this bug bounty program will be updated too, removing unnecessary ones.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p><strong>Note on Smart Contracts:</strong>\nThe Graph protocol is in the process of migrating to Arbitrum, as the preferred L2. For this reason, there are Smart Contracts deployed in multiple chains. Not all are equal, so bug bounty hunters are encouraged to check the code on both chains. Once fully migrated, this bug bounty program will be updated too, removing unnecessary ones.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

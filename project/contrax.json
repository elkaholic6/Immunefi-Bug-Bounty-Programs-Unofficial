{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "contrax",
      "slug": "contrax",
      "project": "Contrax",
      "maxBounty": 1000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7GJ7NOHnMcCcVWeL6ebxAd/05c266c2f7853e2edd4579b452d68c15/logo-4x.7d0ac1c06f514c22c543.png",
      "launchDate": "2023-02-16T15:00-05:00",
      "updatedDate": "2023-02-20T15:55:17.848Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $1,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "3IHKiTnvLYMBUmW4kJToKu",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x5A06beea8573C59AFe9a15A3f01D6B4505b89339",
          "description": "VaultDodoUsdc"
        },
        {
          "id": "53Th2077TL4rMhL0Qy1Ldk",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x6Ad388fB85f30511cE05FF69D9eC7dDf99eE1CAb",
          "description": "VaultDodoUsdt"
        },
        {
          "id": "JAyRoDCM8sKl6FL7ezQ4J",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xAE24d2C3bb42Dab0cC54478Bb7868f54b7a91DF9",
          "description": "VaultGmx"
        },
        {
          "id": "3M88IDq6hkqIFFCWbKUSBk",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xF73e52e7185dDE30eC58336bc186f392354bF784",
          "description": "VaultSushiWethDai"
        },
        {
          "id": "85i59k4mdyXK8YeiHBMYf",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x8C55e9D918B2315Eb3192C2bAFf07C2e9cf55E01",
          "description": "VaultSushiWethUsdc"
        },
        {
          "id": "VdxFZikWpKWCR117rq1Jg",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xa7bff08cADebFc239Aa6A127064Af4a05EA61Fcb",
          "description": "VaultSushiWethUsdt"
        },
        {
          "id": "4OC6wyFNGpo1UZhNgwNhI1",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x3043e7675c956EAfcDF006458b296F1fe8B0CA7C",
          "description": "VaultSushiWethWbtc"
        },
        {
          "id": "5BqAv0CGYAdZuap9LKpGEj",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xACD067eC75f5aA7F4ff778A8De0A1252A1852543",
          "description": "VaultStargateFrax"
        },
        {
          "id": "233Maubyuamfe4VVRy3pl5",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x0F6aB743b9E4c42B4b5d392074f174AEc3848704",
          "description": "VaultPlutusPlsWeth"
        },
        {
          "id": "6qURbivLmz9j7zpB0bMRV0",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x94ABa02242443a5F4629B42bA0fE3a6BFc1B7186",
          "description": "StrategyDodoUsdc"
        },
        {
          "id": "5ssNNSWrWGmLENLryhuR9j",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x7d7cE568060495f6727b001E13Eb97bEFf653Ef6",
          "description": "StrategyDodoUsdt"
        },
        {
          "id": "4NP1DTKhFXXXxnt4VcSnxv",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x50871E2474DB8E65944c7BA1D899C7b4626F9A04",
          "description": "StrategyGmx"
        },
        {
          "id": "4R5BfzbdvsY4lZf0MObgyd",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xebe26D802a7366a90CC65198E720Bb2B38e6aa00",
          "description": "StrategySushiWethDai"
        },
        {
          "id": "36ETvtBbv3pNgQEZWFv4cv",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x64c3B8F7e55b42Ae4a2EEe7AF9cD9fb1779eB47b",
          "description": "StrategySushiWethWbtc"
        },
        {
          "id": "6tWPVruA9E6Dijz6r6hHTy",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x4645056EfeDdC63573d80CE64D5e524D27D87650",
          "description": "StrategySushiWethUsdt"
        },
        {
          "id": "2L1ha3uYA8BGjmtGhPDiPt",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x29Dbbb1C7dC2eEBC95Fd5a31F6aDe652d0acEa91",
          "description": "StrategySushiWethUsdc"
        },
        {
          "id": "mQ9YoROlxIY75tJBaI9f9",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x56BCf1f13be3415509DB13daB9883a755743712C",
          "description": "StrategyStargateFrax"
        },
        {
          "id": "3q1igr4qxGK95mBS8aBqYS",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x84980DfBd06e0A9598Cad9c72393e5FdA7CaFA90",
          "description": "StrategyPlutusPlsWeth"
        },
        {
          "id": "2LjTX39vbyRW9NuBwqouX7",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xD80cbc596607fFA9C60aBCe4BD2e333427aD89f4",
          "description": "PlutusController"
        },
        {
          "id": "2dwcJRNf6yCA1mK71Yy0Ak",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x6322bf7c9ed6563DBe9f73bbE2085d6cd19371e7",
          "description": "GMXController"
        },
        {
          "id": "2hJtrlrTaERJMga95DQ2Pj",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xcDd30a0C87093abb1f489C400A86336Aa9321780",
          "description": "DodoController"
        },
        {
          "id": "78yAETs8nLXVTP4wXbscbD",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xd7bc9a6Ee68e125169E96024Ef983Fee76520569",
          "description": "SushiController"
        }
      ],
      "impacts": [
        {
          "id": "6qOeOoXViqE9HmIdYySaax",
          "title": "Direct theft of any user funds, whether at-rest or in-motion",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5JmqSs9u2zRQh9UgDzioR9",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4LEdcKND0bRK4QsmiGRMd8",
          "title": "Protocol insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "YnWYleqNyOLem04yCaWM9",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        }
      ],
      "programOverview": "Contrax is a Decentralized Finance (DeFi) web application that allows users to farm real yield assets, and have them compound automatically. Users can also create tokens and pools in just a few clicks. Our goal is to lower the barrier of entry to DeFi by ensuring an easy onboarding experience, and only listing farms with projects that earn real revenue instead of relying on token inflation.\n\nFor more information about Contrax, please visit [https://contrax.finance/ ](https://contrax.finance/) ",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the  [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. \n\nAll bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. Bug reports are required to include a runnable PoC in order to prove impact. Exceptions may be made in cases where the vulnerability is objectively evident from simply mentioning the vulnerability and where it exists. However, the bug reporter may be required to provide a PoC at any point in time.\n\nPayouts are handled by the __Contrax__ team directly and are denominated in USD. However, payouts are done in __USDC__.\n",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Attacks that are the same exploit over multiple contracts would be considered as one exploit\n\n__Smart Contracts and Blockchain__\n\n- Incorrect data supplied by third party oracles\n   - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n- Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n- Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- Any vulnerability which leads to assets transferred between Contrax deployed smart contacts (example: hacker finds a way to call earn and harvest early. This technically leads to funds moving, but it is within our intended flow)\n",
      "assetsBodyV2": "All smart contracts of Contrax can be found at [https://github.com/Contrax-co/contrax-smart-contracts](https://github.com/Contrax-co/contrax-smart-contracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "L2",
          "Staking",
          "Yield Aggregator"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "Arbitrum"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": null
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Contrax is a Decentralized Finance (DeFi) web application that allows users to farm real yield assets, and have them compound automatically. Users can also create tokens and pools in just a few clicks. Our goal is to lower the barrier of entry to DeFi by ensuring an easy onboarding experience, and only listing farms with projects that earn real revenue instead of relying on token inflation.\"), mdx(\"p\", null, \"For more information about Contrax, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://contrax.finance/\"\n  }, \"https://contrax.finance/ \"), \" \"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Contrax is a Decentralized Finance (DeFi) web application that allows users to farm real yield assets, and have them compound automatically. Users can also create tokens and pools in just a few clicks. Our goal is to lower the barrier of entry to DeFi by ensuring an easy onboarding experience, and only listing farms with projects that earn real revenue instead of relying on token inflation.</p><p>For more information about Contrax, please visit <a href=\"https://contrax.finance/\">https://contrax.finance/ </a> </p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the  \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. \"), mdx(\"p\", null, \"All bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. Bug reports are required to include a runnable PoC in order to prove impact. Exceptions may be made in cases where the vulnerability is objectively evident from simply mentioning the vulnerability and where it exists. However, the bug reporter may be required to provide a PoC at any point in time.\"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Contrax\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the  <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. </p><p>All bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. Bug reports are required to include a runnable PoC in order to prove impact. Exceptions may be made in cases where the vulnerability is objectively evident from simply mentioning the vulnerability and where it exists. However, the bug reporter may be required to provide a PoC at any point in time.</p><p>Payouts are handled by the <strong>Contrax</strong> team directly and are denominated in USD. However, payouts are done in <strong>USDC</strong>.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that are the same exploit over multiple contracts would be considered as one exploit\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any vulnerability which leads to assets transferred between Contrax deployed smart contacts (example: hacker finds a way to call earn and harvest early. This technically leads to funds moving, but it is within our intended flow)\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li><li>Attacks that are the same exploit over multiple contracts would be considered as one exploit</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li><li>Any vulnerability which leads to assets transferred between Contrax deployed smart contacts (example: hacker finds a way to call earn and harvest early. This technically leads to funds moving, but it is within our intended flow)</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of Contrax can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/Contrax-co/contrax-smart-contracts\"\n  }, \"https://github.com/Contrax-co/contrax-smart-contracts\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of Contrax can be found at <a href=\"https://github.com/Contrax-co/contrax-smart-contracts\">https://github.com/Contrax-co/contrax-smart-contracts</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

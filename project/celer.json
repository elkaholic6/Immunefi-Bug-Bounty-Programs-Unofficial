{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "celer",
      "slug": "celer",
      "project": "Celer",
      "maxBounty": 2000000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/13hITYqQMxBrQvjeOzbRhl/b7ca8569a07d3a2212aeac6a92244110/Celer_Logo.jpeg",
      "launchDate": "2021-11-18T07:00-06:00",
      "updatedDate": "2022-10-13T13:58:40.673Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to USD $2,000,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $100,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "critical",
          "payout": "USD $15,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "high",
          "payout": "USD $7,500",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "3DB2VNokJdoSvqjtqkZsjW",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x8a4B4C2aCAdeAa7206Df96F00052e41d74a015CE",
          "description": "Staking",
          "isPrimacyOfImpact": null
        },
        {
          "id": "1WA46DjZCBg08oipFYff7z",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xCb4A7569a61300C50Cf80A2be16329AD9F5F8F9e",
          "description": "State Guardian Network",
          "isPrimacyOfImpact": null
        },
        {
          "id": "5nLnG0Wx6MgDCq5xLUoJhV",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xb01fd7Bc0B3c433e313bf92daC09FF3942212b42",
          "description": "Staking Rewards",
          "isPrimacyOfImpact": null
        },
        {
          "id": "1FkEsqjxk3UXJkuAmbw1xB",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x61f85fF2a2f4289Be4bb9B72Fc7010B3142B5f41",
          "description": "Farming Rewards",
          "isPrimacyOfImpact": null
        },
        {
          "id": "7kVBqaSzXfT2Fr2721zVJK",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xea129aE043C4cB73DcB241AAA074F9E667641BA0",
          "description": "Governance",
          "isPrimacyOfImpact": null
        },
        {
          "id": "6Em3UGxNMH7msTocU4U0io",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x5803457E3074E727FA7F9aED60454bf2F127853b",
          "description": "Viewer",
          "isPrimacyOfImpact": null
        },
        {
          "id": "3qVHMCLQ3kr9uxHLc7h9vR",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x5427FEFA711Eff984124bFBB1AB6fbf5E3DA1820",
          "description": "Ethereum 1",
          "isPrimacyOfImpact": null
        },
        {
          "id": "7z5WgQ8LkqlvhzGq47chjb",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0xdd90E5E87A2081Dcf0391920868eBc2FFB81a1aF",
          "description": "BSC 56",
          "isPrimacyOfImpact": null
        },
        {
          "id": "2I8Th5kRW3Aji1xHLOBDYF",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x1619DE6B6B20eD217a58d00f37B9d47C7663feca",
          "description": "Arbitrum 42161",
          "isPrimacyOfImpact": null
        },
        {
          "id": "49dwRd3KKAdTk9tFuJaS3P",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x88DCDC47D2f83a99CF0000FDF667A468bB958a78",
          "description": "Polygon 137",
          "isPrimacyOfImpact": null
        },
        {
          "id": "48uRR3EmgF0CGhuewkW8yA",
          "type": "smart_contract",
          "url": "https://snowtrace.io/address/0xef3c714c9425a8F3697A9C969Dc1af30ba82e5d4",
          "description": "Avalanche 43114",
          "isPrimacyOfImpact": null
        },
        {
          "id": "A8VjXof5GKVo6oRMiRmNr",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x374B8a9f3eC5eB2D97ECA84Ea27aCa45aa1C57EF",
          "description": "Fantom 250",
          "isPrimacyOfImpact": null
        },
        {
          "id": "4AGOrJMPjVEOdZwlqDIxt7",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x9D39Fc627A6d9d9F8C831c16995b209548cc3401",
          "description": "Optimism 10",
          "isPrimacyOfImpact": null
        },
        {
          "id": "4vD18pnJNacsndqZa79Kf8",
          "type": "smart_contract",
          "url": "https://blockexplorer.boba.network/address/0x841ce48F9446C8E281D3F1444cB859b4A6D0738C",
          "description": "Boba 288",
          "isPrimacyOfImpact": null
        },
        {
          "id": "2LRNFMtY79rnvqbBQGziLv",
          "type": "websites_and_applications",
          "url": "https://cbridge.celer.network/#/transfer",
          "description": "cBridge Web App",
          "isPrimacyOfImpact": null
        }
      ],
      "impacts": [
        {
          "id": "22vjQuscMmbeKjGvbrkFVu",
          "title": "Thefts and permanent freezing of any funds in liquidity pool smart contract or staking contracts",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1OfLgqOTyUMAnFixOhbSMq",
          "title": "The only web vulnerabilities in scope are those which lead directly and unequivocally to loss of user funds, a direct breach of data, and the deletion of site data",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "7KyhoLcJNbGhHiLtEZWNm2",
          "title": "Thefts and permanent freezing of unclaimed yield rewards",
          "type": "smart_contract",
          "severity": "critical"
        }
      ],
      "programOverview": "Celer cBridge is a multi-chain interoperability system that provides the best-in-class cross-chain token bridging experience with deep liquidity for users, highly efficient and easy-to-use liquidity management for both cBridge node operators and Liquidity Providers who do not want to operate cBridge nodes, and developer-oriented features such as general message bridging for cases like cross-chain DEX and NFTs. All of the above is made possible by the Celer State Guardian Network (SGN), a tendermint PoS blockchain that acts as a messaging fabric interconnecting different blockchains. State Guardian Network acts as a sidechain on Ethereum with staking and governance functionality rooted in Ethereum. $CELR validators and delegators are rewarded in the system via block reward and part of the transaction fee generated by cBridge. \n\nFor more information about cBridge architecture, please visit \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Thefts and permanent freezing of any funds in liquidity pool smart contract or staking contracts\n  - Thefts and permanent freezing of unclaimed yield rewards\n  - The only web vulnerabilities in scope are those which lead directly and unequivocally to loss of user funds, a direct breach of data, and the deletion of site data\n",
      "prioritizedVulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nThere are some modifications from the above Severity Classification for this bug bounty program:\n\nCritical Level Security - Modified: \n  - Empty or permanent freeze the contract's holdings (e.g. economic attacks, flash loans, reentrancy, MEV, logic errors, integer over-/under-flow)\n\nMedium Level Security - Excluded: \n  - Griefing denial of service (i.e. attacker spends as much in gas as damage to the contract)\n  - Gas griefing\n\nAll web/app bug reports must come with a PoC in order to be considered for a reward. All High and Critical Smart Contract bug reports require a PoC and a suggestion for a fix to be eligible for a reward. \nCritical Smart Contract and Blockchain bug reports are further capped at 10% of economic damage up to USD 2,000,000, which primarily takes into consideration the funds at risk but may include branding and PR aspects at the discretion of the team. However, they have a minimum reward of USD 150,000. \n\nThe following vulnerabilities are not eligible for a reward:\n\n  - Previously known vulnerabilities (resolved or not) on the Ethereum network (and any other fork of these).\n  - Previously known vulnerabilities in Tendermint and or/any other fork of these.\n  - Previously known vulnerabilities in cosmos-sdk and or/any other fork of these.\n  - Previously known vulnerable libraries without a working Proof of Concept.\n  - Attacks requiring MITM or physical access to a user's device.\n  - Public Zero-day vulnerabilities that have had an official patch for less than 1 month will be awarded on a case by case basis\n  - Any griefing attacks on the system or smart contract trying to spend gas costs or liquidity lockup to incur gas costs and computational overhead  for the validators and operators of the network.\n  - Liquidity value reduction or arbitraging incurred due to the pricing mechanisms of the system and LP’s own operations. \n  - Attacks involving getting access to privileged admin keys \n  - Delay of cross-chain transfer (fund security not compromised) due to network/rpc error from the blockchain endpoint being used by SGN validators\n  - Security issues related to connected blockchains of cBridge is not in the scope\n  - As to the current implementation, it is possible (with low probability) that a user triggered transaction (e.g., add liquidity, send fund, delegate stake) is not automatically synced to the sgn, or the sgn failed to automatically submit the fund relay transaction to the destination chain (e.g., due to chain rpc endpoint failure). Such cases do not introduce fund security, and can be recovered through manual CLI tools. Related improvements will be included in later releases.\n\nCeler Network requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed is acquired through mutually agreed third-party KYC solutions. The collection of this information will be done by the Celer Network team.\n\nPayouts are handled by the __Celer Network__ team directly and are denominated in USD. However, payouts are done in __ETH__, __CELR__, __or a stablecoin__, with the choice of the ratio at the discretion of the team.\n",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "All smart contracts of Celer Network can be found at [https://github.com/celer-network/sgn-v2-contracts](https://github.com/celer-network/sgn-v2-contracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. For cBridge contracts (multiple instances on different chains), there will not be duplicated counting of bugs. One bug that exists in all contracts will be counted as a single bug. \n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Crosschain Liquidity",
          "L1",
          "Wallet"
        ],
        "projectType": [
          "Blockchain",
          "Defi",
          "NFT"
        ],
        "ecosystem": [
          "Arbitrum",
          "Avalanche",
          "BSC",
          "ETH",
          "Polygon"
        ],
        "programType": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $2,000,000"
          },
          {
            "level": "High",
            "payout": "USD $100,000"
          }
        ],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "USD $15,000"
          },
          {
            "level": "High",
            "payout": "USD $7,500"
          }
        ]
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Celer cBridge is a multi-chain interoperability system that provides the best-in-class cross-chain token bridging experience with deep liquidity for users, highly efficient and easy-to-use liquidity management for both cBridge node operators and Liquidity Providers who do not want to operate cBridge nodes, and developer-oriented features such as general message bridging for cases like cross-chain DEX and NFTs. All of the above is made possible by the Celer State Guardian Network (SGN), a tendermint PoS blockchain that acts as a messaging fabric interconnecting different blockchains. State Guardian Network acts as a sidechain on Ethereum with staking and governance functionality rooted in Ethereum. $CELR validators and delegators are rewarded in the system via block reward and part of the transaction fee generated by cBridge. \"), mdx(\"p\", null, \"For more information about cBridge architecture, please visit \"), mdx(\"p\", null, \"This bug bounty program is focused on their smart contracts and app and is focused on preventing:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Thefts and permanent freezing of any funds in liquidity pool smart contract or staking contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Thefts and permanent freezing of unclaimed yield rewards\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The only web vulnerabilities in scope are those which lead directly and unequivocally to loss of user funds, a direct breach of data, and the deletion of site data\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Celer cBridge is a multi-chain interoperability system that provides the best-in-class cross-chain token bridging experience with deep liquidity for users, highly efficient and easy-to-use liquidity management for both cBridge node operators and Liquidity Providers who do not want to operate cBridge nodes, and developer-oriented features such as general message bridging for cases like cross-chain DEX and NFTs. All of the above is made possible by the Celer State Guardian Network (SGN), a tendermint PoS blockchain that acts as a messaging fabric interconnecting different blockchains. State Guardian Network acts as a sidechain on Ethereum with staking and governance functionality rooted in Ethereum. $CELR validators and delegators are rewarded in the system via block reward and part of the transaction fee generated by cBridge. </p><p>For more information about cBridge architecture, please visit </p><p>This bug bounty program is focused on their smart contracts and app and is focused on preventing:</p><ul><li>Thefts and permanent freezing of any funds in liquidity pool smart contract or staking contracts</li><li>Thefts and permanent freezing of unclaimed yield rewards</li><li>The only web vulnerabilities in scope are those which lead directly and unequivocally to loss of user funds, a direct breach of data, and the deletion of site data</li></ul>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are especially interested in receiving and rewarding vulnerabilities of the following types:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\"), \" \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Re-entrancy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Logic errors\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including user authentication errors\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Solidity/EVM details not considered\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including integer over-/under-flow\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including unhandled exceptions\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusting trust/dependency vulnerabilities\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including composability vulnerabilities\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Oracle failure/manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Novel governance attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Economic/financial attacks\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Consensus failures\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cryptography problems\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Signature malleability\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to replay attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak randomness\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak encryption\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Remote Code Execution\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusting trust/dependency vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vertical Privilege Escalation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"XML External Entities Injection\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SQL Injection\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFI/RFI\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Horizontal Privilege Escalation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Stored XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reflective XSS with impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct object reference\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Internal SSRF\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Session fixation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Insecure Deserialization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DOM XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SSL misconfigurations\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SSL/TLS issues (weak crypto, improper setup)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"URL redirect\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Clickjacking (must be accompanied with PoC)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Misleading Unicode text (e.g. using right to left override characters)\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>We are especially interested in receiving and rewarding vulnerabilities of the following types:</p><p><strong>Smart Contracts and Blockchain</strong> </p><ul><li>Re-entrancy</li><li>Logic errors<ul><li>including user authentication errors</li></ul></li><li>Solidity/EVM details not considered<ul><li>including integer over-/under-flow</li><li>including unhandled exceptions</li></ul></li><li>Trusting trust/dependency vulnerabilities<ul><li>including composability vulnerabilities</li></ul></li><li>Oracle failure/manipulation</li><li>Novel governance attacks</li><li>Economic/financial attacks<ul><li>including flash loan attacks</li></ul></li><li>Consensus failures</li><li>Cryptography problems<ul><li>Signature malleability</li><li>Susceptibility to replay attacks</li><li>Weak randomness</li><li>Weak encryption</li></ul></li></ul><p><strong>Websites and Apps</strong></p><ul><li>Remote Code Execution</li><li>Trusting trust/dependency vulnerabilities</li><li>Vertical Privilege Escalation</li><li>XML External Entities Injection</li><li>SQL Injection</li><li>LFI/RFI</li><li>Horizontal Privilege Escalation</li><li>Stored XSS</li><li>Reflective XSS with impact</li><li>CSRF with impact</li><li>Direct object reference</li><li>Internal SSRF</li><li>Session fixation</li><li>Insecure Deserialization</li><li>DOM XSS</li><li>SSL misconfigurations</li><li>SSL/TLS issues (weak crypto, improper setup)</li><li>URL redirect</li><li>Clickjacking (must be accompanied with PoC)</li><li>Misleading Unicode text (e.g. using right to left override characters)</li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \"), mdx(\"p\", null, \"There are some modifications from the above Severity Classification for this bug bounty program:\"), mdx(\"p\", null, \"Critical Level Security - Modified: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Empty or permanent freeze the contract's holdings (e.g. economic attacks, flash loans, reentrancy, MEV, logic errors, integer over-/under-flow)\")), mdx(\"p\", null, \"Medium Level Security - Excluded: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Griefing denial of service (i.e. attacker spends as much in gas as damage to the contract)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Gas griefing\")), mdx(\"p\", null, \"All web/app bug reports must come with a PoC in order to be considered for a reward. All High and Critical Smart Contract bug reports require a PoC and a suggestion for a fix to be eligible for a reward.\\nCritical Smart Contract and Blockchain bug reports are further capped at 10% of economic damage up to USD 2,000,000, which primarily takes into consideration the funds at risk but may include branding and PR aspects at the discretion of the team. However, they have a minimum reward of USD 150,000. \"), mdx(\"p\", null, \"The following vulnerabilities are not eligible for a reward:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Previously known vulnerabilities (resolved or not) on the Ethereum network (and any other fork of these).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Previously known vulnerabilities in Tendermint and or/any other fork of these.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Previously known vulnerabilities in cosmos-sdk and or/any other fork of these.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Previously known vulnerable libraries without a working Proof of Concept.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring MITM or physical access to a user's device.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public Zero-day vulnerabilities that have had an official patch for less than 1 month will be awarded on a case by case basis\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any griefing attacks on the system or smart contract trying to spend gas costs or liquidity lockup to incur gas costs and computational overhead  for the validators and operators of the network.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Liquidity value reduction or arbitraging incurred due to the pricing mechanisms of the system and LP\\u2019s own operations. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks involving getting access to privileged admin keys \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Delay of cross-chain transfer (fund security not compromised) due to network/rpc error from the blockchain endpoint being used by SGN validators\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Security issues related to connected blockchains of cBridge is not in the scope\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"As to the current implementation, it is possible (with low probability) that a user triggered transaction (e.g., add liquidity, send fund, delegate stake) is not automatically synced to the sgn, or the sgn failed to automatically submit the fund relay transaction to the destination chain (e.g., due to chain rpc endpoint failure). Such cases do not introduce fund security, and can be recovered through manual CLI tools. Related improvements will be included in later releases.\")), mdx(\"p\", null, \"Celer Network requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed is acquired through mutually agreed third-party KYC solutions. The collection of this information will be done by the Celer Network team.\"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Celer Network\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ETH\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"CELR\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"or a stablecoin\"), \", with the choice of the ratio at the discretion of the team.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. </p><p>There are some modifications from the above Severity Classification for this bug bounty program:</p><p>Critical Level Security - Modified: </p><ul><li>Empty or permanent freeze the contract&#x27;s holdings (e.g. economic attacks, flash loans, reentrancy, MEV, logic errors, integer over-/under-flow)</li></ul><p>Medium Level Security - Excluded: </p><ul><li>Griefing denial of service (i.e. attacker spends as much in gas as damage to the contract)</li><li>Gas griefing</li></ul><p>All web/app bug reports must come with a PoC in order to be considered for a reward. All High and Critical Smart Contract bug reports require a PoC and a suggestion for a fix to be eligible for a reward.\nCritical Smart Contract and Blockchain bug reports are further capped at 10% of economic damage up to USD 2,000,000, which primarily takes into consideration the funds at risk but may include branding and PR aspects at the discretion of the team. However, they have a minimum reward of USD 150,000. </p><p>The following vulnerabilities are not eligible for a reward:</p><ul><li>Previously known vulnerabilities (resolved or not) on the Ethereum network (and any other fork of these).</li><li>Previously known vulnerabilities in Tendermint and or/any other fork of these.</li><li>Previously known vulnerabilities in cosmos-sdk and or/any other fork of these.</li><li>Previously known vulnerable libraries without a working Proof of Concept.</li><li>Attacks requiring MITM or physical access to a user&#x27;s device.</li><li>Public Zero-day vulnerabilities that have had an official patch for less than 1 month will be awarded on a case by case basis</li><li>Any griefing attacks on the system or smart contract trying to spend gas costs or liquidity lockup to incur gas costs and computational overhead  for the validators and operators of the network.</li><li>Liquidity value reduction or arbitraging incurred due to the pricing mechanisms of the system and LP’s own operations. </li><li>Attacks involving getting access to privileged admin keys </li><li>Delay of cross-chain transfer (fund security not compromised) due to network/rpc error from the blockchain endpoint being used by SGN validators</li><li>Security issues related to connected blockchains of cBridge is not in the scope</li><li>As to the current implementation, it is possible (with low probability) that a user triggered transaction (e.g., add liquidity, send fund, delegate stake) is not automatically synced to the sgn, or the sgn failed to automatically submit the fund relay transaction to the destination chain (e.g., due to chain rpc endpoint failure). Such cases do not introduce fund security, and can be recovered through manual CLI tools. Related improvements will be included in later releases.</li></ul><p>Celer Network requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed is acquired through mutually agreed third-party KYC solutions. The collection of this information will be done by the Celer Network team.</p><p>Payouts are handled by the <strong>Celer Network</strong> team directly and are denominated in USD. However, payouts are done in <strong>ETH</strong>, <strong>CELR</strong>, <strong>or a stablecoin</strong>, with the choice of the ratio at the discretion of the team.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theoretical vulnerabilities without any proof or demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Content spoofing / Text injection issues\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Self-XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Captcha bypass using OCR\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with no security impact (logout CSRF, change language, etc.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as \\u201Chttponly\\u201D)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Server-side information disclosure such as IPs, server names, and most stack traces\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities used to enumerate or confirm the existence of users or tenants\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities requiring unlikely user actions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of SSL/TLS best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DDoS vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring privileged access from within the organization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Feature requests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practices\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li></ul><p><strong>Websites and Apps</strong></p><ul><li>Theoretical vulnerabilities without any proof or demonstration</li><li>Content spoofing / Text injection issues</li><li>Self-XSS</li><li>Captcha bypass using OCR</li><li>CSRF with no security impact (logout CSRF, change language, etc.)</li><li>Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)</li><li>Server-side information disclosure such as IPs, server names, and most stack traces</li><li>Vulnerabilities used to enumerate or confirm the existence of users or tenants</li><li>Vulnerabilities requiring unlikely user actions</li><li>URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)</li><li>Lack of SSL/TLS best practices</li><li>DDoS vulnerabilities</li><li>Attacks requiring privileged access from within the organization</li><li>Feature requests</li><li>Best practices</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of Celer Network can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/celer-network/sgn-v2-contracts\"\n  }, \"https://github.com/celer-network/sgn-v2-contracts\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. For cBridge contracts (multiple instances on different chains), there will not be duplicated counting of bugs. One bug that exists in all contracts will be counted as a single bug. \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of Celer Network can be found at <a href=\"https://github.com/celer-network/sgn-v2-contracts\">https://github.com/celer-network/sgn-v2-contracts</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. For cBridge contracts (multiple instances on different chains), there will not be duplicated counting of bugs. One bug that exists in all contracts will be counted as a single bug. </p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

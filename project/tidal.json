{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "tidal",
      "slug": "tidal",
      "project": "Tidal",
      "maxBounty": 25000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/8W7fFTes98r7bTeodG3k2/41f7abb907cee9c722b38dd49b2dcb75/Tidal.jpeg",
      "launchDate": "2021-07-29T09:00-05:00",
      "updatedDate": "2022-12-21T02:21:32.545Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $25,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $10,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $2,000",
          "pocRequired": false
        },
        {
          "assetType": "websites_and_applications",
          "level": "critical",
          "payout": "USD $12,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "high",
          "payout": "USD $8,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "low",
          "payout": "USD $2,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "51N9D1rLjXFu8Bdit1hl9h",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/AssetManager.sol",
          "description": "AssetManager.sol"
        },
        {
          "id": "2S1M4ZPtEou89q4wMKhKQC",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/Bonus.sol",
          "description": "Bonus.sol"
        },
        {
          "id": "2RloKzZhPCKM0f6JF0JbEO",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/Buyer.sol",
          "description": "Buyer.sol"
        },
        {
          "id": "MdtIwYde8g36qeU2YBfFn",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/CommitteeAlpha.sol",
          "description": "CommitteeAlpha.sol"
        },
        {
          "id": "2ZHhAxsZqdSr3kjWUjPBlj",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/GovernorAlpha.sol",
          "description": "GovernorAlpha.sol"
        },
        {
          "id": "2aE0o44Y9k2xibHgnJ99qR",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/Guarantor.sol",
          "description": "Guarantor.sol"
        },
        {
          "id": "6ZbacpcmrLVkIN2Bx7QVru",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/Migrations.sol",
          "description": "Migrations.sol"
        },
        {
          "id": "6UXw2vQHHCfmv9IOhzVaeb",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/PremiumCalculator.sol",
          "description": "PremiumCalculator.sol"
        },
        {
          "id": "2qh5k9nvfnIytWah8VskmQ",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/interfaces/IRegistry.sol",
          "description": "IRegistry.sol"
        },
        {
          "id": "5xCwNppvrMeEkZb8IoPj4b",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/Seller.sol",
          "description": "Seller.sol"
        },
        {
          "id": "69aaf6EBC1O0tm0juUhasd",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/Staking.sol",
          "description": "Staking.sol"
        },
        {
          "id": "Vk1nUfzMrmRKOUPCh4Drn",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/Timelock.sol",
          "description": "Timelock.sol"
        },
        {
          "id": "JwrV2H7VWSzc1Mz0w3bVU",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/common/BaseRelayRecipient.sol",
          "description": "BaseRelayRecipient.sol"
        },
        {
          "id": "1tQGRnXbi8LzOm1uvAIiNh",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/common/NonReentrancy.sol",
          "description": "NonReentrancy.sol"
        },
        {
          "id": "2VW9ObOl6DFVacVjStMvb1",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/common/WeekManaged.sol",
          "description": "WeekManaged.sol"
        },
        {
          "id": "32lUY74Vr8rqySxuGMTp1V",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/helper/StakingHelper.sol",
          "description": "StakingHelper.sol"
        },
        {
          "id": "1XKlYeZnH7secyKhMNrlGP",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/helper/UpdateHelper.sol",
          "description": "UpdateHelper.sol"
        },
        {
          "id": "Cw2Lk1AVGTv8iFNE9ALKV",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/interfaces/IAssetManager.sol",
          "description": "IAssetManager.sol"
        },
        {
          "id": "JsGzA1KoRGXsTJOumplxK",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/interfaces/IBonus.sol",
          "description": "IBonus.sol"
        },
        {
          "id": "17ohm5XUzbQJaKq6Rljlho",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/interfaces/IBuyer.sol",
          "description": "IBuyer.sol"
        },
        {
          "id": "3LcyH56LHWHp5FO5nl2Am3",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/interfaces/IGuarantor.sol",
          "description": "IGuarantor.sol"
        },
        {
          "id": "v7yTuMR56yWzthxpQsJOo",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/interfaces/IPolicy.sol",
          "description": "IPolicy.sol"
        },
        {
          "id": "2Y00CHg5zo4w26vPsBi7Oa",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/interfaces/IPremiumCalculator.sol",
          "description": "IPremiumCalculator.sol"
        },
        {
          "id": "4QED70fvRSucJHoM5bS2cc",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/interfaces/IRegistry.sol",
          "description": "IRegistry.sol"
        },
        {
          "id": "23dxLHfImHg4LN2q268G6X",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/interfaces/IRelayRecipient.sol",
          "description": "IRelayRecipient.sol"
        },
        {
          "id": "2GNQ3eXzE2aYxnZqyXDYDg",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/interfaces/ISeller.sol",
          "description": "ISeller.sol"
        },
        {
          "id": "4PowQ8dfsFhReoS8HuRGVy",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/interfaces/IStaking.sol",
          "description": "IStaking.sol"
        },
        {
          "id": "3vu9fsYD3JCDH6UB9RO0fc",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/tokens/GovernanceToken.sol",
          "description": "GovernanceToken.sol"
        },
        {
          "id": "4x3aqrBKzIbAYA5E5wOEqq",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/tokens/TidalToken.sol",
          "description": "TidalToken.sol"
        },
        {
          "id": "7rb7Er6HmnRro0dRYHYTa5",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/tokens/TidalTokenChild.sol",
          "description": "TidalTokenChild.sol"
        },
        {
          "id": "CqecVB2W2MHmPBOKDnclI",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/tokens/matic/AccessControlMixin.sol",
          "description": "AccessControlMixin.sol"
        },
        {
          "id": "2YyAJwWPq6yjBLzP3poSOG",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/tokens/matic/ContextMixin.sol",
          "description": "ContextMixin.sol"
        },
        {
          "id": "3BxrYadggKENi7y8u3NW9J",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/tokens/matic/EIP712Base.sol",
          "description": "EIP712Base.sol"
        },
        {
          "id": "j7zeLN1XDRavP2KyPHHJx",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/tokens/matic/IChildToken.sol",
          "description": "IChildToken.sol"
        },
        {
          "id": "1xMiF4ivayeGGb4OGwwLog",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/tokens/matic/Initializable.sol",
          "description": "Initializable.sol"
        },
        {
          "id": "4GeVU3eeiRj9njOTKxdpTR",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/tokens/matic/NativeMetaTransaction.sol",
          "description": "NativeMetaTransaction.sol"
        },
        {
          "id": "Wo5l0Wxlk9kNYDFtlaENC",
          "type": "websites_and_applications",
          "url": "https://tidal-ropsten.vercel.app/",
          "description": null
        },
        {
          "id": "4IDsCFrnOY0ygjyI9KWtJz",
          "type": "smart_contract",
          "url": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/Registry.sol",
          "description": "Registry.sol"
        }
      ],
      "impacts": [
        {
          "id": "WfdwDS2BR4a23jMriq3Lc",
          "title": "Any governance voting result manipulation",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5epAEEzJx0w6KKzjVq7wCv",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1XVFANnIxVeEDGIYGchta6",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4d3uz28FxJ2s56FQhyOKqV",
          "title": "Miner-extractable value (MEV)",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5M6Gdb1BuvvGhumSlgy5mJ",
          "title": "Protocol Insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1zHIVGEvb5174xuI9AWgZ0",
          "title": "Execute arbitrary system commands",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "19edtOuS0W75NHK1CJIueo",
          "title": "Retrieve sensitive data/files from a running server such as /etc/shadow, database passwords, and blockchain keys(this does not include non-sensitive environment variables, open source code, or usernames)",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "1934OZlDXmDBjdRZ2QFolp",
          "title": "Taking down the application/website",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "5BrcFehG5fbM7GZxCMze6m",
          "title": "Taking state-modifying authenticated actions (with or without blockchain state interaction) on behalf of other users without any interaction by that user, such as, changing registration information, commenting, voting, making trades, withdrawals, etc",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "75KJw4mzlcqXtEQLnLrnhd",
          "title": "Subdomain takeover with already-connected wallet interaction",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "4Sp9WfpRdx7BXjPhuI3W7P",
          "title": "Direct theft of user funds",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "4InXPxZCicSPjQIGbwuedk",
          "title": "Malicious interactions with an already-connected wallet such as modifying transaction arguments or parameters, substituting contract addresses, submitting malicious transactions",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "45kJtondPpzQoM81FLdq50",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "4o1sMf06Hg3AF1Xj0DQjmb",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "22pOalNPXsIGtkWZsZv7im",
          "title": "Temporary freezing of funds",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "4xu4RA2NDPTOnWrACWcwVU",
          "title": "Injecting/modifying the static content on the target application without Javascript (Persistent) such as HTML injection without Javascript, replacing existing text with arbitrary text, arbitrary file uploads, etc",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "2ugTmuWXfr5r0Ifmr5BGX4",
          "title": "Changing sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, such as email or password of the victim, etc",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "2lukPl8PodmH2odJg74V86",
          "title": "Improperly disclosing confidential user information such as email address, phone number, physical address, etc",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "353mEhwTlmURFEeTgABDVK",
          "title": "Subdomain takeover without already-connected wallet interaction",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "4KaDrxcifLrbWRZZVErn5D",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5HBNicWHlEvUNSxl6NUB4u",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "wGDhf6p246NbS88PRLLt5",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3Hzzkv8gRjdpgo0zplX82n",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "17GuYkYbfo7yniZELH6ps5",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "1F5NCe4qeB5luNjtR24WFX",
          "title": "Changing non-sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, such as changing the user name, or enabling/disabling notifications",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "4ESlC7qppITdFUCuuuQ5mI",
          "title": "Injecting/modifying the static content on the target application without Javascript (Reflected) such as reflected HTML injection or loading external site data",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "QfUkbp2u6PnX261V1UOSf",
          "title": "Redirecting users to malicious websites (Open Redirect)",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "2bquCna0yv2FLpzjdCmTQV",
          "title": "Contract fails to deliver promised returns, but doesn't lose value",
          "type": "smart_contract",
          "severity": "low"
        },
        {
          "id": "79zXAg7GFelwud5oylYR2I",
          "title": "Changing user details (including modifying browser local storage) without already-connected wallet interaction and with significant user interaction such as iframing leading to modifying the backend/browser state (must demonstrate impact with PoC)",
          "type": "websites_and_applications",
          "severity": "low"
        },
        {
          "id": "3jzxWYL9RgIhrzCNVcaw1D",
          "title": "Any impact involving a publicly released CVE without a working PoC",
          "type": "websites_and_applications",
          "severity": "low"
        },
        {
          "id": "2rysn34quVf0CCPhriXNXR",
          "title": "Taking over broken or expired outgoing links such as social media handles, etc",
          "type": "websites_and_applications",
          "severity": "low"
        },
        {
          "id": "3sFLWd9QR64nxW1G8iXSGy",
          "title": "Temporarily disabling user to access target site, such as locking up the victim from login, cookie bombing, etc",
          "type": "websites_and_applications",
          "severity": "low"
        }
      ],
      "programOverview": "TIDAL is a decentralized discretionary mutual cover protocol that offers the DeFi community the ability to hedge against the failure of any DeFi protocol or asset. By directly leveraging up the reserve to cover multiple protocols at the same time, the enhanced capital efficiency attracts reserve providers while a competitive insurance premium attracts buyers.\nTidal primarily consists of cover (insurance) buyers and reserve providers. Since pure peer-to-peer matching platforms on an individual bases have failed to gain traction in areas related to both lending and insurance, Tidal pools capital from reserve providers to offer covers to buyers. This allows for higher capital efficiency as the same reserve backs more covers than can be individually paid out and also eliminates a peer matching process resulting from double coincidence of wants. \n\nFor more information about Tidal, please visit [https://tidal.finance](https://tidal.finance). \n\nThis bug bounty program covers its smart contracts and apps and is focused on the prevention of the following:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption\n  - Website goes down\n  - Leak of user data\n  - Deletion of user data\n  - Access to sensitive pages without authorization",
      "prioritizedVulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types as long as they result in one of the impacts listed in the Impacts in Scope table:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web and app bugs must come with a PoC in order to be accepted. All web and app bug reports without a PoC will be rejected with a request for a PoC.\n\nPayouts are handled by the __Tidal__ team directly and are denominated in __USD__. Payouts are done in __USDC__ or __USDT__ at the selection of the team.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "Only web/app vulnerabilities that __directly__ affect the web/app assets listed in this table are accepted within the bug bounty program. All others are out-of-scope.\n\nFurther information about Tidal’s smart contracts can be found at [https://github.com/TidalFinance/tidal-contracts](https://github.com/TidalFinance/tidal-contracts). However, only the smart contracts listed in the Assets in Scope table are considered as in-scope.\n",
      "impactsBody": "These accepted impacts are then based on the severity classification system of this bug bounty program. When submitting a bug report, please select the severity level you feel best corresponds to the severity classification system as long as the impact itself is one of the listed items. ",
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Insurance",
          "Lending"
        ],
        "projectType": [
          "Blockchain",
          "Defi"
        ],
        "ecosystem": [
          "ETH",
          "Polkadot"
        ],
        "programType": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $25,000"
          },
          {
            "level": "High",
            "payout": "USD $10,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $2,000"
          }
        ],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "USD $12,000"
          },
          {
            "level": "High",
            "payout": "USD $8,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $2,000"
          }
        ]
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"TIDAL is a decentralized discretionary mutual cover protocol that offers the DeFi community the ability to hedge against the failure of any DeFi protocol or asset. By directly leveraging up the reserve to cover multiple protocols at the same time, the enhanced capital efficiency attracts reserve providers while a competitive insurance premium attracts buyers.\\nTidal primarily consists of cover (insurance) buyers and reserve providers. Since pure peer-to-peer matching platforms on an individual bases have failed to gain traction in areas related to both lending and insurance, Tidal pools capital from reserve providers to offer covers to buyers. This allows for higher capital efficiency as the same reserve backs more covers than can be individually paid out and also eliminates a peer matching process resulting from double coincidence of wants. \"), mdx(\"p\", null, \"For more information about Tidal, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://tidal.finance\"\n  }, \"https://tidal.finance\"), \". \"), mdx(\"p\", null, \"This bug bounty program covers its smart contracts and apps and is focused on the prevention of the following:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Thefts and freezing of principal of any amount\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Thefts and freezing of unclaimed yield of any amount\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of governance funds \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Governance activity disruption\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Website goes down\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Leak of user data\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Deletion of user data\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Access to sensitive pages without authorization\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>TIDAL is a decentralized discretionary mutual cover protocol that offers the DeFi community the ability to hedge against the failure of any DeFi protocol or asset. By directly leveraging up the reserve to cover multiple protocols at the same time, the enhanced capital efficiency attracts reserve providers while a competitive insurance premium attracts buyers.\nTidal primarily consists of cover (insurance) buyers and reserve providers. Since pure peer-to-peer matching platforms on an individual bases have failed to gain traction in areas related to both lending and insurance, Tidal pools capital from reserve providers to offer covers to buyers. This allows for higher capital efficiency as the same reserve backs more covers than can be individually paid out and also eliminates a peer matching process resulting from double coincidence of wants. </p><p>For more information about Tidal, please visit <a href=\"https://tidal.finance\">https://tidal.finance</a>. </p><p>This bug bounty program covers its smart contracts and apps and is focused on the prevention of the following:</p><ul><li>Thefts and freezing of principal of any amount</li><li>Thefts and freezing of unclaimed yield of any amount</li><li>Theft of governance funds </li><li>Governance activity disruption</li><li>Website goes down</li><li>Leak of user data</li><li>Deletion of user data</li><li>Access to sensitive pages without authorization</li></ul>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are especially interested in receiving and rewarding vulnerabilities of the following types as long as they result in one of the impacts listed in the Impacts in Scope table:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\"), \" \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Re-entrancy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Logic errors\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including user authentication errors\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Solidity/EVM details not considered\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including integer over-/under-flow\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including rounding errors\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including unhandled exceptions\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusting trust/dependency vulnerabilities\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including composability vulnerabilities\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Oracle failure/manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Novel governance attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Economic/financial attacks\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Congestion and scalability\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including running out of gas\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including block stuffing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including susceptibility to frontrunning\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Consensus failures\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cryptography problems\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Signature malleability\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to replay attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak randomness\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak encryption\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to block timestamp manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing access controls / unprotected internal or debugging interfaces\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Remote Code Execution\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusting trust/dependency vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vertical Privilege Escalation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"XML External Entities Injection\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SQL Injection\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFI/RFI\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Horizontal Privilege Escalation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Stored XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reflective XSS with impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct object reference\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Internal SSRF\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Session fixation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Insecure Deserialization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DOM XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SSL misconfigurations\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SSL/TLS issues (weak crypto, improper setup)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"URL redirect\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Clickjacking (must be accompanied with PoC)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Misleading Unicode text (e.g. using right to left override characters)\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>We are especially interested in receiving and rewarding vulnerabilities of the following types as long as they result in one of the impacts listed in the Impacts in Scope table:</p><p><strong>Smart Contracts and Blockchain</strong> </p><ul><li>Re-entrancy</li><li>Logic errors<ul><li>including user authentication errors</li></ul></li><li>Solidity/EVM details not considered<ul><li>including integer over-/under-flow</li><li>including rounding errors</li><li>including unhandled exceptions</li></ul></li><li>Trusting trust/dependency vulnerabilities<ul><li>including composability vulnerabilities</li></ul></li><li>Oracle failure/manipulation</li><li>Novel governance attacks</li><li>Economic/financial attacks<ul><li>including flash loan attacks</li></ul></li><li>Congestion and scalability<ul><li>including running out of gas</li><li>including block stuffing</li><li>including susceptibility to frontrunning</li></ul></li><li>Consensus failures</li><li>Cryptography problems<ul><li>Signature malleability</li><li>Susceptibility to replay attacks</li><li>Weak randomness</li><li>Weak encryption</li></ul></li><li>Susceptibility to block timestamp manipulation</li><li>Missing access controls / unprotected internal or debugging interfaces</li></ul><p><strong>Websites and Apps</strong></p><ul><li>Remote Code Execution</li><li>Trusting trust/dependency vulnerabilities</li><li>Vertical Privilege Escalation</li><li>XML External Entities Injection</li><li>SQL Injection</li><li>LFI/RFI</li><li>Horizontal Privilege Escalation</li><li>Stored XSS</li><li>Reflective XSS with impact</li><li>CSRF with impact</li><li>Direct object reference</li><li>Internal SSRF</li><li>Session fixation</li><li>Insecure Deserialization</li><li>DOM XSS</li><li>SSL misconfigurations</li><li>SSL/TLS issues (weak crypto, improper setup)</li><li>URL redirect</li><li>Clickjacking (must be accompanied with PoC)</li><li>Misleading Unicode text (e.g. using right to left override characters)</li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\"), mdx(\"p\", null, \"All web and app bugs must come with a PoC in order to be accepted. All web and app bug reports without a PoC will be rejected with a request for a PoC.\"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Tidal\"), \" team directly and are denominated in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD\"), \". Payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \" or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDT\"), \" at the selection of the team.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.</p><p>All web and app bugs must come with a PoC in order to be accepted. All web and app bug reports without a PoC will be rejected with a request for a PoC.</p><p>Payouts are handled by the <strong>Tidal</strong> team directly and are denominated in <strong>USD</strong>. Payouts are done in <strong>USDC</strong> or <strong>USDT</strong> at the selection of the team.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theoretical vulnerabilities without any proof or demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Content spoofing / Text injection issues\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Self-XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Captcha bypass using OCR\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with no security impact (logout CSRF, change language, etc.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as \\u201Chttponly\\u201D)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Server-side information disclosure such as IPs, server names, and most stack traces\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities used to enumerate or confirm the existence of users or tenants\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities requiring unlikely user actions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of SSL/TLS best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DDoS vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring privileged access from within the organization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Feature requests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practices\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li></ul><p><strong>Websites and Apps</strong></p><ul><li>Theoretical vulnerabilities without any proof or demonstration</li><li>Content spoofing / Text injection issues</li><li>Self-XSS</li><li>Captcha bypass using OCR</li><li>CSRF with no security impact (logout CSRF, change language, etc.)</li><li>Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)</li><li>Server-side information disclosure such as IPs, server names, and most stack traces</li><li>Vulnerabilities used to enumerate or confirm the existence of users or tenants</li><li>Vulnerabilities requiring unlikely user actions</li><li>URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)</li><li>Lack of SSL/TLS best practices</li><li>DDoS vulnerabilities</li><li>Attacks requiring privileged access from within the organization</li><li>Feature requests</li><li>Best practices</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only web/app vulnerabilities that \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"directly\"), \" affect the web/app assets listed in this table are accepted within the bug bounty program. All others are out-of-scope.\"), mdx(\"p\", null, \"Further information about Tidal\\u2019s smart contracts can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/TidalFinance/tidal-contracts\"\n  }, \"https://github.com/TidalFinance/tidal-contracts\"), \". However, only the smart contracts listed in the Assets in Scope table are considered as in-scope.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only web/app vulnerabilities that <strong>directly</strong> affect the web/app assets listed in this table are accepted within the bug bounty program. All others are out-of-scope.</p><p>Further information about Tidal’s smart contracts can be found at <a href=\"https://github.com/TidalFinance/tidal-contracts\">https://github.com/TidalFinance/tidal-contracts</a>. However, only the smart contracts listed in the Assets in Scope table are considered as in-scope.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"These accepted impacts are then based on the severity classification system of this bug bounty program. When submitting a bug report, please select the severity level you feel best corresponds to the severity classification system as long as the impact itself is one of the listed items. \"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>These accepted impacts are then based on the severity classification system of this bug bounty program. When submitting a bug report, please select the severity level you feel best corresponds to the severity classification system as long as the impact itself is one of the listed items. </p>",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "oceanprotocol",
      "slug": "oceanprotocol",
      "project": "Ocean Protocol",
      "maxBounty": 100000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1AGhRIpdj4ITMARnUDPnYC/0e50b0d8fcd3c5654ca842859f0d05e6/Ocean_Protocol_Logo.png",
      "launchDate": "2022-03-31T12:00-06:00",
      "updatedDate": "2023-05-04T16:53:40.990Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to USD $100,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "Up to USD $30,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "Up to USD $5,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "5P8FDtQlMQOfsAPLcPIAe7",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/ERC721Factory.sol",
          "description": "ERC721Factory"
        },
        {
          "id": "1Omq4PxUDukquHUMdodBuR",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/communityFee/OPFCommunityFeeCollector.sol",
          "description": "OPFCommunityFeeCollector"
        },
        {
          "id": "Ks9RG9nu6tfB1ZTyATl3T",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/interfaces/IDispenser.sol",
          "description": "IDispenser"
        },
        {
          "id": "5craeyhs5RstBs5ziy90Xl",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/interfaces/IERC1271.sol",
          "description": "IERC1271"
        },
        {
          "id": "1LKA3Jn87yf6DODu8W4mXV",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/interfaces/IERC20.sol",
          "description": "IERC20"
        },
        {
          "id": "5gjlFCKWBbCD70gfPyp4p6",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/interfaces/IERC20Template.sol",
          "description": "IERC20Template"
        },
        {
          "id": "5ydYzcmm9cxznCq0j8GqZ0",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/interfaces/IERC721Template.sol",
          "description": "IERC721Template"
        },
        {
          "id": "5fqyxTVwjRexlhSCoKKeJ1",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/interfaces/IERC725X.sol",
          "description": "IERC725X"
        },
        {
          "id": "4S7I2RoK76vh0tmKd62IoG",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/interfaces/IERC725Y.sol",
          "description": "IERC725Y"
        },
        {
          "id": "edIoBtuaWtjafLuxZsB0q",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/interfaces/IFactoryRouter.sol",
          "description": "IFactoryRouter"
        },
        {
          "id": "7Kd7kazynV2tBqFLwwluMJ",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/interfaces/IFixedRateExchange.sol",
          "description": "IFixedRateExchange"
        },
        {
          "id": "6AThT9DvnyeyUV3lO9kAbj",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/interfaces/IV3ERC20.sol",
          "description": "IV3ERC20"
        },
        {
          "id": "5x0yWY2ej3lb63maK4OJVS",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/interfaces/IV3Factory.sol",
          "description": "IV3Factory"
        },
        {
          "id": "1WSEf2LPjtPLkat5g9FgNX",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/pools/balancer/BFactory.sol",
          "description": "BFactory"
        },
        {
          "id": "6s4CegvYJm6A1cnzHr7VUj",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/pools/dispenser/Dispenser.sol",
          "description": "Dispenser"
        },
        {
          "id": "4Bm4pmBhD1BHctq8mQHxcd",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/pools/fixedRate/FixedRateExchange.sol",
          "description": "FixedRateExchange"
        },
        {
          "id": "5JdGh8VAA1qzqc1owh639l",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/pools/FactoryRouter.sol",
          "description": "FactoryRouter"
        },
        {
          "id": "4dkbOu6w9jlyQhfrz2TU4x",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/templates/ERC20Template.sol",
          "description": "ERC20Template"
        },
        {
          "id": "66l3EsWJhDi8jGDCJPKUkV",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/templates/ERC20TemplateEnterprise.sol",
          "description": "ERC20TemplateEnterprise"
        },
        {
          "id": "6idyjOs0pO6QuM3UzkQKY0",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/templates/ERC721Template.sol",
          "description": "ERC721Template"
        },
        {
          "id": "6aqcTDmQSGiKXUH6QKRGVh",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/utils/Deployer.sol",
          "description": "Deployer"
        },
        {
          "id": "35YI9m5gqAvEwMYokL2k2X",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/utils/ERC20Roles.sol",
          "description": "ERC20Roles"
        },
        {
          "id": "7zogpW5NxN2V1iBqcaWO7w",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/utils/ERC721RolesAddress.sol",
          "description": "ERC721RolesAddress"
        },
        {
          "id": "1R08vCgudIhJbWGUS0FBZQ",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/utils/Ownable.sol",
          "description": "Ownable"
        },
        {
          "id": "4PrPYRW3UiJP9yNMlj8LsQ",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/utils/SafeERC20.sol",
          "description": "SafeERC20"
        },
        {
          "id": "1kuCwvHKag9Y0Xh8J920dk",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/utils/UtilsLib.sol",
          "description": "UtilsLib"
        },
        {
          "id": "7LC5gs7MmLUan8qF9znNzY",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/utils/ERC721/Address.sol",
          "description": "Address"
        },
        {
          "id": "7vS9olRgBuT4Xt3OuXvnuH",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/utils/ERC721/Context.sol",
          "description": "Context"
        },
        {
          "id": "6RmMhOVS8vtUd1GNIjkoDr",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/utils/ERC721/ERC165.sol",
          "description": "ERC165"
        },
        {
          "id": "2GeXuxAv34gZYMU3G9F09S",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/utils/ERC721/ERC721.sol",
          "description": "ERC721"
        },
        {
          "id": "5FYPeBXaKtNZTFH2zCx6uY",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/utils/ERC721/EnumerableMap.sol",
          "description": "EnumerableMap"
        },
        {
          "id": "7qFBguPtZ3BoXddM2VJ7Ln",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/utils/ERC721/EnumerableSet.sol",
          "description": "EnumerableSet"
        },
        {
          "id": "4ezUC2Z2HlxANkcgqDdgIM",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/utils/ERC721/IERC165.sol",
          "description": "IERC165"
        },
        {
          "id": "7I4CwzjHMggUuXuGLcWCRz",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/utils/ERC721/IERC721.sol",
          "description": "IERC721"
        },
        {
          "id": "iW2ZeAn2UJz8JF9I1eDDR",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/utils/ERC721/IERC721Enumerable.sol",
          "description": "IERC721Enumerable"
        },
        {
          "id": "4ZG4tDtkjjfFB8nDoojRP7",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/utils/ERC721/IERC721Metadata.sol",
          "description": "IERC721Metadata"
        },
        {
          "id": "3GGekS1Rq1VbP0271XicAL",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/utils/ERC721/IERC721Receiver.sol",
          "description": "IERC721Receiver"
        },
        {
          "id": "4VD4tMBCVClFOVmRKEFtst",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/utils/ERC721/Strings.sol",
          "description": "Strings"
        },
        {
          "id": "ja5tWQKUR5EOFtzp1H9f5",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/utils/ERC725/ERC725Ocean.sol",
          "description": "ERC725Ocean"
        },
        {
          "id": "4bATbAwjR1KwCnJyaTPKCb",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/df/DFRewards.sol",
          "description": "Main DataFarming Rewards"
        },
        {
          "id": "3mj8a8xFmrFr2wF6cHEL7b",
          "type": "smart_contract",
          "url": "https://github.com/oceanprotocol/contracts/blob/main/contracts/df/DFStrategyV1.sol",
          "description": "DataFarming Strategy"
        }
      ],
      "impacts": [
        {
          "id": "3GjAYaxME05b0kDojSB14I",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1Mvrj5o6Cw7vJ9AxaakVXz",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6U0hrUebyZ91oqiBeU8CDk",
          "title": "Unauthorized protocol changes",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "7ajZa4ARy8S14Hy1t3jstt",
          "title": "Temporary freezing of funds",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "irAHll2HxZKsq6lVe1u1E",
          "title": "Unauthorized access to Ocean-published datasets",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "1c6DZCIuGK9lLDiMdvWxKm",
          "title": "A bug that could cause incorrect payouts of fee amounts",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6uwpNRwv0oPNBiDBhxZWl1",
          "title": "A bug that could prevent or delay a fee collector’s ability to process or retrieve payments",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "41SRwD8xFaLT26eedDI3vW",
          "title": "An economic attack outside the bounds of natural network activity that could result in >USD 10 000 of being lost that isn’t a known MEV attack.",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "2me3pwQt0oyiaSKEGIfKN",
          "title": "A bug that could result in private information being stolen. This includes private keys, and information in Ocean-created data assets that was meant to remain private.",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "47peAthTVFnfUIMkKp91H6",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "4tkS8qUgnCPBNZ4ySdAzTT",
          "title": "Theft of gas, or unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "i7EBNMzMu5N4GtYDrU0b4",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to users or protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5a6ehlQWGAdGbCFvXprfvy",
          "title": "A role in data NFT or datatoken getting rights that was outside of its design intent",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3znFQCYWLkEi2k9NjFViuq",
          "title": "A bug that could cause the service functionality / utility to be degraded but not disabled",
          "type": "smart_contract",
          "severity": "medium"
        }
      ],
      "programOverview": "Ocean Protocol unlocks the value of data.\n\nData owners and consumers use the Ocean Market app to publish, discover, and consume data in a secure, privacy-preserving fashion. OCEAN holders lock tokens to earn rewards and curate data assets.\n\nDevelopers use Ocean libraries to build their own data wallets, data marketplaces, and more.\n\nOcean datatokens wrap data services as industry-standard ERC721 NFTs and ERC20 tokens. This enables data wallets, data exchanges, and data co-ops by leveraging crypto wallets, exchanges, and other decentralized finance (DeFi) tools.\n\nFor more information about Ocean Protocol, please visit [https://oceanprotocol.com/](https://oceanprotocol.com/).   \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield \n  - Permanent freezing of funds\n  - Unauthorized protocol changes",
      "prioritizedVulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n__Critical__\n  - Bugs that could result in funds being lost \n  - Permanent freezing of funds\n  - Unauthorized protocol changes (e.g. to fees)\n\n__High__\n  - Temporary freezing of funds\n  - A bug that could cause incorrect payouts of fee amounts\n  - A bug that could prevent or delay a fee collector’s ability to process or retrieve payments \n  - Unauthorized access to Ocean-published datasets\n  - A bug that could result in private information being stolen. This includes private keys, and information in Ocean-created data assets that was meant to remain private.\n  - An economic attack outside the bounds of natural network activity (e.g. adding liquidity, swapping datatokens) that could result in >USD 10 000 of being lost that isn’t a known MEV attack.\n\n__Medium__\n  - Smart contract unable to operate due to lack of token funds\n  - Griefing (e.g. no profit motive for an attacker, but damage to users or protocol)\n  - Theft of gas, or unbounded gas consumption\n  - A role in data NFT or datatoken getting rights that was outside of its design intent\n  - A bug that could cause the service functionality / utility to be degraded but not disabled\n",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\n\nAll bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nThe program establishes a maximum reward of __USD 100,000__, but no more than 100% of the economic damage caused within a four-week timeframe for reporting smart contract vulnerabilities. The team will consider the amount of funds affected and the impact on public relations and branding when determining the final reward. However, all valid reports of critical smart contract bugs are guaranteed a minimum reward of __USD 30,000__.\n\nFor this specific bounty program, the Ocean Protocol Foundation is allowing testing on their public testnets.\n\nAll known issues/PRs in the GitHub repositories of Ocean Protocol and the security [audit](https://github.com/oceanprotocol/contracts/blob/main/docs/Ocean_Protocol_Smart_Contract_Security_Audit_Report_Halborn_Final%20(1).pdf) report are considered out of scope.\n\nIn order to qualify for a reward through this Program, it is required that you have no current or prior affiliation as a vendor, contractor, or subcontractor with the Ocean Protocol Foundation.\n\nThe Ocean Protocol Foundation does not require KYC to be done for this program. However, bug bounty hunters submitting a report and wanting a reward will have to provide an invoice submitted via the Request invoicing platform. The invoice needs to include the details below: \n\n  - Email address\n  - Invoice date\n  - Country \n  - Description of bug bounty\n  - Granted amount (OCEAN)\n  - Payment details - crypto-wallet address\n\nPayouts are handled by the __Ocean Protocol__ Foundation team directly and are denominated in USD. However, payouts are done in __OCEAN__.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - All known issues/PRs in the GitHub repositories of Ocean Protocol and the security audit report are considered out of scope.\n  - Issues reported on other branch than main\n  - Public deployments of the above repos. Deployments can be used as helpers, but penetration tests or similar are out of scope. Purpose of the bounty is to test the code in the repo.\n\n__Smart Contracts and Blockchain__\n\n  - Natural network activity (e.g. swapping datatokens or adding liquidity to datatoken pools) whose involved mechanisms could result in unprofitable actions for the particular stakeholder (e.g. slippage, impermanent loss)\n  - Attacks related to multisig governance of addresses that control protocol changes\n  - Frontrunning, backrunning, sandwich attacks, and related known MEV attacks\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "All smart contracts of Ocean Protocol  can be found at [https://github.com/oceanprotocol/contracts/tree/v4main](https://github.com/oceanprotocol/contracts/tree/v4main). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Currency",
          "DEX",
          "Lending",
          "Staking",
          "Wallet"
        ],
        "projectType": [
          "Blockchain",
          "Defi",
          "NFT"
        ],
        "ecosystem": [
          "ETH",
          "Polygon"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "JavaScript",
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $100,000"
          },
          {
            "level": "High",
            "payout": "Up to USD $30,000"
          },
          {
            "level": "Medium",
            "payout": "Up to USD $5,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Ocean Protocol unlocks the value of data.\"), mdx(\"p\", null, \"Data owners and consumers use the Ocean Market app to publish, discover, and consume data in a secure, privacy-preserving fashion. OCEAN holders lock tokens to earn rewards and curate data assets.\"), mdx(\"p\", null, \"Developers use Ocean libraries to build their own data wallets, data marketplaces, and more.\"), mdx(\"p\", null, \"Ocean datatokens wrap data services as industry-standard ERC721 NFTs and ERC20 tokens. This enables data wallets, data exchanges, and data co-ops by leveraging crypto wallets, exchanges, and other decentralized finance (DeFi) tools.\"), mdx(\"p\", null, \"For more information about Ocean Protocol, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://oceanprotocol.com/\"\n  }, \"https://oceanprotocol.com/\"), \".   \"), mdx(\"p\", null, \"This bug bounty program is focused on their smart contracts and is focused on preventing:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unauthorized protocol changes\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Ocean Protocol unlocks the value of data.</p><p>Data owners and consumers use the Ocean Market app to publish, discover, and consume data in a secure, privacy-preserving fashion. OCEAN holders lock tokens to earn rewards and curate data assets.</p><p>Developers use Ocean libraries to build their own data wallets, data marketplaces, and more.</p><p>Ocean datatokens wrap data services as industry-standard ERC721 NFTs and ERC20 tokens. This enables data wallets, data exchanges, and data co-ops by leveraging crypto wallets, exchanges, and other decentralized finance (DeFi) tools.</p><p>For more information about Ocean Protocol, please visit <a href=\"https://oceanprotocol.com/\">https://oceanprotocol.com/</a>.   </p><p>This bug bounty program is focused on their smart contracts and is focused on preventing:</p><ul><li>Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield </li><li>Permanent freezing of funds</li><li>Unauthorized protocol changes</li></ul>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Impacts in Scope\")), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Critical\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bugs that could result in funds being lost \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unauthorized protocol changes (e.g. to fees)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"High\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Temporary freezing of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A bug that could cause incorrect payouts of fee amounts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A bug that could prevent or delay a fee collector\\u2019s ability to process or retrieve payments \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unauthorized access to Ocean-published datasets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A bug that could result in private information being stolen. This includes private keys, and information in Ocean-created data assets that was meant to remain private.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"An economic attack outside the bounds of natural network activity (e.g. adding liquidity, swapping datatokens) that could result in >USD 10 000 of being lost that isn\\u2019t a known MEV attack.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Medium\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract unable to operate due to lack of token funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Griefing (e.g. no profit motive for an attacker, but damage to users or protocol)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of gas, or unbounded gas consumption\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A role in data NFT or datatoken getting rights that was outside of its design intent\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A bug that could cause the service functionality / utility to be degraded but not disabled\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p><strong>Impacts in Scope</strong></p><p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p><p><strong>Smart Contracts</strong></p><p><strong>Critical</strong></p><ul><li>Bugs that could result in funds being lost </li><li>Permanent freezing of funds</li><li>Unauthorized protocol changes (e.g. to fees)</li></ul><p><strong>High</strong></p><ul><li>Temporary freezing of funds</li><li>A bug that could cause incorrect payouts of fee amounts</li><li>A bug that could prevent or delay a fee collector’s ability to process or retrieve payments </li><li>Unauthorized access to Ocean-published datasets</li><li>A bug that could result in private information being stolen. This includes private keys, and information in Ocean-created data assets that was meant to remain private.</li><li>An economic attack outside the bounds of natural network activity (e.g. adding liquidity, swapping datatokens) that could result in &gt;USD 10 000 of being lost that isn’t a known MEV attack.</li></ul><p><strong>Medium</strong></p><ul><li>Smart contract unable to operate due to lack of token funds</li><li>Griefing (e.g. no profit motive for an attacker, but damage to users or protocol)</li><li>Theft of gas, or unbounded gas consumption</li><li>A role in data NFT or datatoken getting rights that was outside of its design intent</li><li>A bug that could cause the service functionality / utility to be degraded but not disabled</li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\"), mdx(\"p\", null, \"All bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\"), mdx(\"p\", null, \"The program establishes a maximum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 100,000\"), \", but no more than 100% of the economic damage caused within a four-week timeframe for reporting smart contract vulnerabilities. The team will consider the amount of funds affected and the impact on public relations and branding when determining the final reward. However, all valid reports of critical smart contract bugs are guaranteed a minimum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 30,000\"), \".\"), mdx(\"p\", null, \"For this specific bounty program, the Ocean Protocol Foundation is allowing testing on their public testnets.\"), mdx(\"p\", null, \"All known issues/PRs in the GitHub repositories of Ocean Protocol and the security \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/oceanprotocol/contracts/blob/main/docs/Ocean_Protocol_Smart_Contract_Security_Audit_Report_Halborn_Final%20(1).pdf\"\n  }, \"audit\"), \" report are considered out of scope.\"), mdx(\"p\", null, \"In order to qualify for a reward through this Program, it is required that you have no current or prior affiliation as a vendor, contractor, or subcontractor with the Ocean Protocol Foundation.\"), mdx(\"p\", null, \"The Ocean Protocol Foundation does not require KYC to be done for this program. However, bug bounty hunters submitting a report and wanting a reward will have to provide an invoice submitted via the Request invoicing platform. The invoice needs to include the details below: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Email address\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Invoice date\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Country \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Description of bug bounty\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Granted amount (OCEAN)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Payment details - crypto-wallet address\")), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Ocean Protocol\"), \" Foundation team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"OCEAN\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.</p><p>All bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.</p><p>The program establishes a maximum reward of <strong>USD 100,000</strong>, but no more than 100% of the economic damage caused within a four-week timeframe for reporting smart contract vulnerabilities. The team will consider the amount of funds affected and the impact on public relations and branding when determining the final reward. However, all valid reports of critical smart contract bugs are guaranteed a minimum reward of <strong>USD 30,000</strong>.</p><p>For this specific bounty program, the Ocean Protocol Foundation is allowing testing on their public testnets.</p><p>All known issues/PRs in the GitHub repositories of Ocean Protocol and the security <a href=\"https://github.com/oceanprotocol/contracts/blob/main/docs/Ocean_Protocol_Smart_Contract_Security_Audit_Report_Halborn_Final%20(1).pdf\">audit</a> report are considered out of scope.</p><p>In order to qualify for a reward through this Program, it is required that you have no current or prior affiliation as a vendor, contractor, or subcontractor with the Ocean Protocol Foundation.</p><p>The Ocean Protocol Foundation does not require KYC to be done for this program. However, bug bounty hunters submitting a report and wanting a reward will have to provide an invoice submitted via the Request invoicing platform. The invoice needs to include the details below: </p><ul><li>Email address</li><li>Invoice date</li><li>Country </li><li>Description of bug bounty</li><li>Granted amount (OCEAN)</li><li>Payment details - crypto-wallet address</li></ul><p>Payouts are handled by the <strong>Ocean Protocol</strong> Foundation team directly and are denominated in USD. However, payouts are done in <strong>OCEAN</strong>.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All known issues/PRs in the GitHub repositories of Ocean Protocol and the security audit report are considered out of scope.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Issues reported on other branch than main\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public deployments of the above repos. Deployments can be used as helpers, but penetration tests or similar are out of scope. Purpose of the bounty is to test the code in the repo.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Natural network activity (e.g. swapping datatokens or adding liquidity to datatoken pools) whose involved mechanisms could result in unprofitable actions for the particular stakeholder (e.g. slippage, impermanent loss)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks related to multisig governance of addresses that control protocol changes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Frontrunning, backrunning, sandwich attacks, and related known MEV attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li><li>All known issues/PRs in the GitHub repositories of Ocean Protocol and the security audit report are considered out of scope.</li><li>Issues reported on other branch than main</li><li>Public deployments of the above repos. Deployments can be used as helpers, but penetration tests or similar are out of scope. Purpose of the bounty is to test the code in the repo.</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Natural network activity (e.g. swapping datatokens or adding liquidity to datatoken pools) whose involved mechanisms could result in unprofitable actions for the particular stakeholder (e.g. slippage, impermanent loss)</li><li>Attacks related to multisig governance of addresses that control protocol changes</li><li>Frontrunning, backrunning, sandwich attacks, and related known MEV attacks</li><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of Ocean Protocol  can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/oceanprotocol/contracts/tree/v4main\"\n  }, \"https://github.com/oceanprotocol/contracts/tree/v4main\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of Ocean Protocol  can be found at <a href=\"https://github.com/oceanprotocol/contracts/tree/v4main\">https://github.com/oceanprotocol/contracts/tree/v4main</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

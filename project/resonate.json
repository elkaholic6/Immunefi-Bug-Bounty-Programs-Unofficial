{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "resonate",
      "slug": "resonate",
      "project": "Resonate",
      "maxBounty": 100000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5JbxF5pqmInr1RHCyct45p/c0143329c411a6c6f3238d29d67de1ed/Resonate_Logo.png",
      "launchDate": "2022-10-20T12:00-06:00",
      "updatedDate": "2023-03-08T16:45:29.073Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $40,000 to USD $100,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $40,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": false
        },
        {
          "assetType": "websites_and_applications",
          "level": "critical",
          "payout": "USD $15,000 to USD $30,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "high",
          "payout": "USD $5,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "4PDg2uMK7TPHi7bdXZ4ixk",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x80CA847618030Bc3e26aD2c444FD007279DaF50A",
          "description": "Resonate"
        },
        {
          "id": "1oSsA13H2YrDhwf7F9WVeF",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xbfacb56e0Ab0dc99E80a95B0412c8DC9C035cD2D",
          "description": "Address Lock Proxy"
        },
        {
          "id": "4kshh0CbIKs9OeeCir5qqm",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x8f74c989252B94Fd2d08a668884D303D57c91422",
          "description": "OutputReceiver Proxy"
        },
        {
          "id": "4LqJOtCPlEOwwtywzqUUKO",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xEbB1185f41A2347Dd77B45e1F5e068f1e84f536a",
          "description": "Resonate Helper (unable to be verified, github link included below)"
        },
        {
          "id": "6LaEd0JCXyUJWnLiVGRN90",
          "type": "smart_contract",
          "url": "https://github.com/Revest-Finance/ResonateContracts/blob/public/hardhat/contracts/ResonateHelper.sol",
          "description": "Resonate Helper (Github)"
        },
        {
          "id": "3cFLywmv5LrQbVNjVe0STT",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xEDb07875051B26b56747e738efB3d7a271d9145e",
          "description": "Sandwich Bot Proxy"
        },
        {
          "id": "LaHTBVRcEtE3e76EVOZuH",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x0F89ba3F140Ea9370aB05d434B8e32fDf41a6093",
          "description": "PriceProvider"
        },
        {
          "id": "1eMzVCp3Oku6tUPtVGpNze",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x492CbB6217D34d68f0abb77a9D9781C8CcbfdFE8",
          "description": "Smart Wallet Checker"
        },
        {
          "id": "72pDtZ25JoMqsVRW373OGF",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x00fD2c29CF3AA4880A4C05e7CA1382bF987B3495",
          "description": "Dev Wallet"
        },
        {
          "id": "1fcpRuA9GsQsRqY8Bdqh0S",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x3Bf38B338c5c45AB8068827f3bF92Cbca951B87F",
          "description": "Metadata Handler"
        },
        {
          "id": "3mh3ejObd2qi3LjfEna7Ka",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x74Bd7427c8424E71C2a92e23E4Abe4aaeCD299DE",
          "description": "Chainlink USD Oracle"
        },
        {
          "id": "15IuR1BgamgEINtGiahZW6",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x331f8A5c6236C76EEA6c194102dBe2f86D72F09F",
          "description": "PoolSmartWallet"
        },
        {
          "id": "EiOpiTnlYrWXCU9Ahi1d0",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xbdaf965FCfE4730707424a71389F742696985311",
          "description": "SmartWallet"
        },
        {
          "id": "5fc88mqq4LRzXg15s2qP12",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x91ee5184763d0b80f8dfdCbdE762b5D13ad295f4",
          "description": "Yearn Adapter V2"
        },
        {
          "id": "3vIgbE7KANM2aja9MeKjiW",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xe3890F1D7032F3BE1924F65507355a3ff1F575Cf",
          "description": "Curve USD LP Oracle"
        },
        {
          "id": "19Iz1MxZFsPXTF5FqpiR8J",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x74Bd7427c8424E71C2a92e23E4Abe4aaeCD299DE",
          "description": "Chainlink Oracle"
        },
        {
          "id": "66NhBgIWJlys4V9vqYemEC",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xE999232E3edd607610fE16Ee7aEbADba92fEC5DE",
          "description": "Governance Controller"
        },
        {
          "id": "3iTUjKzp1XbyKhvN45X43C",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xBf4933c84D331Bd09Be83Cb480C211DdeE3E0080",
          "description": "Curve ETH LP Oracle"
        },
        {
          "id": "25WqoXlJNg23FrQgvNLYeV",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x062B3aB17dFac433F9E211F95e6a7A0C627c9a62",
          "description": "LP Oracle"
        },
        {
          "id": "3SH4NUFbBjTHkn37rqVZ9J",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x22031BE61b10d2C6cC9648f251E1284Be5AFa3f9",
          "description": "Velodrome TWAP Oracle"
        },
        {
          "id": "17yTzhDTTRknzWYHPgjKo4",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x8e20A69aF81eaeDD74589C9d0684557fd54b0DdA",
          "description": "TWAP Oracle"
        },
        {
          "id": "3E6J7XGMxBpm04mRWrxVA8",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0xdB84260bE05054b42a71D4a287fF17a199C1c8FF",
          "description": "Reaper Farms Adapter"
        },
        {
          "id": "60Y5d6UCUTvqFHDW7g2c7z",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x1A5C2ee3FB7fe4A2C2e42474a3657C71f6C775CF",
          "description": "Yearn Adapter"
        },
        {
          "id": "7LoSF66b9C8GzCwQGTJIIT",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0xA6273F603985D13Ea7405B1B497C3b2F7D798Fd2",
          "description": "Beefy Adapter"
        },
        {
          "id": "6zCEYHS0An83LMQSJUe0O2",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0xeF1ffCa755216941874Bd2ab28C9CfC2F3f652bC",
          "description": "Stader sFTMx Oracle"
        },
        {
          "id": "4GM1xHubbo3VIPrYwq980L",
          "type": "websites_and_applications",
          "url": "https://www.resonate.finance/",
          "description": "Web/App"
        },
        {
          "id": "7hlACp2kq48fuhohycjPg1",
          "type": "websites_and_applications",
          "url": "https://app.resonate.finance/",
          "description": "Web/App"
        }
      ],
      "impacts": [
        {
          "id": "QMx5yy7e6YoiI8Ds8298J",
          "title": "Theft of user funds in O(1) transactional complexity, including the theft of user funds from multiple pools within the same transaction",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "24tw4gjoyeCGvOqfkgi6mw",
          "title": "Permanent freezing of user funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "e7EKgL6b6SK4bbBKErSYU",
          "title": "Execute arbitrary system commands",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "Fhwtym1cTjBf8ZIBkoC3V",
          "title": "Retrieve sensitive data/files from a running server such as /etc/shadow, database passwords, and blockchain keys(this does not include non-sensitive environment variables, open source code, or usernames)",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "73h9SC9DDcKEJ054SpaGzN",
          "title": "Taking state-modifying authenticated actions (with or without blockchain state interaction) on behalf of other users without any interaction by that user, such as, changing registration information, commenting, voting, making trades, withdrawals, etc.",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "1uDkOoj4WeAP0fNgOw7x3i",
          "title": "Changing the NFT metadata",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "1l1s3nH7KfbekIJDVTUv1G",
          "title": "Subdomain takeover with already-connected wallet interaction",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "3LGtYYc6XFrRK01G4IDaJ8",
          "title": "Direct theft of user funds",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "1Ajk8fpfSRnNKZvDi8uIQK",
          "title": "Malicious interactions with an already-connected wallet such as modifying transaction arguments or parameters, substituting contract addresses, submitting malicious transactions",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "4dIM6oBKkl8BGA9hl4s5w0",
          "title": "Direct theft of user funds",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "7FkBhQkx1jFzZSc6cA1URg",
          "title": "Injection of malicious HTML or XSS through NFT metadata",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "1VLxzfgDjBLfQ8RpiWBgiN",
          "title": "Theft of user funds in O(n) transactional complexity, including the theft of user funds from multiple pools requiring multiple transactions",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "3eukKc9QhGfnRGpD27Dkb",
          "title": "Temporary freezing of user funds for periods greater than one hour with no escape-hatch available during that period",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "5yUgc1smpGmgiLnVYIPaXm",
          "title": "Price manipulation via oracle-based attacks that results in theft of value, excluding provider-based attacks such as Chainlink",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "3NS8GOQXPp1AIJvotqDocy",
          "title": "Injecting/modifying the static content on the target application without Javascript (Persistent) such as HTML injection without Javascript, replacing existing text with arbitrary text, arbitrary file uploads, etc.",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "3cdhgJnKyPM6ho3iUkLnBp",
          "title": "Takedown of website for periods greater than four hours",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "NgHqjo3QYWYo88Mgq1mfv",
          "title": "Temporary freezing of user funds for periods less than one hour but spanning multiple blocks",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3l7wvS3BSgLCrGO063bjTz",
          "title": "Griefing and/or gas theft",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3qGcaPpjddqB89glJ5DN0T",
          "title": "Admin-based attacks that allow for theft of user-value",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "1cETVp2rFSMUgzLzrygBlv",
          "title": "Price manipulation via oracle-based attacks that results in loss of value, excluding provider-based attacks such as Chainlink",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5fRkaHZzzRNDPp25PEUMno",
          "title": "Unintentional release of funds ahead of time",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "6l6O2qsmMOjKuxdRopLRf3",
          "title": "Smart contract fails to deliver promised returns without losing value",
          "type": "smart_contract",
          "severity": "low"
        },
        {
          "id": "32qZTXzwf5WI9mjgU9VNo8",
          "title": "Price manipulation via oracle-based attacks that do not result in any loss of value, excluding provider-based attacks such as Chainlink",
          "type": "smart_contract",
          "severity": "low"
        },
        {
          "id": "7jvCX3Ry9swkC20n8dbvfV",
          "title": "MEV-based slippage attacks (sandwich bots)",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "Resonate is the DeFi Yield futures protocol. Resonate splits apart the interest and principal components of a yield-bearing position. Those who hold tokens which may be deposited into yield-bearing systems can receive an instant, upfront payment on the present value of that future yield, in exchange for locking their tokens. An ideal solution for traders who want to receive guaranteed and consistent yield farming rewards for staking tokens or providing liquidity. \n\nFor those who want to purchase the Yield Futures, or the rights to future yield, Resonate places them in a position where they can do so at a discount to the expected future value of the interest. For protocols wanting to reduce their burn rate, this discount can offer a better way to incentivize providing LPs.\n\nFor more information about Resonate, please visit [https://www.resonate.finance/](https://www.resonate.finance/).",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\n\nAll Critical/High/Medium severity bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nRewards for critical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of __USD 40 000__. \n\nCritical website and application bug reports will be rewarded with __USD 30 000__ only if the impact leads to a direct loss in funds. All other impacts that would be classified as Critical would be rewarded no more than __USD 15 000__.\n\nKnown issues highlighted in the following audit report are considered out of scope: \n  - [Zellic Audit Part 1](https://www.resonate.finance/audits/Zellic-Part-I.pdf)\n  - [Zellic Audit Part 2](https://www.resonate.finance/audits/Zellic-Part-II.pdf)\n  - [BlockSec Audit](https://www.resonate.finance/audits/BlockSec-Audit.pdf)\n  - [BlockSec Oracle Audit](https://www.resonate.finance/audits/BlockSec-Oracle-Audit.pdf)\n  - [Bug Bounty Report by GalloDaSballo](https://docs.google.com/document/d/1NJm2d7JK5a8Cu-TGNip8AQwiVtNqcdd818xyUHkRnCM/edit)\n\nPayouts are handled by the __Resonate__ team directly and are denominated in USD. However, payouts are done in __USDC__ or __RVST__, at the discretion of the team.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses, that rely solely on malicious intent of governance systems, rather than direct takeovers.\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n  - Curve reentrancy vulnerabilities, which are not a valid vector against our system. \n\n__Websites and Apps__\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Attacks requiring physical access to the victim device\n  - Attacks requiring access to the local network of the victim\n  - Reflected plain text injection ex: url parameters, path, etc.\n    - This does not exclude reflected HTML injection with or without javascript\n    - This does not exclude persistent plain text injection\n  - Self-XSS\n  - Captcha bypass using OCR without impact demonstration\n  - CSRF with no state modifying security impact (ex: logout CSRF)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”) without demonstration of impact\n  - Server-side non-confidential information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used only to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Feature requests\n  - Issues related to the frontend without concrete impact and PoC\n  - Best practices issues without concrete impact and PoC\n  - Vulnerabilities primarily caused by browser/plugin defects\n  - Leakage of non sensitive api keys ex: etherscan, Infura, Alchemy, etc.\n  - Any vulnerability exploit requiring browser bugs for exploitation. ex: CSP bypass\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "All smart contracts of Resonate can be found at [https://github.com/Revest-Finance](https://github.com/Revest-Finance). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\nIf any Critical or High severity impact can be caused to any other asset managed by Resonate that isn’t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project.",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Yield Aggregator"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "language": null
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $40,000 to USD $100,000"
          },
          {
            "level": "High",
            "payout": "USD $40,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "USD $15,000 to USD $30,000"
          },
          {
            "level": "High",
            "payout": "USD $5,000"
          }
        ]
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Resonate is the DeFi Yield futures protocol. Resonate splits apart the interest and principal components of a yield-bearing position. Those who hold tokens which may be deposited into yield-bearing systems can receive an instant, upfront payment on the present value of that future yield, in exchange for locking their tokens. An ideal solution for traders who want to receive guaranteed and consistent yield farming rewards for staking tokens or providing liquidity. \"), mdx(\"p\", null, \"For those who want to purchase the Yield Futures, or the rights to future yield, Resonate places them in a position where they can do so at a discount to the expected future value of the interest. For protocols wanting to reduce their burn rate, this discount can offer a better way to incentivize providing LPs.\"), mdx(\"p\", null, \"For more information about Resonate, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.resonate.finance/\"\n  }, \"https://www.resonate.finance/\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Resonate is the DeFi Yield futures protocol. Resonate splits apart the interest and principal components of a yield-bearing position. Those who hold tokens which may be deposited into yield-bearing systems can receive an instant, upfront payment on the present value of that future yield, in exchange for locking their tokens. An ideal solution for traders who want to receive guaranteed and consistent yield farming rewards for staking tokens or providing liquidity. </p><p>For those who want to purchase the Yield Futures, or the rights to future yield, Resonate places them in a position where they can do so at a discount to the expected future value of the interest. For protocols wanting to reduce their burn rate, this discount can offer a better way to incentivize providing LPs.</p><p>For more information about Resonate, please visit <a href=\"https://www.resonate.finance/\">https://www.resonate.finance/</a>.</p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\"), mdx(\"p\", null, \"All Critical/High/Medium severity bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\"), mdx(\"p\", null, \"Rewards for critical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 40 000\"), \". \"), mdx(\"p\", null, \"Critical website and application bug reports will be rewarded with \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 30 000\"), \" only if the impact leads to a direct loss in funds. All other impacts that would be classified as Critical would be rewarded no more than \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 15 000\"), \".\"), mdx(\"p\", null, \"Known issues highlighted in the following audit report are considered out of scope: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.resonate.finance/audits/Zellic-Part-I.pdf\"\n  }, \"Zellic Audit Part 1\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.resonate.finance/audits/Zellic-Part-II.pdf\"\n  }, \"Zellic Audit Part 2\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.resonate.finance/audits/BlockSec-Audit.pdf\"\n  }, \"BlockSec Audit\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.resonate.finance/audits/BlockSec-Oracle-Audit.pdf\"\n  }, \"BlockSec Oracle Audit\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.google.com/document/d/1NJm2d7JK5a8Cu-TGNip8AQwiVtNqcdd818xyUHkRnCM/edit\"\n  }, \"Bug Bounty Report by GalloDaSballo\"))), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Resonate\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \" or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"RVST\"), \", at the discretion of the team.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.</p><p>All Critical/High/Medium severity bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.</p><p>Rewards for critical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of <strong>USD 40 000</strong>. </p><p>Critical website and application bug reports will be rewarded with <strong>USD 30 000</strong> only if the impact leads to a direct loss in funds. All other impacts that would be classified as Critical would be rewarded no more than <strong>USD 15 000</strong>.</p><p>Known issues highlighted in the following audit report are considered out of scope: </p><ul><li><a href=\"https://www.resonate.finance/audits/Zellic-Part-I.pdf\">Zellic Audit Part 1</a></li><li><a href=\"https://www.resonate.finance/audits/Zellic-Part-II.pdf\">Zellic Audit Part 2</a></li><li><a href=\"https://www.resonate.finance/audits/BlockSec-Audit.pdf\">BlockSec Audit</a></li><li><a href=\"https://www.resonate.finance/audits/BlockSec-Oracle-Audit.pdf\">BlockSec Oracle Audit</a></li><li><a href=\"https://docs.google.com/document/d/1NJm2d7JK5a8Cu-TGNip8AQwiVtNqcdd818xyUHkRnCM/edit\">Bug Bounty Report by GalloDaSballo</a></li></ul><p>Payouts are handled by the <strong>Resonate</strong> team directly and are denominated in USD. However, payouts are done in <strong>USDC</strong> or <strong>RVST</strong>, at the discretion of the team.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses, that rely solely on malicious intent of governance systems, rather than direct takeovers.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Curve reentrancy vulnerabilities, which are not a valid vector against our system. \")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theoretical vulnerabilities without any proof or demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring physical access to the victim device\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to the local network of the victim\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reflected plain text injection ex: url parameters, path, etc.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This does not exclude reflected HTML injection with or without javascript\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This does not exclude persistent plain text injection\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Self-XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Captcha bypass using OCR without impact demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with no state modifying security impact (ex: logout CSRF)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as \\u201Chttponly\\u201D) without demonstration of impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Server-side non-confidential information disclosure such as IPs, server names, and most stack traces\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities used only to enumerate or confirm the existence of users or tenants\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of SSL/TLS best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DDoS vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Feature requests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Issues related to the frontend without concrete impact and PoC\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practices issues without concrete impact and PoC\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities primarily caused by browser/plugin defects\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Leakage of non sensitive api keys ex: etherscan, Infura, Alchemy, etc.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any vulnerability exploit requiring browser bugs for exploitation. ex: CSP bypass\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses, that rely solely on malicious intent of governance systems, rather than direct takeovers.</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li><li>Curve reentrancy vulnerabilities, which are not a valid vector against our system. </li></ul><p><strong>Websites and Apps</strong></p><ul><li>Theoretical vulnerabilities without any proof or demonstration</li><li>Attacks requiring physical access to the victim device</li><li>Attacks requiring access to the local network of the victim</li><li>Reflected plain text injection ex: url parameters, path, etc.<ul><li>This does not exclude reflected HTML injection with or without javascript</li><li>This does not exclude persistent plain text injection</li></ul></li><li>Self-XSS</li><li>Captcha bypass using OCR without impact demonstration</li><li>CSRF with no state modifying security impact (ex: logout CSRF)</li><li>Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”) without demonstration of impact</li><li>Server-side non-confidential information disclosure such as IPs, server names, and most stack traces</li><li>Vulnerabilities used only to enumerate or confirm the existence of users or tenants</li><li>Vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows</li><li>Lack of SSL/TLS best practices</li><li>DDoS vulnerabilities</li><li>Feature requests</li><li>Issues related to the frontend without concrete impact and PoC</li><li>Best practices issues without concrete impact and PoC</li><li>Vulnerabilities primarily caused by browser/plugin defects</li><li>Leakage of non sensitive api keys ex: etherscan, Infura, Alchemy, etc.</li><li>Any vulnerability exploit requiring browser bugs for exploitation. ex: CSP bypass</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of Resonate can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/Revest-Finance\"\n  }, \"https://github.com/Revest-Finance\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\"), mdx(\"p\", null, \"If any Critical or High severity impact can be caused to any other asset managed by Resonate that isn\\u2019t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of Resonate can be found at <a href=\"https://github.com/Revest-Finance\">https://github.com/Revest-Finance</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.</p><p>If any Critical or High severity impact can be caused to any other asset managed by Resonate that isn’t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "axiom",
      "slug": "axiom",
      "project": "Axiom",
      "maxBounty": 50000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/hWV91Kc2iSwCThJXoOXd8/63d2b2d650c01f98cf59bbf27c09ca52/Picture_Name_horizontal_Picture_Name_vertical_Vector_black.svg",
      "launchDate": "2023-07-24T12:00+02:00",
      "updatedDate": "2023-07-24T16:56:48.223Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $25,000 to USD $50,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $25,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "4s2DX4PNkYc2DlC9u3pvrl",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x33ea514cc54b641ad8b84e4a31d311f3722d1bb5",
          "description": "AxiomV1 Proxy"
        },
        {
          "id": "N1gJ4BZkNDnS6M9lR5bfC",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xd617ab7f787adf64c2b5b920c251ea10cd35a952",
          "description": "AxiomV1Query Proxy"
        },
        {
          "id": "c9nQJbdJ8TpNcsR99eOIb",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xc2d7e38a40808bbfc1834c79b5ba4b27bc4c462e",
          "description": "AxiomV1 Verifier *"
        },
        {
          "id": "rnImqQoCvqkFLgUWMLa4w",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x24623e2C87bdF420204e21a75A5B6921950872b8",
          "description": "AxiomV1 Historical Verifier *"
        },
        {
          "id": "1vrVk53k0UrO4UATNiQYxl",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x1aae24E24bFeCEceE5337bCb8348e2C24d8809F1",
          "description": "AxiomV1Query Verifier *"
        }
      ],
      "impacts": [
        {
          "id": "1plCe3a5jz2SI7GYVk5r4b",
          "title": "Manipulation of governance voting result deviating from voted outcome and resulting in a direct change from intended effect of original results",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "40ahmY4ftN3yh9kYbjANBk",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5UFvMUuTj7PLtRKpi2tgem",
          "title": "Direct theft of any user NFTs, whether at-rest or in-motion, other than unclaimed royalties",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "39X67EIWq2OfKOIRV4onJH",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2CzYsgpEpVmPUTGK1JzkGw",
          "title": "Permanent freezing of NFTs",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4Ny1qWMPIeYL8u0fvnmeLi",
          "title": "Protocol insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "nsbjnX1k7AEDENxIZspTa",
          "title": "Caching of incorrect historic block hash in AxiomV1",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5ITZWUYUNW3Fw35yl8gxAr",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "39C5ssDfyAeDpSqkCBbj8N",
          "title": "Theft of unclaimed royalties",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "1BAtLPGgzfgKJWd0NxMpN7",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "36Nd4sbN5YFOLrJGEVg6jC",
          "title": "Permanent freezing of unclaimed royalties",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6TKGhtCU5UuMnEy6EiH030",
          "title": "Temporary freezing of funds",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "3TzlRrBm39RWqryXBggP06",
          "title": "Soundness error in ZK circuits with parameters deployed on-chain.",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "1fZ2EcTgR8j0KgeFXfFeKQ",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "NGexIipTG4YF8Ri2FyizC",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3JKtmYpkPDOMDBwjEwe3S3",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        }
      ],
      "programOverview": "Axiom is the first ZK coprocessor scaling data-rich applications on Ethereum.  Axiom provides smart contracts trustless access to all on-chain historic data and arbitrary expressive compute over it.  Queries into Axiom are trustlessly fulfilled with ZK-verified results on-chain. \n\nFor more information about Axiom, please visit [www.axiom.xyz](http://www.axiom.xyz)\n\nAxiom provides rewards in USDC. For more details about the payment process, please view the Rewards by Threat Level section further below. \n\n__KYC Requirement__\n\nThe provision of KYC is required to receive a reward for this bug bounty program where the following information will be required to be provided:\n- National ID\n- Utility Bill\n\nKYC information is only required on confirmation of the validity of a bug report.   \n\n__Responsible Publication__\n\nAxiom adheres to category 3. This Policy determines what information whitehats are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our [Responsible Publication](https://immunefi.com/responsible-publication/) page.\n\n__Primacy of Impact vs Primacy of Rules__\n\nAxiom adheres to the Primacy of Impact for the following severity levels:\n- Smart Contract - Critical\n\nIf a categoryâ€™s severity level is covered within the Primacy of Impact, it means that even if the impacted asset is not in-scope but is owned by the project, then it would be considered as in-scope of the bug bounty program as long as it involves an impact under that respective severity level. When submitting a report, just select the Primacy of Impact asset placeholder. If the team behind this project has multiple projects, those other projects are not covered under the Primacy of Impact of this program. Instead, check if those other projects have a bug bounty program on Immunefi.\n\nTestnet and mock files are not covered under the Primacy of Impact. \n\nAll other severity levels not listed here are considered under the Primacy of Rules, which means that they are bound by the terms of the bug bounty program.\n\n__Known Issue Assurance__\n\nAxiom commits to providing Known Issue Assurance to bug submissions through their program. This means that Axiom will either disclose known issues publicly or at the very least privately via a self-reported bug submission in order to allow for a more objective and streamlined mediation process to prove that an issue is known. Otherwise, assuming the bug report itself is valid, it would result in the bug report being considered in-scope and due 100% of the reward with respect to the bug bounty program terms. \n\n__Immunefi Standard Badge__\n\nAxiom has satisfied the requirements for the [Immunefi Standard Badge,](https://immunefisupport.zendesk.com/hc/en-us/articles/6427157117713-The-Immunefi-Standard-Badge-) which is given to projects that adhere to our best practices. \n\n__Invoicing Information__\n\nIf needed by the security researcher, Axiom is able to provide the necessary information for the proper issuance of an invoice. This includes:\n- Legal Entity\n- Registered Address\n- Email\n",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact the vulnerability could otherwise cause based on the Impacts in Scope table further below. \n\n__Reward Calculation for Critical Level Reports__\n\nFor critical Smart Contract bugs, the reward amount is 10% of the funds directly affected up to a maximum of USD 50 000. The calculation of the amount of funds at risk is based on the time and date the bug report is submitted. However, a minimum reward of USD 25 000 is to be rewarded in order to incentivize security researchers against withholding a bug report. \n\n__Repeatable Attack Limitations__\n\nIn cases of repeatable attacks for smart contract bugs, only the first attack will be counted, regardless of whether the smart contract is upgradable, pausable, or killable.\n\n__Restrictions on Security Researcher Eligibility__  \n\nSecurity researchers who fall under any of the following are ineligible for a reward\n- Citizens or residents of OFAC-sanctioned countries\n- Individuals on an OFAC sanctions list\n\n__Proof of Concept (PoC) Requirements__\n\nA PoC is required for the following severity levels:\n- Smart Contract - Critical\n- Smart Contract - High\n- Smart Contract - Medium\n- Smart Contract - Low\n\nAll PoCs submitted must comply with the Immunefi-wide [PoC Guidelines and Rules](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules). Bug report submissions without a PoC when a PoC is required will not be provided with a reward.\n\n__Reward Payment Terms__\n\nPayouts are handled by the Axiom team directly and are denominated in USD. However, payments are done in USDC. \n",
      "outOfScopeAndRules": "These impacts are out of scope for this bug bounty program. \n\n__All Categories__\n\n- Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\n- Impacts caused by attacks requiring access to leaked keys/credentials\n- Impacts caused by attacks requiring access to privileged addresses (governance, strategist) except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\n- Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code\n- Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\n- Best practice recommendations\n- Feature requests\n- Impacts on test files and configuration files unless stated otherwise in the bug bounty program\n\n__Smart Contracts and Blockchain/DLT__ \n\n- Incorrect data supplied by third party oracles\n   - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks\n- Best practice recommendations\n\nThe following activities are prohibited by this bug bounty program:\n\n- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n",
      "assetsBodyV2": "All code of Axiom can be found at [https://github.com/axiom-crypto/axiom-v1-contracts](https://github.com/axiom-crypto/axiom-v1-contracts) and [https://github.com/axiom-crypto/halo2-lib/releases/tag/v0.3.0 ](https://github.com/axiom-crypto/halo2-lib/releases/tag/v0.3.0)and [https://github.com/axiom-crypto/snark-verifier/releases/tag/v0.1.1](https://github.com/axiom-crypto/snark-verifier/releases/tag/v0.1.1) and [https://github.com/axiom-crypto/axiom-eth/releases/tag/v0.2.0 ](https://github.com/axiom-crypto/axiom-eth/releases/tag/v0.2.0)Documentation for the assets provided in the table can be found at [https://docs.axiom.xyz/](https://docs.axiom.xyz/)\n\n* These contracts are in Yul and cannot be verified on Etherscan.  We provide detailed reproducible instructions for producing bytecode here: [https://docs.axiom.xyz/transparency-and-security/on-chain-zk-verifiers](https://docs.axiom.xyz/transparency-and-security/on-chain-zk-verifiers)\n\nOther helpful links include:\n- Deployment commits - [https://docs.axiom.xyz/transparency-and-security/security](https://docs.axiom.xyz/transparency-and-security/security)\n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": null,
        "projectType": [
          "Infrastructure"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Solidity",
          "Rust"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $25,000 to USD $50,000"
          },
          {
            "level": "High",
            "payout": "USD $25,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Axiom is the first ZK coprocessor scaling data-rich applications on Ethereum.  Axiom provides smart contracts trustless access to all on-chain historic data and arbitrary expressive compute over it.  Queries into Axiom are trustlessly fulfilled with ZK-verified results on-chain. \"), mdx(\"p\", null, \"For more information about Axiom, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.axiom.xyz\"\n  }, \"www.axiom.xyz\")), mdx(\"p\", null, \"Axiom provides rewards in USDC. For more details about the payment process, please view the Rewards by Threat Level section further below. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"KYC Requirement\")), mdx(\"p\", null, \"The provision of KYC is required to receive a reward for this bug bounty program where the following information will be required to be provided:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"National ID\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Utility Bill\")), mdx(\"p\", null, \"KYC information is only required on confirmation of the validity of a bug report.   \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Responsible Publication\")), mdx(\"p\", null, \"Axiom adheres to category 3. This Policy determines what information whitehats are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/responsible-publication/\"\n  }, \"Responsible Publication\"), \" page.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Primacy of Impact vs Primacy of Rules\")), mdx(\"p\", null, \"Axiom adheres to the Primacy of Impact for the following severity levels:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract - Critical\")), mdx(\"p\", null, \"If a category\\u2019s severity level is covered within the Primacy of Impact, it means that even if the impacted asset is not in-scope but is owned by the project, then it would be considered as in-scope of the bug bounty program as long as it involves an impact under that respective severity level. When submitting a report, just select the Primacy of Impact asset placeholder. If the team behind this project has multiple projects, those other projects are not covered under the Primacy of Impact of this program. Instead, check if those other projects have a bug bounty program on Immunefi.\"), mdx(\"p\", null, \"Testnet and mock files are not covered under the Primacy of Impact. \"), mdx(\"p\", null, \"All other severity levels not listed here are considered under the Primacy of Rules, which means that they are bound by the terms of the bug bounty program.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Known Issue Assurance\")), mdx(\"p\", null, \"Axiom commits to providing Known Issue Assurance to bug submissions through their program. This means that Axiom will either disclose known issues publicly or at the very least privately via a self-reported bug submission in order to allow for a more objective and streamlined mediation process to prove that an issue is known. Otherwise, assuming the bug report itself is valid, it would result in the bug report being considered in-scope and due 100% of the reward with respect to the bug bounty program terms. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Immunefi Standard Badge\")), mdx(\"p\", null, \"Axiom has satisfied the requirements for the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/6427157117713-The-Immunefi-Standard-Badge-\"\n  }, \"Immunefi Standard Badge,\"), \" which is given to projects that adhere to our best practices. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Invoicing Information\")), mdx(\"p\", null, \"If needed by the security researcher, Axiom is able to provide the necessary information for the proper issuance of an invoice. This includes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Legal Entity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Registered Address\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Email\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Axiom is the first ZK coprocessor scaling data-rich applications on Ethereum.  Axiom provides smart contracts trustless access to all on-chain historic data and arbitrary expressive compute over it.  Queries into Axiom are trustlessly fulfilled with ZK-verified results on-chain. </p><p>For more information about Axiom, please visit <a href=\"http://www.axiom.xyz\">www.axiom.xyz</a></p><p>Axiom provides rewards in USDC. For more details about the payment process, please view the Rewards by Threat Level section further below. </p><p><strong>KYC Requirement</strong></p><p>The provision of KYC is required to receive a reward for this bug bounty program where the following information will be required to be provided:</p><ul><li>National ID</li><li>Utility Bill</li></ul><p>KYC information is only required on confirmation of the validity of a bug report.   </p><p><strong>Responsible Publication</strong></p><p>Axiom adheres to category 3. This Policy determines what information whitehats are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our <a href=\"https://immunefi.com/responsible-publication/\">Responsible Publication</a> page.</p><p><strong>Primacy of Impact vs Primacy of Rules</strong></p><p>Axiom adheres to the Primacy of Impact for the following severity levels:</p><ul><li>Smart Contract - Critical</li></ul><p>If a categoryâ€™s severity level is covered within the Primacy of Impact, it means that even if the impacted asset is not in-scope but is owned by the project, then it would be considered as in-scope of the bug bounty program as long as it involves an impact under that respective severity level. When submitting a report, just select the Primacy of Impact asset placeholder. If the team behind this project has multiple projects, those other projects are not covered under the Primacy of Impact of this program. Instead, check if those other projects have a bug bounty program on Immunefi.</p><p>Testnet and mock files are not covered under the Primacy of Impact. </p><p>All other severity levels not listed here are considered under the Primacy of Rules, which means that they are bound by the terms of the bug bounty program.</p><p><strong>Known Issue Assurance</strong></p><p>Axiom commits to providing Known Issue Assurance to bug submissions through their program. This means that Axiom will either disclose known issues publicly or at the very least privately via a self-reported bug submission in order to allow for a more objective and streamlined mediation process to prove that an issue is known. Otherwise, assuming the bug report itself is valid, it would result in the bug report being considered in-scope and due 100% of the reward with respect to the bug bounty program terms. </p><p><strong>Immunefi Standard Badge</strong></p><p>Axiom has satisfied the requirements for the <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/6427157117713-The-Immunefi-Standard-Badge-\">Immunefi Standard Badge,</a> which is given to projects that adhere to our best practices. </p><p><strong>Invoicing Information</strong></p><p>If needed by the security researcher, Axiom is able to provide the necessary information for the proper issuance of an invoice. This includes:</p><ul><li>Legal Entity</li><li>Registered Address</li><li>Email</li></ul>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact the vulnerability could otherwise cause based on the Impacts in Scope table further below. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Reward Calculation for Critical Level Reports\")), mdx(\"p\", null, \"For critical Smart Contract bugs, the reward amount is 10% of the funds directly affected up to a maximum of USD 50 000. The calculation of the amount of funds at risk is based on the time and date the bug report is submitted. However, a minimum reward of USD 25 000 is to be rewarded in order to incentivize security researchers against withholding a bug report. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Repeatable Attack Limitations\")), mdx(\"p\", null, \"In cases of repeatable attacks for smart contract bugs, only the first attack will be counted, regardless of whether the smart contract is upgradable, pausable, or killable.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Restrictions on Security Researcher Eligibility\"), \"  \"), mdx(\"p\", null, \"Security researchers who fall under any of the following are ineligible for a reward\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Citizens or residents of OFAC-sanctioned countries\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Individuals on an OFAC sanctions list\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Proof of Concept (PoC) Requirements\")), mdx(\"p\", null, \"A PoC is required for the following severity levels:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract - Critical\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract - High\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract - Medium\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract - Low\")), mdx(\"p\", null, \"All PoCs submitted must comply with the Immunefi-wide \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\"\n  }, \"PoC Guidelines and Rules\"), \". Bug report submissions without a PoC when a PoC is required will not be provided with a reward.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Reward Payment Terms\")), mdx(\"p\", null, \"Payouts are handled by the Axiom team directly and are denominated in USD. However, payments are done in USDC. \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact the vulnerability could otherwise cause based on the Impacts in Scope table further below. </p><p><strong>Reward Calculation for Critical Level Reports</strong></p><p>For critical Smart Contract bugs, the reward amount is 10% of the funds directly affected up to a maximum of USD 50 000. The calculation of the amount of funds at risk is based on the time and date the bug report is submitted. However, a minimum reward of USD 25 000 is to be rewarded in order to incentivize security researchers against withholding a bug report. </p><p><strong>Repeatable Attack Limitations</strong></p><p>In cases of repeatable attacks for smart contract bugs, only the first attack will be counted, regardless of whether the smart contract is upgradable, pausable, or killable.</p><p><strong>Restrictions on Security Researcher Eligibility</strong>  </p><p>Security researchers who fall under any of the following are ineligible for a reward</p><ul><li>Citizens or residents of OFAC-sanctioned countries</li><li>Individuals on an OFAC sanctions list</li></ul><p><strong>Proof of Concept (PoC) Requirements</strong></p><p>A PoC is required for the following severity levels:</p><ul><li>Smart Contract - Critical</li><li>Smart Contract - High</li><li>Smart Contract - Medium</li><li>Smart Contract - Low</li></ul><p>All PoCs submitted must comply with the Immunefi-wide <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\">PoC Guidelines and Rules</a>. Bug report submissions without a PoC when a PoC is required will not be provided with a reward.</p><p><strong>Reward Payment Terms</strong></p><p>Payouts are handled by the Axiom team directly and are denominated in USD. However, payments are done in USDC. </p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"These impacts are out of scope for this bug bounty program. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"All Categories\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts caused by attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts caused by attacks requiring access to privileged addresses (governance, strategist) except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice recommendations\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Feature requests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts on test files and configuration files unless stated otherwise in the bug bounty program\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain/DLT\"), \" \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts requiring basic economic and governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity impacts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts from Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts involving centralization risks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice recommendations\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third-party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks that are executed against project assets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>These impacts are out of scope for this bug bounty program. </p><p><strong>All Categories</strong></p><ul><li>Impacts requiring attacks that the reporter has already exploited themselves, leading to damage</li><li>Impacts caused by attacks requiring access to leaked keys/credentials</li><li>Impacts caused by attacks requiring access to privileged addresses (governance, strategist) except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible</li><li>Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code</li><li>Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production</li><li>Best practice recommendations</li><li>Feature requests</li><li>Impacts on test files and configuration files unless stated otherwise in the bug bounty program</li></ul><p><strong>Smart Contracts and Blockchain/DLT</strong> </p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Impacts requiring basic economic and governance attacks (e.g. 51% attack)</li><li>Lack of liquidity impacts</li><li>Impacts from Sybil attacks</li><li>Impacts involving centralization risks</li><li>Best practice recommendations</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet</li><li>Any testing with pricing oracles or third-party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks that are executed against project assets</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All code of Axiom can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/axiom-crypto/axiom-v1-contracts\"\n  }, \"https://github.com/axiom-crypto/axiom-v1-contracts\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/axiom-crypto/halo2-lib/releases/tag/v0.3.0\"\n  }, \"https://github.com/axiom-crypto/halo2-lib/releases/tag/v0.3.0 \"), \"and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/axiom-crypto/snark-verifier/releases/tag/v0.1.1\"\n  }, \"https://github.com/axiom-crypto/snark-verifier/releases/tag/v0.1.1\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/axiom-crypto/axiom-eth/releases/tag/v0.2.0\"\n  }, \"https://github.com/axiom-crypto/axiom-eth/releases/tag/v0.2.0 \"), \"Documentation for the assets provided in the table can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.axiom.xyz/\"\n  }, \"https://docs.axiom.xyz/\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"These contracts are in Yul and cannot be verified on Etherscan.  We provide detailed reproducible instructions for producing bytecode here: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.axiom.xyz/transparency-and-security/on-chain-zk-verifiers\"\n  }, \"https://docs.axiom.xyz/transparency-and-security/on-chain-zk-verifiers\"))), mdx(\"p\", null, \"Other helpful links include:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Deployment commits - \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.axiom.xyz/transparency-and-security/security\"\n  }, \"https://docs.axiom.xyz/transparency-and-security/security\"))));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All code of Axiom can be found at <a href=\"https://github.com/axiom-crypto/axiom-v1-contracts\">https://github.com/axiom-crypto/axiom-v1-contracts</a> and <a href=\"https://github.com/axiom-crypto/halo2-lib/releases/tag/v0.3.0\">https://github.com/axiom-crypto/halo2-lib/releases/tag/v0.3.0 </a>and <a href=\"https://github.com/axiom-crypto/snark-verifier/releases/tag/v0.1.1\">https://github.com/axiom-crypto/snark-verifier/releases/tag/v0.1.1</a> and <a href=\"https://github.com/axiom-crypto/axiom-eth/releases/tag/v0.2.0\">https://github.com/axiom-crypto/axiom-eth/releases/tag/v0.2.0 </a>Documentation for the assets provided in the table can be found at <a href=\"https://docs.axiom.xyz/\">https://docs.axiom.xyz/</a></p><ul><li>These contracts are in Yul and cannot be verified on Etherscan.  We provide detailed reproducible instructions for producing bytecode here: <a href=\"https://docs.axiom.xyz/transparency-and-security/on-chain-zk-verifiers\">https://docs.axiom.xyz/transparency-and-security/on-chain-zk-verifiers</a></li></ul><p>Other helpful links include:</p><ul><li>Deployment commits - <a href=\"https://docs.axiom.xyz/transparency-and-security/security\">https://docs.axiom.xyz/transparency-and-security/security</a></li></ul>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "axelarnetwork",
      "slug": "axelarnetwork",
      "project": "Axelar Network",
      "maxBounty": 2250000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/50nSUkPKWY77vhNfAtPIXc/4200a486fe40455e51f74d3bd242d735/Axelar_Logo_Symbol_Black_3x.png",
      "launchDate": "2022-03-10T20:30-07:00",
      "updatedDate": "2022-10-24T16:23:30.334Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "blockchain_dlt",
          "level": "critical",
          "payout": "Up to USD $2,250,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "high",
          "payout": "USD $10,000 to USD $50,000",
          "pocRequired": false
        },
        {
          "assetType": "blockchain_dlt",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": false
        },
        {
          "assetType": "blockchain_dlt",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to USD $2,250,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $10,000 to USD $50,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": false
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "45OaMn2PrY3GPpWfsqAowc",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x4F4495243837681061C4743b74B3eEdf548D56A5",
          "description": "Ethereum Axelar Gateway contract address Proxy"
        },
        {
          "id": "1yR2zlol6WV8nZyFdY65Gq",
          "type": "smart_contract",
          "url": "https://snowtrace.io/address/0x5029C0EFf6C34351a0CEc334542cDb22c7928f78",
          "description": "Avalanche Axelar Gateway contract address Proxy"
        },
        {
          "id": "4y2yLa3l6zdxo1pqUDhvdq",
          "type": "smart_contract",
          "url": "https://snowtrace.io/address/0xfaB550568C688d5D8A52C7d794cb93Edc26eC0eC",
          "description": "Avalanche axlUSDC token address"
        },
        {
          "id": "4gPw11oKENP6XO8OWLsdal",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x304acf330bbE08d1e512eefaa92F6a57871fD895",
          "description": "Binance Axelar Gateway contract address Proxy"
        },
        {
          "id": "1gl0QHECamXbsVxFPvPvxr",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x4268B8F0B87b6Eae5d897996E6b845ddbD99Adf3",
          "description": "Binance  axlUSDC token address"
        },
        {
          "id": "7cNzgU1h9yYtvjcZNFUNmk",
          "type": "smart_contract",
          "url": "https://aurorascan.dev/address/0x304acf330bbE08d1e512eefaa92F6a57871fD895#code",
          "description": "Aurora Axelar Gateway contract address Proxy"
        },
        {
          "id": "388AgWjn34mGCBLehQE7ip",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x5e3C572A97D898Fe359a2Cea31c7D46ba5386895",
          "description": "Fantom Axelar Gateway contract address Proxy"
        },
        {
          "id": "kYlusoNmwrZmls3QqnB0u",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x1B6382DBDEa11d97f24495C9A90b7c88469134a4",
          "description": "Fantom axlUSDC token address"
        },
        {
          "id": "tXMPNU5J8oFOg3VV3zw9G",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x6f015F16De9fC8791b234eF68D486d2bF203FBA8",
          "description": "Polygon Axelar Gateway contract address Proxy"
        },
        {
          "id": "IXnBG9gAiOUsEK9ZZW9V8",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x750e4C4984a9e0f12978eA6742Bc1c5D248f40ed",
          "description": "Polygon axlUSDC token address"
        },
        {
          "id": "2WV03x7BB4SYHWLoU7kvHd",
          "type": "smart_contract",
          "url": "https://moonbeam.moonscan.io/address/0x4F4495243837681061C4743b74B3eEdf548D56A5#code",
          "description": "Moonbeam Axelar Gateway contract address Proxy"
        },
        {
          "id": "46Z3f17n5xREw7SwfOHtar",
          "type": "smart_contract",
          "url": "https://moonbeam.moonscan.io/address/0xCa01a1D0993565291051daFF390892518ACfAD3A",
          "description": "Moonbeam axlUSDC token address"
        },
        {
          "id": "54IZ8Pf3bSQBPyychNSAVy",
          "type": "blockchain_dlt",
          "url": "https://github.com/axelarnetwork/axelar-core",
          "description": "Infrastructure -  Axelar core protocol"
        },
        {
          "id": "4r6IUkjV73xrtdaZwLSz6H",
          "type": "blockchain_dlt",
          "url": "https://github.com/axelarnetwork/tofnd",
          "description": "Infrastructure -  Axelar signer"
        },
        {
          "id": "1DyuKxCMir2PRILsid5Xgk",
          "type": "blockchain_dlt",
          "url": "https://github.com/axelarnetwork/tofn/blob/main/src/ecdsa/mod.rs",
          "description": "Axelarcrypto library"
        },
        {
          "id": "4HCRGxmW7korCXCjG3JFzN",
          "type": "blockchain_dlt",
          "url": "https://github.com/axelarnetwork/axelarate-community",
          "description": "Axelar node spinup script for users and validators"
        }
      ],
      "impacts": [
        {
          "id": "5GDMbr3OaINkBvhwyUdE5o",
          "title": "Network not being able to confirm new transactions (Total network shutdown)",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "49RFOtpLsP0zX72KF0c79i",
          "title": "Unintended permanent chain split requiring hard fork (Network partition requiring hard fork)",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "44jCTyB1rHiZoqnH5PjcMJ",
          "title": "Direct loss of funds",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "1KcmZxyDjfhHMqK04Lcf94",
          "title": "Permanent freezing of funds (fix requires hardfork)",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "7Km6RDPTHTSkTrUTGdArqa",
          "title": "Any governance voting result manipulation",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "7yQquRQqGaaVriSlJAfTxA",
          "title": "Non-determinism in the network and consensus failure",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "62upZaY9o0FqFugaUi5enU",
          "title": "Cryptographic vulnerabilities",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "4j2YNF5SOqdxg2xtnOdm1",
          "title": "Vulnerabilities related to validator voting manipulation on external chain events",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "n8Sn9CCqSSD9baLgXWJnY",
          "title": "Direct theft of any user funds, whether at-rest or in-motion",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "e7xxhDLbIbTg5roArsP14",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "20fxlEViVbi1dlATuRPPzf",
          "title": "Insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1PfWgIj2xSFITVUbTzZOMV",
          "title": "Unauthorized mint/burn/transfer of wrapped assets",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3q2HLBrXffrGuRUofkYpUk",
          "title": "Privilege escalation",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6goDGwwwKbSbDvmNNTjEMR",
          "title": "Unintended chain split (Network partition)",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "2U5ymHnZRQE7F33VXovKe1",
          "title": "Transient consensus failures",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "wZP6tLl5DpcJFoWzmKCfn",
          "title": "Privilege escalation",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "1RjFZq7In1CgEgCtvTpCzI",
          "title": "Theft or freezing of inflation rewards",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "690t3CLg0JpSYiqTeBU9h",
          "title": "Temporary freezing of funds for a minimum of 1 hour",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "1ROi5rB75zr5ako0h7rDr4",
          "title": "Invalid command execution",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "s5c8Te9iR3mKdHQN2iSzc",
          "title": "High compute consumption by validator nodes",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "59DMcJgkUnPHu6eq6jjfaY",
          "title": "Attacks against light clients",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "5Nz0951vsijhQcjcRRMUlt",
          "title": "DoS of greater than 30% of validator or miner nodes and does not shut down the network",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "3LKPxuoGlRS9iPOUvBgNdj",
          "title": "Privilege Escalation causing DoS",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "7t2X9GgerhpIuNIhBSI7I2",
          "title": "Smart contract unable to operate due to lack of funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "1PwD5MzIu945jzmq4wITpc",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "mWKKebV8hyXDsWZxl6ddJ",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "297wHtv1IE8GdL9CHTTsH2",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "211iStKDDsgPVsYVTODdhg",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "4Qi2FCk2pjG4UHflTw4hmU",
          "title": "DoS of greater than 10% but less than 30% of validator nodes and does not shut down the network",
          "type": "blockchain_dlt",
          "severity": "low"
        },
        {
          "id": "5tiNp1uNvQqGpmwlkPVPnr",
          "title": "Significant underpricing of transaction fees relative to computation time",
          "type": "blockchain_dlt",
          "severity": "low"
        },
        {
          "id": "5LP19WhmoKMXKf7v8jkOON",
          "title": "Smart contract fails to deliver promised returns, but doesn’t lose value",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "Axelar Network is a decentralized interoperability network connecting all blockchains, assets and apps through a universal set of protocols and APIs.\n\nFor more information about Axelar Network, please visit [https://axelar.network/](https://axelar.network/).  \n",
      "prioritizedVulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table. Only impacts that cause severe network disruption or a loss of funds of over or equal to $2M is considered as Critical. \n\n__Blockchain/DLT__\n\n__Critical__\n  - Network not being able to confirm new transactions (Total network shutdown)\n  - Unintended permanent chain split requiring hard fork (Network partition requiring hard fork)\n  - Direct loss of funds\n  - Permanent freezing of funds (fix requires hardfork)\n  - Any governance voting result manipulation\n  - Non-determinism in the network and consensus failure\n  - Cryptographic vulnerabilities\n  - Vulnerabilities related to validator voting manipulation on external chain events\n\n__High__\n  - Unintended chain split (Network partition)\n  - Transient consensus failures\n  - Privilege escalation\n  - Theft or freezing of inflation rewards\n\n__Medium__\n  - High compute consumption by validator/mining nodes\n  - Attacks against thin clients\n  - DoS of greater than 30% of validator or miner nodes and does not shut down the network\n  - Miner-extractable value (MEV)\n\n__Low__\n  - DoS of greater than 10% but less than 30% of validator or miner nodes and does not shut down the network\n  - Underpricing transaction fees relative to computation time\n\n__Smart Contracts__\n\n__Critical__\n  - Direct theft of any user funds, whether at-rest or in-motion\n  - Permanent freezing of funds\n  - Insolvency\n  - Unauthorized mint/burn/transfer of wrapped assets\n  - Privilege escalation\n\n__High__\n  - Temporary freezing of funds for a minimum of 1 hour\n\n__Medium__\n  - Smart contract unable to operate due to lack of funds \n  - Block stuffing for profit\n  - Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)\n  - Theft of gas\n  - Unbounded gas consumption \n\n__Low__\n  - Smart contract fails to deliver promised returns, but doesn’t lose value\n\nIn case of discrepancy between [Immunefi Vulnerability Severity Classification System V2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2/) and Axelar Network’s classification above, Axelar Network’s classification will be followed.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\n\nAll Critical Blockchain/DLT and Smart Contract bug reports require a PoC to be eligible for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nIn addition to Immunefi’s Vulnerability Severity Classification System, Axelar Network classifies the following vulnerabilities as follows. In case of discrepancy, the one below will be followed.\n\nCritical\n  - Loss of funds of over or equal to $500,000\n\nHigh\n  - Vulnerabilities that result in loss of funds of less than $500,000\n\nMedium\n  - Vulnerabilities that result in loss of funds of less than $50,000\n\nLow\n  - Vulnerabilities that result in loss of funds of less than $10,000\n\nAny vulnerabilities discussed within the github issues below are considered vulnerabilities already known to Axelar, and will not be eligible for a reward:\n\n  - [https://github.com/axelarnetwork/axelar-core/issues](https://github.com/axelarnetwork/axelar-core/issues) \n  - [https://github.com/axelarnetwork/axelar-cgp-solidity/issues](https://github.com/axelarnetwork/axelar-cgp-solidity/issues) \n  - [https://github.com/axelarnetwork/tofnd/issues](https://github.com/axelarnetwork/tofnd/issues)\n  - [https://github.com/axelarnetwork/tofn/issues](https://github.com/axelarnetwork/tofn/issues)\n  - [https://github.com/axelarnetwork/axelarate-community/issues ](https://github.com/axelarnetwork/axelarate-community/issues)\n\nCritical blockchain/ smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. There is no minimum reward for Critical smart contract vulnerabilities.  \n\nBug reports that are classified as High will be rewarded USD 10 000 and up to USD 50 000 at the Axelar team’s discretion. High impact rewards for the project bug bounty program are scaled based on an internally established team criteria, taking into account the exploitability of the bug, the impact it causes, and the likelihood of the vulnerability presenting itself, which is especially factored in with bug reports requiring multiple conditions to be met that are currently not in-place. However, there is a minimum reward of USD 10 000 for High severity level, rewards will be provided at the determined fair value by the team depending on these conditions, assuming that the bug report is in-scope of the bug bounty program. Only impacts that cause severe network disruption or a loss of funds of over or equal to $2M is considered as Critical \n\nAxelar Network requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. We use a service provider, Jumio, to collect this information and will send you a link to the KYC application if your report is deemed eligible for bounties. The information needed is\n\n  - A piece of government issued photo ID such as passport or driver’s license\n  - A live webcam facial recognition scan to match biometrics with submitted photo ID\n\nThe collection of this information will be done by the project team.\n\nPayouts are handled by the __Axelar Network__ team directly and are denominated in USD. However, payouts are done in __USDC__.\n",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n  - Third party dependencies, especially Cosmos SDK dependencies\n  - In the tofn repository, the only thing in scope is src/ecdsa/mod.rs and it’s project dependencies, excluding third-party dependencies\n  - In the tofnd repository, the only thing in scope is parts related to src/ecdsa/mod.rs in tofn repository\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "All smart contracts of Axelar Network can be found at [https://github.com/axelarnetwork/solidity-cgp-gateway/tree/main/src](https://github.com/axelarnetwork/solidity-cgp-gateway/tree/main/src). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. In tofn, the only thing in scope is src/ecdsa/mod.rs and it’s project dependencies, excluding third-party dependencies. Only tofnd pieces relating to the mod.rs file in tofn is in scope. For the Axelar Gateway contracts, although only the proxy contracts are only listed as in-scope, the respective implementation contracts are also counted in scope. When reporting a bug, please make sure to select the relevant proxy smart contract as the target. \n\nThough only the proxy contracts are listed as in-scope, current implementation and any further updates to the implementation contracts are considered in scope. When reporting a bug, please make sure to select the relevant proxy smart contract as the target. \n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "AMM",
          "Crosschain Liquidity"
        ],
        "projectType": [
          "Defi",
          "NFT"
        ],
        "ecosystem": [
          "Avalanche",
          "ETH",
          "Fantom",
          "Polygon"
        ],
        "programType": [
          "Blockchain/DLT",
          "Smart Contract"
        ],
        "language": [
          "Go",
          "Rust"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Blockchain/DLT"
        ],
        "blockchain_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $2,250,000"
          },
          {
            "level": "High",
            "payout": "USD $10,000 to USD $50,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $2,250,000"
          },
          {
            "level": "High",
            "payout": "USD $10,000 to USD $50,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Axelar Network is a decentralized interoperability network connecting all blockchains, assets and apps through a universal set of protocols and APIs.\"), mdx(\"p\", null, \"For more information about Axelar Network, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://axelar.network/\"\n  }, \"https://axelar.network/\"), \".  \"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Axelar Network is a decentralized interoperability network connecting all blockchains, assets and apps through a universal set of protocols and APIs.</p><p>For more information about Axelar Network, please visit <a href=\"https://axelar.network/\">https://axelar.network/</a>.  </p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Impacts in Scope\")), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table. Only impacts that cause severe network disruption or a loss of funds of over or equal to $2M is considered as Critical. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Blockchain/DLT\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Critical\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Network not being able to confirm new transactions (Total network shutdown)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unintended permanent chain split requiring hard fork (Network partition requiring hard fork)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct loss of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of funds (fix requires hardfork)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any governance voting result manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Non-determinism in the network and consensus failure\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cryptographic vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities related to validator voting manipulation on external chain events\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"High\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unintended chain split (Network partition)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Transient consensus failures\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Privilege escalation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft or freezing of inflation rewards\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Medium\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"High compute consumption by validator/mining nodes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks against thin clients\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DoS of greater than 30% of validator or miner nodes and does not shut down the network\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Miner-extractable value (MEV)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Low\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DoS of greater than 10% but less than 30% of validator or miner nodes and does not shut down the network\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Underpricing transaction fees relative to computation time\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Critical\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct theft of any user funds, whether at-rest or in-motion\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Insolvency\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unauthorized mint/burn/transfer of wrapped assets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Privilege escalation\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"High\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Temporary freezing of funds for a minimum of 1 hour\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Medium\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract unable to operate due to lack of funds \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Block stuffing for profit\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of gas\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unbounded gas consumption \")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Low\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract fails to deliver promised returns, but doesn\\u2019t lose value\")), mdx(\"p\", null, \"In case of discrepancy between \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2/\"\n  }, \"Immunefi Vulnerability Severity Classification System V2\"), \" and Axelar Network\\u2019s classification above, Axelar Network\\u2019s classification will be followed.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p><strong>Impacts in Scope</strong></p><p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table. Only impacts that cause severe network disruption or a loss of funds of over or equal to $2M is considered as Critical. </p><p><strong>Blockchain/DLT</strong></p><p><strong>Critical</strong></p><ul><li>Network not being able to confirm new transactions (Total network shutdown)</li><li>Unintended permanent chain split requiring hard fork (Network partition requiring hard fork)</li><li>Direct loss of funds</li><li>Permanent freezing of funds (fix requires hardfork)</li><li>Any governance voting result manipulation</li><li>Non-determinism in the network and consensus failure</li><li>Cryptographic vulnerabilities</li><li>Vulnerabilities related to validator voting manipulation on external chain events</li></ul><p><strong>High</strong></p><ul><li>Unintended chain split (Network partition)</li><li>Transient consensus failures</li><li>Privilege escalation</li><li>Theft or freezing of inflation rewards</li></ul><p><strong>Medium</strong></p><ul><li>High compute consumption by validator/mining nodes</li><li>Attacks against thin clients</li><li>DoS of greater than 30% of validator or miner nodes and does not shut down the network</li><li>Miner-extractable value (MEV)</li></ul><p><strong>Low</strong></p><ul><li>DoS of greater than 10% but less than 30% of validator or miner nodes and does not shut down the network</li><li>Underpricing transaction fees relative to computation time</li></ul><p><strong>Smart Contracts</strong></p><p><strong>Critical</strong></p><ul><li>Direct theft of any user funds, whether at-rest or in-motion</li><li>Permanent freezing of funds</li><li>Insolvency</li><li>Unauthorized mint/burn/transfer of wrapped assets</li><li>Privilege escalation</li></ul><p><strong>High</strong></p><ul><li>Temporary freezing of funds for a minimum of 1 hour</li></ul><p><strong>Medium</strong></p><ul><li>Smart contract unable to operate due to lack of funds </li><li>Block stuffing for profit</li><li>Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)</li><li>Theft of gas</li><li>Unbounded gas consumption </li></ul><p><strong>Low</strong></p><ul><li>Smart contract fails to deliver promised returns, but doesn’t lose value</li></ul><p>In case of discrepancy between <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2/\">Immunefi Vulnerability Severity Classification System V2</a> and Axelar Network’s classification above, Axelar Network’s classification will be followed.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\"), mdx(\"p\", null, \"All Critical Blockchain/DLT and Smart Contract bug reports require a PoC to be eligible for a reward. Explanations and statements are not accepted as PoC and code is required.\"), mdx(\"p\", null, \"In addition to Immunefi\\u2019s Vulnerability Severity Classification System, Axelar Network classifies the following vulnerabilities as follows. In case of discrepancy, the one below will be followed.\"), mdx(\"p\", null, \"Critical\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of funds of over or equal to $500,000\")), mdx(\"p\", null, \"High\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities that result in loss of funds of less than $500,000\")), mdx(\"p\", null, \"Medium\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities that result in loss of funds of less than $50,000\")), mdx(\"p\", null, \"Low\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities that result in loss of funds of less than $10,000\")), mdx(\"p\", null, \"Any vulnerabilities discussed within the github issues below are considered vulnerabilities already known to Axelar, and will not be eligible for a reward:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/axelarnetwork/axelar-core/issues\"\n  }, \"https://github.com/axelarnetwork/axelar-core/issues\"), \" \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/axelarnetwork/axelar-cgp-solidity/issues\"\n  }, \"https://github.com/axelarnetwork/axelar-cgp-solidity/issues\"), \" \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/axelarnetwork/tofnd/issues\"\n  }, \"https://github.com/axelarnetwork/tofnd/issues\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/axelarnetwork/tofn/issues\"\n  }, \"https://github.com/axelarnetwork/tofn/issues\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/axelarnetwork/axelarate-community/issues\"\n  }, \"https://github.com/axelarnetwork/axelarate-community/issues \"))), mdx(\"p\", null, \"Critical blockchain/ smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. There is no minimum reward for Critical smart contract vulnerabilities.  \"), mdx(\"p\", null, \"Bug reports that are classified as High will be rewarded USD 10 000 and up to USD 50 000 at the Axelar team\\u2019s discretion. High impact rewards for the project bug bounty program are scaled based on an internally established team criteria, taking into account the exploitability of the bug, the impact it causes, and the likelihood of the vulnerability presenting itself, which is especially factored in with bug reports requiring multiple conditions to be met that are currently not in-place. However, there is a minimum reward of USD 10 000 for High severity level, rewards will be provided at the determined fair value by the team depending on these conditions, assuming that the bug report is in-scope of the bug bounty program. Only impacts that cause severe network disruption or a loss of funds of over or equal to $2M is considered as Critical \"), mdx(\"p\", null, \"Axelar Network requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. We use a service provider, Jumio, to collect this information and will send you a link to the KYC application if your report is deemed eligible for bounties. The information needed is\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A piece of government issued photo ID such as passport or driver\\u2019s license\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A live webcam facial recognition scan to match biometrics with submitted photo ID\")), mdx(\"p\", null, \"The collection of this information will be done by the project team.\"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Axelar Network\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.</p><p>All Critical Blockchain/DLT and Smart Contract bug reports require a PoC to be eligible for a reward. Explanations and statements are not accepted as PoC and code is required.</p><p>In addition to Immunefi’s Vulnerability Severity Classification System, Axelar Network classifies the following vulnerabilities as follows. In case of discrepancy, the one below will be followed.</p><p>Critical</p><ul><li>Loss of funds of over or equal to $500,000</li></ul><p>High</p><ul><li>Vulnerabilities that result in loss of funds of less than $500,000</li></ul><p>Medium</p><ul><li>Vulnerabilities that result in loss of funds of less than $50,000</li></ul><p>Low</p><ul><li>Vulnerabilities that result in loss of funds of less than $10,000</li></ul><p>Any vulnerabilities discussed within the github issues below are considered vulnerabilities already known to Axelar, and will not be eligible for a reward:</p><ul><li><a href=\"https://github.com/axelarnetwork/axelar-core/issues\">https://github.com/axelarnetwork/axelar-core/issues</a> </li><li><a href=\"https://github.com/axelarnetwork/axelar-cgp-solidity/issues\">https://github.com/axelarnetwork/axelar-cgp-solidity/issues</a> </li><li><a href=\"https://github.com/axelarnetwork/tofnd/issues\">https://github.com/axelarnetwork/tofnd/issues</a></li><li><a href=\"https://github.com/axelarnetwork/tofn/issues\">https://github.com/axelarnetwork/tofn/issues</a></li><li><a href=\"https://github.com/axelarnetwork/axelarate-community/issues\">https://github.com/axelarnetwork/axelarate-community/issues </a></li></ul><p>Critical blockchain/ smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. There is no minimum reward for Critical smart contract vulnerabilities.  </p><p>Bug reports that are classified as High will be rewarded USD 10 000 and up to USD 50 000 at the Axelar team’s discretion. High impact rewards for the project bug bounty program are scaled based on an internally established team criteria, taking into account the exploitability of the bug, the impact it causes, and the likelihood of the vulnerability presenting itself, which is especially factored in with bug reports requiring multiple conditions to be met that are currently not in-place. However, there is a minimum reward of USD 10 000 for High severity level, rewards will be provided at the determined fair value by the team depending on these conditions, assuming that the bug report is in-scope of the bug bounty program. Only impacts that cause severe network disruption or a loss of funds of over or equal to $2M is considered as Critical </p><p>Axelar Network requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. We use a service provider, Jumio, to collect this information and will send you a link to the KYC application if your report is deemed eligible for bounties. The information needed is</p><ul><li>A piece of government issued photo ID such as passport or driver’s license</li><li>A live webcam facial recognition scan to match biometrics with submitted photo ID</li></ul><p>The collection of this information will be done by the project team.</p><p>Payouts are handled by the <strong>Axelar Network</strong> team directly and are denominated in USD. However, payouts are done in <strong>USDC</strong>.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Third party dependencies, especially Cosmos SDK dependencies\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In the tofn repository, the only thing in scope is src/ecdsa/mod.rs and it\\u2019s project dependencies, excluding third-party dependencies\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In the tofnd repository, the only thing in scope is parts related to src/ecdsa/mod.rs in tofn repository\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li><li>Third party dependencies, especially Cosmos SDK dependencies</li><li>In the tofn repository, the only thing in scope is src/ecdsa/mod.rs and it’s project dependencies, excluding third-party dependencies</li><li>In the tofnd repository, the only thing in scope is parts related to src/ecdsa/mod.rs in tofn repository</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of Axelar Network can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/axelarnetwork/solidity-cgp-gateway/tree/main/src\"\n  }, \"https://github.com/axelarnetwork/solidity-cgp-gateway/tree/main/src\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. In tofn, the only thing in scope is src/ecdsa/mod.rs and it\\u2019s project dependencies, excluding third-party dependencies. Only tofnd pieces relating to the mod.rs file in tofn is in scope. For the Axelar Gateway contracts, although only the proxy contracts are only listed as in-scope, the respective implementation contracts are also counted in scope. When reporting a bug, please make sure to select the relevant proxy smart contract as the target. \"), mdx(\"p\", null, \"Though only the proxy contracts are listed as in-scope, current implementation and any further updates to the implementation contracts are considered in scope. When reporting a bug, please make sure to select the relevant proxy smart contract as the target. \"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of Axelar Network can be found at <a href=\"https://github.com/axelarnetwork/solidity-cgp-gateway/tree/main/src\">https://github.com/axelarnetwork/solidity-cgp-gateway/tree/main/src</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. In tofn, the only thing in scope is src/ecdsa/mod.rs and it’s project dependencies, excluding third-party dependencies. Only tofnd pieces relating to the mod.rs file in tofn is in scope. For the Axelar Gateway contracts, although only the proxy contracts are only listed as in-scope, the respective implementation contracts are also counted in scope. When reporting a bug, please make sure to select the relevant proxy smart contract as the target. </p><p>Though only the proxy contracts are listed as in-scope, current implementation and any further updates to the implementation contracts are considered in scope. When reporting a bug, please make sure to select the relevant proxy smart contract as the target. </p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

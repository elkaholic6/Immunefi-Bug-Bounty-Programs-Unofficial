{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "ceres",
      "slug": "ceres",
      "project": "Ceres",
      "maxBounty": 70000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7Cac9SXWPWlgKlHZEhjAM2/c4d868435e841de0a7054157282c74bf/Ceres_Logo.svg",
      "launchDate": "2022-08-09T12:30-06:00",
      "updatedDate": "2023-02-07T15:42:17.897Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "blockchain_dlt",
          "level": "critical",
          "payout": "USD $70,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "xOiEXmKVeMxhDejlkyA1N",
          "type": "blockchain_dlt",
          "url": "https://github.com/sora-xor/sora2-network/blob/master/pallets/ceres-governance-platform/src/lib.rs",
          "description": "ceres-governance-platform/src/lib"
        },
        {
          "id": "6BIy0AZQvoAFRYRmjGdXhp",
          "type": "blockchain_dlt",
          "url": "https://github.com/sora-xor/sora2-network/blob/master/pallets/ceres-launchpad/src/lib.rs",
          "description": "ceres-launchpad/src/lib"
        },
        {
          "id": "1MK4NYl5g0dFukYJd55qXo",
          "type": "blockchain_dlt",
          "url": "https://github.com/sora-xor/sora2-network/blob/master/pallets/ceres-liquidity-locker/src/lib.rs",
          "description": "ceres-liquidity-locker/src/lib"
        },
        {
          "id": "1Lwtl7e2jv97ltcMyigm4Z",
          "type": "blockchain_dlt",
          "url": "https://github.com/sora-xor/sora2-network/blob/master/pallets/ceres-staking/src/lib.rs",
          "description": "ceres-staking/src/lib"
        },
        {
          "id": "5IAVbRg34WmgXQXo14MAk0",
          "type": "blockchain_dlt",
          "url": "https://github.com/sora-xor/sora2-network/blob/master/pallets/ceres-token-locker/src/lib.rs",
          "description": "ceres-token-locker/src/lib"
        },
        {
          "id": "ENF9y0jSRJLEJ63M2bMTD",
          "type": "blockchain_dlt",
          "url": "https://github.com/sora-xor/sora2-network/blob/master/pallets/demeter-farming-platform/src/lib.rs",
          "description": "demeter-farming-platform/src/lib"
        }
      ],
      "impacts": [
        {
          "id": "5KNOuzvPZPbzkGeN01ECPv",
          "title": "Direct loss of funds",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "1tGgVbuO7uW7s0ot4uiITS",
          "title": "Permanent freezing of funds (fix requires hardfork)",
          "type": "blockchain_dlt",
          "severity": "critical"
        }
      ],
      "programOverview": "Ceres is one of the first projects on SORA (XOR) blockchain. Ceres is developing DeFi services and utilities for new projects and tokens on Polkaswap (Cross-chain exchange on SORA/Polkadot). \n\nCeres ecosystem consists of four concepts:\n\n  - Burning - Ceres tokens will be burned over time and supply will be constantly reducing.\n  - Governance - Ceres token holders can influence decisions concerning the project such as proposing or deciding on new feature proposals.\n  - Airdrops - Every Ceres holder can get each of three Ceres Airdrop tokens which will have its own platforms with different purposes.\n  - Treasury - Community will be making proposals for the use and Ceres holders will have the right to vote for them.\n\nThere are also 3 Airdrop tokens for Ceres holders: Demeter, Hermes and Apollo. Each of the tokens will have its own platform with different purposes. Fees from those platforms will be used for burning and other ecosystem uses.\n\nThese are the current products so far:\n\n  - Ceres Tools (like Dextools but for Polkaswap) - [https://tools.cerestoken.io](https://tools.cerestoken.io/)\n  - Liquidity Locker - [https://dapps.cerestoken.io/liquidity_locker](https://dapps.cerestoken.io/liquidity_locker) \n  - Token Locker - [https://dapps.cerestoken.io/token_locker](https://dapps.cerestoken.io/token_locker) \n  - Ceres Governance - [https://dapps.cerestoken.io/governance](https://dapps.cerestoken.io/governance) \n  - Demeter Farming Platform - [https://farming.deotoken.io](https://farming.deotoken.io/)\n  - DEO Arena - [https://deoarena.io](https://deoarena.io/) (first Play-to-Earn game on SORA)\n  - Upcoming products - Ceres Launchpad\n\nFor more information about Ceres, please visit [https://cerestoken.io](https://cerestoken.io)",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate classifications for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\n\nAll bug reports must come with a Proof of Concept (PoC) with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nPayouts are handled by the __SORA__ team directly and are denominated in USD. However, payouts are done in __XOR__, __VAL__, __XSTUSD__, or __PSWAP__, at the discretion of the team.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generate significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "All smart contracts of Ceres can be found at [https://github.com/sora-xor/sora2-network](https://github.com/sora-xor/sora2-network). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\nIf an impact can be caused to any other asset managed by Ceres that isnâ€™t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project.",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": null,
        "projectType": [
          "Blockchain",
          "Infrastructure"
        ],
        "ecosystem": null,
        "programType": [
          "Blockchain/DLT"
        ],
        "language": null
      },
      "legacy": {
        "technologies": [
          "Blockchain/DLT"
        ],
        "blockchain_rewards": [
          {
            "level": "Critical",
            "payout": "USD $70,000"
          }
        ],
        "smartcontract_rewards": [],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Ceres is one of the first projects on SORA (XOR) blockchain. Ceres is developing DeFi services and utilities for new projects and tokens on Polkaswap (Cross-chain exchange on SORA/Polkadot). \"), mdx(\"p\", null, \"Ceres ecosystem consists of four concepts:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Burning - Ceres tokens will be burned over time and supply will be constantly reducing.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Governance - Ceres token holders can influence decisions concerning the project such as proposing or deciding on new feature proposals.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Airdrops - Every Ceres holder can get each of three Ceres Airdrop tokens which will have its own platforms with different purposes.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Treasury - Community will be making proposals for the use and Ceres holders will have the right to vote for them.\")), mdx(\"p\", null, \"There are also 3 Airdrop tokens for Ceres holders: Demeter, Hermes and Apollo. Each of the tokens will have its own platform with different purposes. Fees from those platforms will be used for burning and other ecosystem uses.\"), mdx(\"p\", null, \"These are the current products so far:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ceres Tools (like Dextools but for Polkaswap) - \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://tools.cerestoken.io/\"\n  }, \"https://tools.cerestoken.io\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Liquidity Locker - \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://dapps.cerestoken.io/liquidity_locker\"\n  }, \"https://dapps.cerestoken.io/liquidity_locker\"), \" \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Token Locker - \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://dapps.cerestoken.io/token_locker\"\n  }, \"https://dapps.cerestoken.io/token_locker\"), \" \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ceres Governance - \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://dapps.cerestoken.io/governance\"\n  }, \"https://dapps.cerestoken.io/governance\"), \" \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Demeter Farming Platform - \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://farming.deotoken.io/\"\n  }, \"https://farming.deotoken.io\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DEO Arena - \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://deoarena.io/\"\n  }, \"https://deoarena.io\"), \" (first Play-to-Earn game on SORA)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Upcoming products - Ceres Launchpad\")), mdx(\"p\", null, \"For more information about Ceres, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://cerestoken.io\"\n  }, \"https://cerestoken.io\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Ceres is one of the first projects on SORA (XOR) blockchain. Ceres is developing DeFi services and utilities for new projects and tokens on Polkaswap (Cross-chain exchange on SORA/Polkadot). </p><p>Ceres ecosystem consists of four concepts:</p><ul><li>Burning - Ceres tokens will be burned over time and supply will be constantly reducing.</li><li>Governance - Ceres token holders can influence decisions concerning the project such as proposing or deciding on new feature proposals.</li><li>Airdrops - Every Ceres holder can get each of three Ceres Airdrop tokens which will have its own platforms with different purposes.</li><li>Treasury - Community will be making proposals for the use and Ceres holders will have the right to vote for them.</li></ul><p>There are also 3 Airdrop tokens for Ceres holders: Demeter, Hermes and Apollo. Each of the tokens will have its own platform with different purposes. Fees from those platforms will be used for burning and other ecosystem uses.</p><p>These are the current products so far:</p><ul><li>Ceres Tools (like Dextools but for Polkaswap) - <a href=\"https://tools.cerestoken.io/\">https://tools.cerestoken.io</a></li><li>Liquidity Locker - <a href=\"https://dapps.cerestoken.io/liquidity_locker\">https://dapps.cerestoken.io/liquidity_locker</a> </li><li>Token Locker - <a href=\"https://dapps.cerestoken.io/token_locker\">https://dapps.cerestoken.io/token_locker</a> </li><li>Ceres Governance - <a href=\"https://dapps.cerestoken.io/governance\">https://dapps.cerestoken.io/governance</a> </li><li>Demeter Farming Platform - <a href=\"https://farming.deotoken.io/\">https://farming.deotoken.io</a></li><li>DEO Arena - <a href=\"https://deoarena.io/\">https://deoarena.io</a> (first Play-to-Earn game on SORA)</li><li>Upcoming products - Ceres Launchpad</li></ul><p>For more information about Ceres, please visit <a href=\"https://cerestoken.io\">https://cerestoken.io</a></p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate classifications for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\"), mdx(\"p\", null, \"All bug reports must come with a Proof of Concept (PoC) with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"SORA\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"XOR\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"VAL\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"XSTUSD\"), \", or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"PSWAP\"), \", at the discretion of the team.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate classifications for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.</p><p>All bug reports must come with a Proof of Concept (PoC) with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.</p><p>Payouts are handled by the <strong>SORA</strong> team directly and are denominated in USD. However, payouts are done in <strong>XOR</strong>, <strong>VAL</strong>, <strong>XSTUSD</strong>, or <strong>PSWAP</strong>, at the discretion of the team.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generate significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generate significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of Ceres can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/sora-xor/sora2-network\"\n  }, \"https://github.com/sora-xor/sora2-network\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\"), mdx(\"p\", null, \"If an impact can be caused to any other asset managed by Ceres that isn\\u2019t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of Ceres can be found at <a href=\"https://github.com/sora-xor/sora2-network\">https://github.com/sora-xor/sora2-network</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.</p><p>If an impact can be caused to any other asset managed by Ceres that isnâ€™t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

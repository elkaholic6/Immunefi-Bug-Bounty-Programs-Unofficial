{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "zksync",
      "slug": "zksync",
      "project": "zkSync",
      "maxBounty": 2300000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2OnwlTaKhn6OY9untzW1q/20c2f92c10ce370a8b1fb880d229e6ac/zkSync_Logo.svg",
      "launchDate": "2022-03-15T14:00-07:00",
      "updatedDate": "2022-12-12T21:01:05.789Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "blockchain_dlt",
          "level": "critical",
          "payout": "USD $500,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "high",
          "payout": "USD $10,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to USD $2,300,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $50,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": false
        },
        {
          "assetType": "websites_and_applications",
          "level": "critical",
          "payout": "USD $50,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "high",
          "payout": "USD $5,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "2KIkMOMqHfrRygaP6eHH5A",
          "type": "smart_contract",
          "url": "https://github.com/matter-labs/zksync/blob/breaking/contracts/contracts/UpgradeGatekeeper.sol",
          "description": "Upgrade gatekeeper"
        },
        {
          "id": "4C0B7klZkXWUphPVs79fzF",
          "type": "smart_contract",
          "url": "https://github.com/matter-labs/zksync/blob/breaking/contracts/contracts/Proxy.sol",
          "description": "Proxy"
        },
        {
          "id": "5yTzCjWeVTSPgR434FcTKG",
          "type": "smart_contract",
          "url": "https://github.com/matter-labs/zksync/blob/breaking/contracts/contracts/ZkSync.sol",
          "description": "zkSync target"
        },
        {
          "id": "6bilf9U9vhoGcUVDpx5XNq",
          "type": "smart_contract",
          "url": "https://github.com/matter-labs/zksync/blob/breaking/contracts/contracts/AdditionalZkSync.sol",
          "description": "Additional zkSync target"
        },
        {
          "id": "4UHNPtw6ufUcfeVQ88OgW7",
          "type": "smart_contract",
          "url": "https://github.com/matter-labs/zksync/blob/breaking/contracts/contracts/Verifier.sol",
          "description": "Verifier target"
        },
        {
          "id": "4mTbtkI5tfjsPfydLUHnIA",
          "type": "smart_contract",
          "url": "https://github.com/matter-labs/zksync/blob/breaking/contracts/contracts/Governance.sol",
          "description": "Governance target"
        },
        {
          "id": "EtXyKEyMS3O6qZeSdBPtU",
          "type": "smart_contract",
          "url": "https://github.com/matter-labs/zksync/blob/breaking/contracts/contracts/TokenGovernance.sol",
          "description": "Token governance"
        },
        {
          "id": "1uDwUySmV9zuWOowAZnLhr",
          "type": "smart_contract",
          "url": "https://github.com/matter-labs/zksync/blob/breaking/contracts/contracts/ZkSyncNFTFactory.sol",
          "description": "NFT factory"
        },
        {
          "id": "2OztY7xwi5PeNQz5pZP0OS",
          "type": "blockchain_dlt",
          "url": "https://github.com/matter-labs/zksync/tree/master/core/lib/circuit",
          "description": "ZK-SNARK Circuits"
        },
        {
          "id": "4JahbPWXIwardoVadby6gh",
          "type": "blockchain_dlt",
          "url": "https://github.com/matter-labs/zksync/tree/master/core/lib/circuit/src/circuit.rs",
          "description": "ZK-SNARK Circuits"
        },
        {
          "id": "6oVV69FWRXUkOIFVJuxFV5",
          "type": "blockchain_dlt",
          "url": "https://github.com/matter-labs/zksync/tree/master/core/lib/circuit/src/exit_circuit.rs",
          "description": "ZK-SNARK Circuits"
        },
        {
          "id": "5RYerJsPzZLx0syF4mvqht",
          "type": "blockchain_dlt",
          "url": "https://github.com/matter-labs/zksync/tree/master/core/lib/circuit/src/witness/mod.rs",
          "description": "ZK-SNARK Circuits"
        },
        {
          "id": "5EfG8quE7pbkGrDCuG3L96",
          "type": "blockchain_dlt",
          "url": "https://github.com/matter-labs/zksync/tree/master/core/lib/circuit/src/witness/mint_nft.rs",
          "description": "ZK-SNARK Circuits"
        },
        {
          "id": "1RYmjqsF0z6qqdaMAwQ1WR",
          "type": "blockchain_dlt",
          "url": "https://github.com/matter-labs/zksync/tree/master/core/lib/circuit/src/witness/noop.rs",
          "description": "ZK-SNARK Circuits"
        },
        {
          "id": "1JfwFSpo0nZFAaI31LmARS",
          "type": "blockchain_dlt",
          "url": "https://github.com/matter-labs/zksync/tree/master/core/lib/circuit/src/witness/withdraw.rs",
          "description": "ZK-SNARK Circuits"
        },
        {
          "id": "5EkDJ1rwEHDKUE3yCyTpgX",
          "type": "blockchain_dlt",
          "url": "https://github.com/matter-labs/zksync/tree/master/core/lib/circuit/src/witness/swap.rs",
          "description": "ZK-SNARK Circuits"
        },
        {
          "id": "72BDZbEm3YAf9VOIzXXCNq",
          "type": "blockchain_dlt",
          "url": "https://github.com/matter-labs/zksync/tree/master/core/lib/circuit/src/witness/withdraw_nft.rs",
          "description": "ZK-SNARK Circuits"
        },
        {
          "id": "5CiD7r99UHKoxzvwAeI6HK",
          "type": "blockchain_dlt",
          "url": "https://github.com/matter-labs/zksync/tree/master/core/lib/circuit/src/witness/deposit.rs",
          "description": "ZK-SNARK Circuits"
        },
        {
          "id": "5WI2Iepavdz2X4XRvjId8O",
          "type": "blockchain_dlt",
          "url": "https://github.com/matter-labs/zksync/tree/master/core/lib/circuit/src/witness/transfer.rs",
          "description": "ZK-SNARK Circuits"
        },
        {
          "id": "6AHcklgjq2jIsATRjDhumE",
          "type": "blockchain_dlt",
          "url": "https://github.com/matter-labs/zksync/tree/master/core/lib/circuit/src/witness/transfer_to_new.rs",
          "description": "ZK-SNARK Circuits"
        },
        {
          "id": "36qsWHPQflEewdpMXYPHam",
          "type": "blockchain_dlt",
          "url": "https://github.com/matter-labs/zksync/tree/master/core/lib/circuit/src/witness/forced_exit.rs",
          "description": "ZK-SNARK Circuits"
        },
        {
          "id": "3BxO6MQ4XJWrBWsz1Y2KeS",
          "type": "blockchain_dlt",
          "url": "https://github.com/matter-labs/zksync/tree/master/core/lib/circuit/src/witness/change_pubkey_offchain.rs",
          "description": "ZK-SNARK Circuits"
        },
        {
          "id": "UMHLvLHfxnobjF926EqW9",
          "type": "blockchain_dlt",
          "url": "https://github.com/matter-labs/zksync/tree/master/core/lib/circuit/src/witness/full_exit.rs",
          "description": "ZK-SNARK Circuits"
        },
        {
          "id": "6r4fRTPM73OkXX5cbXIz71",
          "type": "blockchain_dlt",
          "url": "https://github.com/matter-labs/zksync/tree/master/core/lib/circuit/src/witness/utils.rs",
          "description": "ZK-SNARK Circuits"
        },
        {
          "id": "7GylRhl6TyNj150NCvGLz1",
          "type": "blockchain_dlt",
          "url": "https://github.com/matter-labs/zksync/tree/master/core/lib/circuit/src/allocated_structures.rs",
          "description": "ZK-SNARK Circuits"
        },
        {
          "id": "6gAAQCY9OAWOzpW2FHwbD8",
          "type": "blockchain_dlt",
          "url": "https://github.com/matter-labs/zksync/tree/master/core/lib/circuit/src/utils.rs",
          "description": "ZK-SNARK Circuits"
        },
        {
          "id": "5I2br5038sEjWevoKJ87i5",
          "type": "blockchain_dlt",
          "url": "https://github.com/matter-labs/zksync/tree/master/core/lib/circuit/src/account.rs",
          "description": "ZK-SNARK Circuits"
        },
        {
          "id": "7gG9olyUZTFlcTC60BB0Yn",
          "type": "blockchain_dlt",
          "url": "https://github.com/matter-labs/zksync/tree/master/core/lib/circuit/src/element.rs",
          "description": "ZK-SNARK Circuits"
        },
        {
          "id": "6d0J797FXHjD3qRtQ4H9cP",
          "type": "blockchain_dlt",
          "url": "https://github.com/matter-labs/zksync/tree/master/core/lib/circuit/src/signature.rs",
          "description": "ZK-SNARK Circuits"
        },
        {
          "id": "1oECMbQA4CS61pjw0aH16T",
          "type": "blockchain_dlt",
          "url": "https://github.com/matter-labs/zksync/tree/master/core/lib/circuit/src/serialization.rs",
          "description": "ZK-SNARK Circuits"
        },
        {
          "id": "7fsNul1Ses423mqv2jnrAu",
          "type": "blockchain_dlt",
          "url": "https://github.com/matter-labs/zksync/tree/master/core/lib/circuit/src/operation.rs",
          "description": "ZK-SNARK Circuits"
        },
        {
          "id": "UW7XVdMqpEwWWQMxQrKGh",
          "type": "websites_and_applications",
          "url": "https://wallet.zksync.io",
          "description": "Wallet"
        },
        {
          "id": "6xYJbiwS5eOU5aUCKYyYZu",
          "type": "websites_and_applications",
          "url": "https://zkscan.io",
          "description": "Explorer"
        },
        {
          "id": "9tKt1blWpje2cikwnL1mL",
          "type": "websites_and_applications",
          "url": "https://link.zksync.io/",
          "description": "zkLink"
        },
        {
          "id": "44bGdVLHU8UZjxsh3H06p7",
          "type": "websites_and_applications",
          "url": "https://withdraw.zksync.io",
          "description": "Alternative Withdrawal"
        },
        {
          "id": "2GMG2aB0EZT1XsdFBluTyL",
          "type": "websites_and_applications",
          "url": "https://checkout.zksync.io/link",
          "description": "zkCheckout"
        }
      ],
      "impacts": [
        {
          "id": "1sJOukDgnZYa3DJN3N1lSs",
          "title": "Loss of user funds by permanent burning, freezing or direct theft",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3cOuoiIcTDq1Eti0LWVAzV",
          "title": "Network shutdown",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "15BBNNBczhsZ5Ktnep9Kxu",
          "title": "Double spending",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "dcVOFKd7QUx0uIRo4DNmN",
          "title": "Inability to generate a block for a priority operation that is added through a smart contract",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "4N07WZJPjLHGARv8QdHJpC",
          "title": "Minting fungible tokens not through a deposit",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "6CnXFtr8ps0pH1DbnbtObR",
          "title": "Ability to steal/burn/freeze other people's tokens",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "3rK59BiBBf3EGeepErDzdb",
          "title": "Leak of user data",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "7myarRdI2Kcm2jytY8INHP",
          "title": "Redirected funds by address modification",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "4KcB59KxxkdwozTUNu8Jm5",
          "title": "Site goes down",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "3pAYscegrK6ISIl71PAGpe",
          "title": "Temporary freezing of funds for at least 24 hours",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "2hENuk9YvwvX9uRBjSSrYq",
          "title": "Forceful activation of exodus mode",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "7AxUG4lAIqBmoheUXZ8L2p",
          "title": "Blocking of upgrade system",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6SUixvucSNK5kvh3Ak3HS",
          "title": "Ability to execute a transaction with changed signed parameters (e.g. sender/recipient/amount/tokenId/feeToken/...)",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "2JIkwBuCcEOaSK3bPmjCsk",
          "title": "Ability to create a block with public input information that is not enough to restore state transition",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "qrIxez7i02c7DaHqZjbBF",
          "title": "Smart contract gas drainage",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "1tmiOgxhJjXkuA2AziLpsE",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5k71Oua8W4cI35pbV4hNyd",
          "title": "Smart contract fails to deliver promised returns, but doesn’t lose value",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "zkSync is a scaling engine for Ethereum. Its current functionality scope includes low gas transfers of ETH and ERC20 tokens in the Ethereum network, atomic swaps & limit orders as well as native L2 NFT support. \n\nzkSync is built on ZK Rollup architecture. ZK Rollup is an L2 scaling solution in which all funds are held by a smart contract on the mainchain, while computation and storage are performed off-chain. For every Rollup block, a state transition zero-knowledge proof (SNARK) is generated and verified by the mainchain contract. This SNARK includes the proof of the validity of every single transaction in the Rollup block. Additionally, the public data update for every block is published over the mainchain network in the cheap calldata.\n\nFor more information about zkSync, please visit [https://zksync.io/](https://zksync.io/).  \n\nThis bug bounty program is focused on their smart contracts, ZK-SNARK circuits, web and app and is focused on preventing:\n\n  - Loss of user funds by permanent freezing or direct theft\n  - Temporary freezing of funds\n  - Smart contract destruction\n  - Double spending\n  - Ability to execute a transaction with changed signed parameters",
      "prioritizedVulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\nThe Blockchain/DLT impacts are only applicable for the ZK-SNARK Circuits assets in scope.\n\n__Smart Contracts__\n\n__Critical__\n  - Loss of user funds by permanent burning, freezing or direct theft\n  - Network shutdown\n\n__High__\n  - Temporary freezing of funds for at least 24 hours\n  - Forceful activation of exodus mode\n  - Blocking of upgrade system\n\n__Medium__\n  - Smart contract gas drainage\n  - Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)\n\n__Low__\n  - Smart contract fails to deliver promised returns, but doesn’t lose value \n\n__Blockchain/DLT ZK-SNARK Circuits__\n\n__Critical__\n  - Double spending\n  - Inability to generate a block for a priority operation that is added through a smart contract\n  - Minting fungible tokens not through a deposit\n  - Ability to steal/burn/freeze other people's tokens\n\n__High__\n  - Ability to execute a transaction with changed signed parameters (e.g. sender/recipient/amount/tokenId/feeToken/...)\n  - Ability to create a block with public input information that is not enough to restore state transition\n\n__Web/App__\n\n__Critical__\n  - Leak of user data\n  - Redirected funds by address modification\n  - Site goes down\n",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.  For the ZK-SNARK Circuits, the classification will be based on the impacts listed on the Impacts in Scope section below\n\nAll critical and high severity bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nRewards for critical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of __USD 50 000__ for Critical bug reports. \n\nThe rewards for the Blockchain/DLT section is only for the ZK-SNARK Circuits assets and not any other blockchain/DLT section.\n\nPayouts are handled by the __zkSync__ team directly and are denominated in USD. However, payouts are done in __USDC__.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Logic errors with rebase tokens and interest-bearing tokens \n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\n__Websites and Apps__\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "All smart contracts of zkSync can be found at [https://github.com/matter-labs/zksync/tree/breaking/contracts](https://github.com/matter-labs/zksync/tree/breaking/contracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. \n\n__Note__ that the bug bounty program includes contracts from the [active upgrade](https://docs.zksync.io/updates/2022-02-28-upgrade.html) - zkSync target/governance target/additional zkSync.",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "L2"
        ],
        "projectType": [
          "NFT"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Blockchain/DLT",
          "Smart Contract",
          "Websites and Applications"
        ],
        "language": [
          "Rust"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Websites and Applications",
          "Blockchain/DLT"
        ],
        "blockchain_rewards": [
          {
            "level": "Critical",
            "payout": "USD $500,000"
          },
          {
            "level": "High",
            "payout": "USD $10,000"
          }
        ],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $2,300,000"
          },
          {
            "level": "High",
            "payout": "USD $50,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "USD $50,000"
          },
          {
            "level": "High",
            "payout": "USD $5,000"
          }
        ]
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"zkSync is a scaling engine for Ethereum. Its current functionality scope includes low gas transfers of ETH and ERC20 tokens in the Ethereum network, atomic swaps & limit orders as well as native L2 NFT support. \"), mdx(\"p\", null, \"zkSync is built on ZK Rollup architecture. ZK Rollup is an L2 scaling solution in which all funds are held by a smart contract on the mainchain, while computation and storage are performed off-chain. For every Rollup block, a state transition zero-knowledge proof (SNARK) is generated and verified by the mainchain contract. This SNARK includes the proof of the validity of every single transaction in the Rollup block. Additionally, the public data update for every block is published over the mainchain network in the cheap calldata.\"), mdx(\"p\", null, \"For more information about zkSync, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://zksync.io/\"\n  }, \"https://zksync.io/\"), \".  \"), mdx(\"p\", null, \"This bug bounty program is focused on their smart contracts, ZK-SNARK circuits, web and app and is focused on preventing:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of user funds by permanent freezing or direct theft\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Temporary freezing of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract destruction\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Double spending\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ability to execute a transaction with changed signed parameters\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>zkSync is a scaling engine for Ethereum. Its current functionality scope includes low gas transfers of ETH and ERC20 tokens in the Ethereum network, atomic swaps &amp; limit orders as well as native L2 NFT support. </p><p>zkSync is built on ZK Rollup architecture. ZK Rollup is an L2 scaling solution in which all funds are held by a smart contract on the mainchain, while computation and storage are performed off-chain. For every Rollup block, a state transition zero-knowledge proof (SNARK) is generated and verified by the mainchain contract. This SNARK includes the proof of the validity of every single transaction in the Rollup block. Additionally, the public data update for every block is published over the mainchain network in the cheap calldata.</p><p>For more information about zkSync, please visit <a href=\"https://zksync.io/\">https://zksync.io/</a>.  </p><p>This bug bounty program is focused on their smart contracts, ZK-SNARK circuits, web and app and is focused on preventing:</p><ul><li>Loss of user funds by permanent freezing or direct theft</li><li>Temporary freezing of funds</li><li>Smart contract destruction</li><li>Double spending</li><li>Ability to execute a transaction with changed signed parameters</li></ul>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Impacts in Scope\")), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"), mdx(\"p\", null, \"The Blockchain/DLT impacts are only applicable for the ZK-SNARK Circuits assets in scope.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Critical\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of user funds by permanent burning, freezing or direct theft\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Network shutdown\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"High\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Temporary freezing of funds for at least 24 hours\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Forceful activation of exodus mode\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Blocking of upgrade system\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Medium\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract gas drainage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Low\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract fails to deliver promised returns, but doesn\\u2019t lose value \")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Blockchain/DLT ZK-SNARK Circuits\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Critical\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Double spending\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Inability to generate a block for a priority operation that is added through a smart contract\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Minting fungible tokens not through a deposit\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ability to steal/burn/freeze other people's tokens\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"High\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ability to execute a transaction with changed signed parameters (e.g. sender/recipient/amount/tokenId/feeToken/...)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ability to create a block with public input information that is not enough to restore state transition\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Web/App\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Critical\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Leak of user data\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Redirected funds by address modification\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Site goes down\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p><strong>Impacts in Scope</strong></p><p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p><p>The Blockchain/DLT impacts are only applicable for the ZK-SNARK Circuits assets in scope.</p><p><strong>Smart Contracts</strong></p><p><strong>Critical</strong></p><ul><li>Loss of user funds by permanent burning, freezing or direct theft</li><li>Network shutdown</li></ul><p><strong>High</strong></p><ul><li>Temporary freezing of funds for at least 24 hours</li><li>Forceful activation of exodus mode</li><li>Blocking of upgrade system</li></ul><p><strong>Medium</strong></p><ul><li>Smart contract gas drainage</li><li>Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)</li></ul><p><strong>Low</strong></p><ul><li>Smart contract fails to deliver promised returns, but doesn’t lose value </li></ul><p><strong>Blockchain/DLT ZK-SNARK Circuits</strong></p><p><strong>Critical</strong></p><ul><li>Double spending</li><li>Inability to generate a block for a priority operation that is added through a smart contract</li><li>Minting fungible tokens not through a deposit</li><li>Ability to steal/burn/freeze other people&#x27;s tokens</li></ul><p><strong>High</strong></p><ul><li>Ability to execute a transaction with changed signed parameters (e.g. sender/recipient/amount/tokenId/feeToken/...)</li><li>Ability to create a block with public input information that is not enough to restore state transition</li></ul><p><strong>Web/App</strong></p><p><strong>Critical</strong></p><ul><li>Leak of user data</li><li>Redirected funds by address modification</li><li>Site goes down</li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.  For the ZK-SNARK Circuits, the classification will be based on the impacts listed on the Impacts in Scope section below\"), mdx(\"p\", null, \"All critical and high severity bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\"), mdx(\"p\", null, \"Rewards for critical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 50 000\"), \" for Critical bug reports. \"), mdx(\"p\", null, \"The rewards for the Blockchain/DLT section is only for the ZK-SNARK Circuits assets and not any other blockchain/DLT section.\"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"zkSync\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.  For the ZK-SNARK Circuits, the classification will be based on the impacts listed on the Impacts in Scope section below</p><p>All critical and high severity bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.</p><p>Rewards for critical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of <strong>USD 50 000</strong> for Critical bug reports. </p><p>The rewards for the Blockchain/DLT section is only for the ZK-SNARK Circuits assets and not any other blockchain/DLT section.</p><p>Payouts are handled by the <strong>zkSync</strong> team directly and are denominated in USD. However, payouts are done in <strong>USDC</strong>.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Logic errors with rebase tokens and interest-bearing tokens \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theoretical vulnerabilities without any proof or demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Content spoofing / Text injection issues\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Self-XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Captcha bypass using OCR\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with no security impact (logout CSRF, change language, etc.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as \\u201Chttponly\\u201D)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Server-side information disclosure such as IPs, server names, and most stack traces\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities used to enumerate or confirm the existence of users or tenants\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities requiring unlikely user actions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of SSL/TLS best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DDoS vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring privileged access from within the organization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Feature requests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practices\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Logic errors with rebase tokens and interest-bearing tokens </li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p><strong>Websites and Apps</strong></p><ul><li>Theoretical vulnerabilities without any proof or demonstration</li><li>Content spoofing / Text injection issues</li><li>Self-XSS</li><li>Captcha bypass using OCR</li><li>CSRF with no security impact (logout CSRF, change language, etc.)</li><li>Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)</li><li>Server-side information disclosure such as IPs, server names, and most stack traces</li><li>Vulnerabilities used to enumerate or confirm the existence of users or tenants</li><li>Vulnerabilities requiring unlikely user actions</li><li>URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)</li><li>Lack of SSL/TLS best practices</li><li>DDoS vulnerabilities</li><li>Attacks requiring privileged access from within the organization</li><li>Feature requests</li><li>Best practices</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of zkSync can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/matter-labs/zksync/tree/breaking/contracts\"\n  }, \"https://github.com/matter-labs/zksync/tree/breaking/contracts\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note\"), \" that the bug bounty program includes contracts from the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.zksync.io/updates/2022-02-28-upgrade.html\"\n  }, \"active upgrade\"), \" - zkSync target/governance target/additional zkSync.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of zkSync can be found at <a href=\"https://github.com/matter-labs/zksync/tree/breaking/contracts\">https://github.com/matter-labs/zksync/tree/breaking/contracts</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. </p><p><strong>Note</strong> that the bug bounty program includes contracts from the <a href=\"https://docs.zksync.io/updates/2022-02-28-upgrade.html\">active upgrade</a> - zkSync target/governance target/additional zkSync.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

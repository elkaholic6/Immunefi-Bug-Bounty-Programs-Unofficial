{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "qblockchain",
      "slug": "qblockchain",
      "project": "Q Blockchain ",
      "maxBounty": 200000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/DqPeHRrQH2BBseNdVHUtU/2d0ce9422603fa7ccaa43a972d468b0c/Q_Logo_RGB_Blue.svg",
      "launchDate": "2022-09-06T11:30-06:00",
      "updatedDate": "2022-10-13T14:03:04.654Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "blockchain_dlt",
          "level": "critical",
          "payout": "USD $50,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "high",
          "payout": "USD $25,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to USD $200,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $25,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": false
        },
        {
          "assetType": "websites_and_applications",
          "level": "critical",
          "payout": "USD $10,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "high",
          "payout": "USD $5,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "7oLce5ZzhtWhOSSHok39KV",
          "type": "blockchain_dlt",
          "url": "https://gitlab.com/q-dev/q-client",
          "description": "Blockchain/DLT"
        },
        {
          "id": "4ZC6umt1EX9NXxvqEBpLwy",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/tokeneconomics/DefaultAllocationProxy.sol",
          "description": "tokeneconomics/DefaultAllocationProxy"
        },
        {
          "id": "3OL5WEEot9HBZ356tVgJJ7",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/common/CompoundRateKeeper.sol",
          "description": "common/CompoundRateKeeper"
        },
        {
          "id": "6dPBV1FAU925YnybqGQqgU",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/common/AddressStorage.sol",
          "description": "common/AddressStorage"
        },
        {
          "id": "5iswzeq3PXuzW26qeM5T5d",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/tokeneconomics/ValidationRewardProxy.sol",
          "description": "tokeneconomics/ValidationRewardProxy"
        },
        {
          "id": "74dHfenV83gV1qTdworMeE",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/tokeneconomics/RootNodeRewardProxy.sol",
          "description": "tokeneconomics/RootNodeRewardProxy"
        },
        {
          "id": "5eHEsKVWikyqAhkeEMfB6I",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/tokeneconomics/QHolderRewardProxy.sol",
          "description": "tokeneconomics/QHolderRewardProxy"
        },
        {
          "id": "16l5Hu2mo7yDkFSSaX7TLw",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/tokeneconomics/QHolderRewardPool.sol",
          "description": "tokeneconomics/QHolderRewardPool"
        },
        {
          "id": "6T0zFNz15wLxJ61sfkoXW7",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/tokeneconomics/ValidationRewardPools.sol",
          "description": "tokeneconomics/ValidationRewardPools"
        },
        {
          "id": "OgJivTPaaFpnjtJ0Eg7PT",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/tokeneconomics/QVault.sol",
          "description": "tokeneconomics/QVault"
        },
        {
          "id": "1B3Id0nadUEHVCbhAUXXxm",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/tokeneconomics/Vesting.sol",
          "description": "tokeneconomics/Vesting"
        },
        {
          "id": "77EJthBG6YDdeud5lCQFWj",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/tokeneconomics/PushPayments.sol",
          "description": "tokeneconomics/PushPayments"
        },
        {
          "id": "7D63wkZeFQnkQuwP9zc4Pi",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/defi/TokenBridgeAdminProxy.sol",
          "description": "defi/TokenBridgeAdminProxy"
        },
        {
          "id": "3yLVGaYhoFiEMbAPXBVERH",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/defi/token/StableCoin.sol",
          "description": "defi/token/StableCoin"
        },
        {
          "id": "4w05GwKkLFhOPWciR5IK62",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/defi/BorrowingCore.sol",
          "description": "defi/BorrowingCore"
        },
        {
          "id": "3vDxOeis4FIxtKyEOqVvzb",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/defi/Saving.sol",
          "description": "defi/Saving"
        },
        {
          "id": "3zHhmCVSgnLltlzZ13Iv0v",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/defi/SystemBalance.sol",
          "description": "defi/SystemBalance"
        },
        {
          "id": "2LjKiHxbNd52evo4ni2Eac",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/defi/LiquidationAuction.sol",
          "description": "defi/LiquidationAuction"
        },
        {
          "id": "6Uo2U7bCGDEK9HGj15vtav",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/defi/SystemSurplusAuction.sol",
          "description": "defi/SystemSurplusAuction"
        },
        {
          "id": "4KGy7VS2BO1PZ4vs4OvdwV",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/defi/SystemDebtAuction.sol",
          "description": "defi/SystemDebtAuction"
        },
        {
          "id": "4apoAmZnwOt7B8HjqoJ4mW",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/governance/constitution/Constitution.sol",
          "description": "governance/constitution/Constitution"
        },
        {
          "id": "5aSwlbV1Ozzuu6SnQoiIqg",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/governance/constitution/ConstitutionVoting.sol",
          "description": "governance/constitution/ConstitutionVoting"
        },
        {
          "id": "5ZOswPCuUWLTUsD6z5ZrmZ",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/governance/rootNodes/Roots.sol",
          "description": "governance/rootNodes/Roots"
        },
        {
          "id": "57To3xrUTYpkNtxmJ7zPj9",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/governance/rootNodes/RootsVoting.sol",
          "description": "governance/rootNodes/RootsVoting"
        },
        {
          "id": "3zletVUxVDBstSuUInivTc",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/governance/rootNodes/RootNodesSlashingVoting.sol",
          "description": "governance/rootNodes/RootNodesSlashingVoting"
        },
        {
          "id": "6w9LE7Y7FLlFHLI6shJIVP",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/governance/rootNodes/RootNodeSlashingEscrow.sol",
          "description": "governance/rootNodes/RootNodeSlashingEscrow"
        },
        {
          "id": "qkoPQj0am7ojQJuBzEuMr",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/governance/validators/Validators.sol",
          "description": "governance/validators/Validators"
        },
        {
          "id": "7CEtDAyVZgnl4apVCTUPtf",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/governance/validators/ValidatorsSlashingVoting.sol",
          "description": "governance/validators/ValidatorsSlashingVoting"
        },
        {
          "id": "1ZfKdZcb7548OtnoMhkKJg",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/governance/validators/ValidatorSlashingEscrow.sol",
          "description": "governance/validators/ValidatorSlashingEscrow"
        },
        {
          "id": "2mzxxKhv5NKfPH89f30CaT",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/governance/experts/EPDR_Membership.sol",
          "description": "governance/experts/EPDR_Membership"
        },
        {
          "id": "7znvdBj6dkGNKopws1AqmQ",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/governance/experts/EPDR_MembershipVoting.sol",
          "description": "governance/experts/EPDR_MembershipVoting"
        },
        {
          "id": "YCA2IjjOE7oGGA4MU87DV",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/governance/experts/EPDR_Parameters.sol",
          "description": "governance/experts/EPDR_Parameters"
        },
        {
          "id": "3KmPl5KsRBDvfQ8WiinGRE",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/governance/experts/EPDR_ParametersVoting.sol",
          "description": "governance/experts/EPDR_ParametersVoting"
        },
        {
          "id": "3gULtGWh7KDyV3jzvRBHfn",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/governance/experts/EPQFI_Membership.sol",
          "description": "governance/experts/EPQFI_Membership"
        },
        {
          "id": "3fR5mOuzlhH2bVlIjghSTF",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/governance/experts/EPQFI_MembershipVoting.sol",
          "description": "governance/experts/EPQFI_MembershipVoting"
        },
        {
          "id": "3XDKYdHII7cWzXCci4Eukf",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/governance/experts/EPQFI_Parameters.sol",
          "description": "governance/experts/EPQFI_Parameters"
        },
        {
          "id": "7bLYdVaY5GAq0mJhm2mHQn",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/governance/experts/EPQFI_ParametersVoting.sol",
          "description": "governance/experts/EPQFI_ParametersVoting"
        },
        {
          "id": "4TwqqVHsiItXXbf4vw0SMp",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/governance/experts/EPRS_Membership.sol",
          "description": "governance/experts/EPRS_Membership"
        },
        {
          "id": "1S16cNZMbYsxticg43DtXa",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/governance/experts/EPRS_MembershipVoting.sol",
          "description": "governance/experts/EPRS_MembershipVoting"
        },
        {
          "id": "31cI8BCPgK8grMpWj3ounX",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/governance/experts/EPRS_Parameters.sol",
          "description": "governance/experts/EPRS_Parameters"
        },
        {
          "id": "6TORgtMZUoQTeYKaabBgqW",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/governance/experts/EPRS_ParametersVoting.sol",
          "description": "governance/experts/EPRS_ParametersVoting"
        },
        {
          "id": "3kgYOd7o4ymOu5B0FTCIPX",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/governance/EmergencyUpdateVoting.sol",
          "description": "governance/EmergencyUpdateVoting"
        },
        {
          "id": "6MhpMRPSKuTNKmERobbAu6",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/governance/GeneralUpdateVoting.sol",
          "description": "governance/GeneralUpdateVoting"
        },
        {
          "id": "4lfbEUAceZ5MouIAjQYtaF",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/governance/VotingWeightProxy.sol",
          "description": "governance/VotingWeightProxy"
        },
        {
          "id": "3IzMWGnF2kggfAZsz7xhi6",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/tokeneconomics/SystemReserve.sol",
          "description": "tokeneconomics/SystemReserve"
        },
        {
          "id": "2mU43qyfUJau1zmoB7S5wJ",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/governance/ContractRegistryUpgradeVoting.sol",
          "description": "governance/ContractRegistryUpgradeVoting"
        },
        {
          "id": "7aGZHKwPlleajY4s10Pm6A",
          "type": "smart_contract",
          "url": "https://gitlab.com/q-dev/system-contracts/-/blob/mainnet/contracts/governance/ContractRegistryAddressVoting.sol",
          "description": "governance/ContractRegistryAddressVoting"
        },
        {
          "id": "1nvGHAk7R0oydRPUwLEuiv",
          "type": "websites_and_applications",
          "url": "https://hq.q.org/",
          "description": "Web/App"
        },
        {
          "id": "5Dhw3g6AKC4G3jX0clLd2y",
          "type": "websites_and_applications",
          "url": "https://q.org/",
          "description": "Web/App"
        }
      ],
      "impacts": [
        {
          "id": "1f5fwoUj8sGYaqOBZQkHZZ",
          "title": "Network not being able to confirm new transactions (Total network shutdown)",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "4bPv3yEjlJSdhJs4AZP2Xr",
          "title": "Unintended permanent chain split requiring hard fork (Network partition requiring hard fork)",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "7JDLOMx9Ns9Mi91hfrZFPh",
          "title": "Direct loss of funds",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "2nYkv4azltrRCjDRtvE0iT",
          "title": "Permanent freezing of funds (fix requires hardfork)",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "qQt7MZTWaMjiZRrZkzx1u",
          "title": "Any governance voting result manipulation",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4FsyTPJDn6jxSo6PD2nHXH",
          "title": "Direct theft of any user funds in pools, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2rThzMRvfrBqWlLor3ESOY",
          "title": "Permanent freezing of funds in pools",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3hZFCwfMW4Ju6X8VygiMrv",
          "title": "Protocol insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "FQArNv5W6dDGwBw50n6Kp",
          "title": "Execute arbitrary system commands",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "2Ky6fLEXlhggt192RYDf3o",
          "title": "Retrieve sensitive data/files from a running server such as /etc/shadow, database passwords, and blockchain keys(this does not include non-sensitive environment variables, open source code, or usernames)",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "1dn0XOqBoT5glhjOnzLsSv",
          "title": "Taking down the application/website",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "1tUcH12ghPtoRIkF2nhNre",
          "title": "Taking state-modifying authenticated actions (with or without blockchain state interaction) on behalf of other users without any interaction by that user, such as, changing registration information, commenting, voting, making trades, withdrawals, etc.",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "61civUSbg02hMvfX3sqIiJ",
          "title": "Subdomain takeover with already-connected wallet interaction",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "12DvXyH4TjAVJnHFYwmGi3",
          "title": "Direct theft of user funds",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "3xMLydN3XhJ5ra5tJyOZK9",
          "title": "Malicious interactions with an already-connected wallet such as modifying transaction arguments or parameters, substituting contract addresses, submitting malicious transactions",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "4fo8sIqEUYY50XnCHGh9Ot",
          "title": "Unintended chain split (Network partition)",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "4TMe0EB7lkG1GpjGRRoIsf",
          "title": "Transient consensus failures",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "70blUZ7fnhoNLeiN01jwEc",
          "title": "Theft of unclaimed yield in pools",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "4yvbrslaUSHlzDYnt4xwlL",
          "title": "Permanent freezing of unclaimed yield in pools",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "3wrq29tmqzbTTUQI4U7gpZ",
          "title": "Temporary freezing of funds for at least 4 hours",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "7tnGAUzdkxmfIMgFqkTiA0",
          "title": "Injecting/modifying the static content on the target application without Javascript (Persistent) such as HTML injection without Javascript, replacing existing text with arbitrary text, arbitrary file uploads, etc.",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "4iAead0yid9ZOgreb84A6w",
          "title": "Changing sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, such as email or password of the victim, etc.",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "7D8Y388SNZdZDqZG3OHvKx",
          "title": "Improperly disclosing confidential user information such as email address, phone number, physical address, etc.",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "3qMIneHh3I1tJxGaDrDVZl",
          "title": "Subdomain takeover without already-connected wallet interaction",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "6SfHWiy3g8JQngqoPNBKpz",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "28riiImeyjp7Wi9TOp9ziA",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "7uhP009MiWFQGCOb3tA6ZF",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "1ZuA9qGKAhUBY9PGK81jBj",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "4NxMtbgP1fu3Ea6hYDQvX8",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "1yUZ5i19hpEy0ZCLEiSMpi",
          "title": "Smart contract fails to deliver promised returns, but doesn’t lose value",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "The Q Blockchain is the universal governance layer for the decentralized world.\n\nQ’s unique dual-layer node architecture provides an unparalleled level of security against malicious attacks.\n\nQ combines the benefits of a public, open and decentralized ledger with the transparency of enforceable private contracts. Whether you want to interact with other businesses, build decentralized applications or simply send and receive tokens: Q is for you.\n\nFor more information about Q Blockchain, please visit [https://q.org/](https://q.org/).",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\n\nAll web/app and blockchain/DLT bug reports, as well as all Critical/High/Medium severity smart contract bug reports, must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. \n\nIn addition, all Critical severity bug reports must come with a suggestion for a fix in order to be considered for a reward. \n\nRewards for critical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of __USD 50 000__ for Critical smart contract bug reports. \n\nQ Blockchain requires that all bug bounty hunters who are eligible for a reward submit an invoice to Q Development AG, which administers and pays out bounty rewards. Please note that Q Development will need to perform a KYC check on the bug bounty hunter claiming the reward. Information typically required in a KYC check includes the name and address of the bug bounty hunter and a copy of the passport, or in case of a corporation, a trade register excerpt or similar. Please also note that Q Development AG cannot make payments to officially sanctioned/blacklisted countries. If in doubt, please feel free to get in touch with the team prior to submitting a reward payout claim. \n\nPayouts are handled by the __Q Blockchain__ team directly and are denominated in USD. However, payouts are done in __USDC__. ",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\n__Websites and Apps__\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Attacks requiring physical access to the victim device\n  - Attacks requiring access to the local network of the victim\n  - Reflected plain text injection ex: url parameters, path, etc.\n    - This does not exclude reflected HTML injection with or without javascript\n    - This does not exclude persistent plain text injection\n  - Self-XSS\n  - Captcha bypass using OCR without impact demonstration\n  - CSRF with no state modifying security impact (ex: logout CSRF)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”) without demonstration of impact\n  - Server-side non-confidential information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used only to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Feature requests\n  - Issues related to the frontend without concrete impact and PoC\n  - Best practices issues without concrete impact and PoC\n  - Vulnerabilities primarily caused by browser/plugin defects\n  - Leakage of non sensitive api keys ex: etherscan, Infura, Alchemy, etc.\n  - Any vulnerability exploit requiring browser bugs for exploitation. ex: CSP bypass\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "All smart contracts of Q Blockchain can be found at [https://gitlab.com/q-dev/system-contracts](https://gitlab.com/q-dev/system-contracts). Only those specifically in the contracts folder with the git tag ‘mainnet’ are considered assets in scope.\n\nIf any Critical impact can be caused to any other asset managed by Q Blockchain that isn’t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project.",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": null,
        "projectType": null,
        "ecosystem": null,
        "programType": null,
        "language": null
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Websites and Applications",
          "Blockchain/DLT"
        ],
        "blockchain_rewards": [
          {
            "level": "Critical",
            "payout": "USD $50,000"
          },
          {
            "level": "High",
            "payout": "USD $25,000"
          }
        ],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $200,000"
          },
          {
            "level": "High",
            "payout": "USD $25,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "USD $10,000"
          },
          {
            "level": "High",
            "payout": "USD $5,000"
          }
        ]
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The Q Blockchain is the universal governance layer for the decentralized world.\"), mdx(\"p\", null, \"Q\\u2019s unique dual-layer node architecture provides an unparalleled level of security against malicious attacks.\"), mdx(\"p\", null, \"Q combines the benefits of a public, open and decentralized ledger with the transparency of enforceable private contracts. Whether you want to interact with other businesses, build decentralized applications or simply send and receive tokens: Q is for you.\"), mdx(\"p\", null, \"For more information about Q Blockchain, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://q.org/\"\n  }, \"https://q.org/\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The Q Blockchain is the universal governance layer for the decentralized world.</p><p>Q’s unique dual-layer node architecture provides an unparalleled level of security against malicious attacks.</p><p>Q combines the benefits of a public, open and decentralized ledger with the transparency of enforceable private contracts. Whether you want to interact with other businesses, build decentralized applications or simply send and receive tokens: Q is for you.</p><p>For more information about Q Blockchain, please visit <a href=\"https://q.org/\">https://q.org/</a>.</p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\"), mdx(\"p\", null, \"All web/app and blockchain/DLT bug reports, as well as all Critical/High/Medium severity smart contract bug reports, must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. \"), mdx(\"p\", null, \"In addition, all Critical severity bug reports must come with a suggestion for a fix in order to be considered for a reward. \"), mdx(\"p\", null, \"Rewards for critical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 50 000\"), \" for Critical smart contract bug reports. \"), mdx(\"p\", null, \"Q Blockchain requires that all bug bounty hunters who are eligible for a reward submit an invoice to Q Development AG, which administers and pays out bounty rewards. Please note that Q Development will need to perform a KYC check on the bug bounty hunter claiming the reward. Information typically required in a KYC check includes the name and address of the bug bounty hunter and a copy of the passport, or in case of a corporation, a trade register excerpt or similar. Please also note that Q Development AG cannot make payments to officially sanctioned/blacklisted countries. If in doubt, please feel free to get in touch with the team prior to submitting a reward payout claim. \"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Q Blockchain\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \". \"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.</p><p>All web/app and blockchain/DLT bug reports, as well as all Critical/High/Medium severity smart contract bug reports, must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. </p><p>In addition, all Critical severity bug reports must come with a suggestion for a fix in order to be considered for a reward. </p><p>Rewards for critical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of <strong>USD 50 000</strong> for Critical smart contract bug reports. </p><p>Q Blockchain requires that all bug bounty hunters who are eligible for a reward submit an invoice to Q Development AG, which administers and pays out bounty rewards. Please note that Q Development will need to perform a KYC check on the bug bounty hunter claiming the reward. Information typically required in a KYC check includes the name and address of the bug bounty hunter and a copy of the passport, or in case of a corporation, a trade register excerpt or similar. Please also note that Q Development AG cannot make payments to officially sanctioned/blacklisted countries. If in doubt, please feel free to get in touch with the team prior to submitting a reward payout claim. </p><p>Payouts are handled by the <strong>Q Blockchain</strong> team directly and are denominated in USD. However, payouts are done in <strong>USDC</strong>. </p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theoretical vulnerabilities without any proof or demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring physical access to the victim device\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to the local network of the victim\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reflected plain text injection ex: url parameters, path, etc.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This does not exclude reflected HTML injection with or without javascript\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This does not exclude persistent plain text injection\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Self-XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Captcha bypass using OCR without impact demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with no state modifying security impact (ex: logout CSRF)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as \\u201Chttponly\\u201D) without demonstration of impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Server-side non-confidential information disclosure such as IPs, server names, and most stack traces\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities used only to enumerate or confirm the existence of users or tenants\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of SSL/TLS best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DDoS vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Feature requests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Issues related to the frontend without concrete impact and PoC\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practices issues without concrete impact and PoC\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities primarily caused by browser/plugin defects\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Leakage of non sensitive api keys ex: etherscan, Infura, Alchemy, etc.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any vulnerability exploit requiring browser bugs for exploitation. ex: CSP bypass\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p><strong>Websites and Apps</strong></p><ul><li>Theoretical vulnerabilities without any proof or demonstration</li><li>Attacks requiring physical access to the victim device</li><li>Attacks requiring access to the local network of the victim</li><li>Reflected plain text injection ex: url parameters, path, etc.<ul><li>This does not exclude reflected HTML injection with or without javascript</li><li>This does not exclude persistent plain text injection</li></ul></li><li>Self-XSS</li><li>Captcha bypass using OCR without impact demonstration</li><li>CSRF with no state modifying security impact (ex: logout CSRF)</li><li>Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”) without demonstration of impact</li><li>Server-side non-confidential information disclosure such as IPs, server names, and most stack traces</li><li>Vulnerabilities used only to enumerate or confirm the existence of users or tenants</li><li>Vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows</li><li>Lack of SSL/TLS best practices</li><li>DDoS vulnerabilities</li><li>Feature requests</li><li>Issues related to the frontend without concrete impact and PoC</li><li>Best practices issues without concrete impact and PoC</li><li>Vulnerabilities primarily caused by browser/plugin defects</li><li>Leakage of non sensitive api keys ex: etherscan, Infura, Alchemy, etc.</li><li>Any vulnerability exploit requiring browser bugs for exploitation. ex: CSP bypass</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of Q Blockchain can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://gitlab.com/q-dev/system-contracts\"\n  }, \"https://gitlab.com/q-dev/system-contracts\"), \". Only those specifically in the contracts folder with the git tag \\u2018mainnet\\u2019 are considered assets in scope.\"), mdx(\"p\", null, \"If any Critical impact can be caused to any other asset managed by Q Blockchain that isn\\u2019t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of Q Blockchain can be found at <a href=\"https://gitlab.com/q-dev/system-contracts\">https://gitlab.com/q-dev/system-contracts</a>. Only those specifically in the contracts folder with the git tag ‘mainnet’ are considered assets in scope.</p><p>If any Critical impact can be caused to any other asset managed by Q Blockchain that isn’t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

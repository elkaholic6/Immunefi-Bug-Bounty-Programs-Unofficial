{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "balancer",
      "slug": "balancer",
      "project": "Balancer",
      "maxBounty": 1000000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5RONBs8MvUillmn49FRQ8G/58ec9b1dcf5079426bebf218c3948166/Balancer_Logo.png",
      "launchDate": "2022-05-12T10:00-06:00",
      "updatedDate": "2023-08-13T17:25:55.868Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to USD $1,000,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "Up to USD $250,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "Up to USD $25,000",
          "pocRequired": false
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "WjBxG95ORXgl5pmnopFzg",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xba100000625a3754423978a60c9317c58a424e3d#code",
          "description": "BalancerGovernanceToken"
        },
        {
          "id": "3of9FDP9ax7EbiuafSnpK9",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xA331D84eC860Bf466b4CdCcFb4aC09a1B43F3aE6#code",
          "description": "Authorizer"
        },
        {
          "id": "Aje5VJ9f6kfI02n8XOylf",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xBA12222222228d8Ba445958a75a0704d566BF2C8#code",
          "description": "Vault"
        },
        {
          "id": "3hBvLUtftz7gGbJs18UKvh",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x8E9aa87E45e92bad84D5F8DD1bff34Fb92637dE9#code",
          "description": "WeightedPoolFactory"
        },
        {
          "id": "Ie6bM2i3u4ItZy6hjNvw7",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xA5bf2ddF098bb0Ef6d120C98217dD6B141c74EE0#code",
          "description": "WeightedPool2TokensFactory"
        },
        {
          "id": "3Dv3PymTtDNiJ7UU1q6ssm",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xc66Ba2B6595D3613CCab350C886aCE23866EDe24#code",
          "description": "StablePoolFactory"
        },
        {
          "id": "4kfq4qkSYpGSqRZmLU96UV",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x67d27634E44793fE63c467035E31ea8635117cd4#code",
          "description": "MetaStablePoolFactory"
        },
        {
          "id": "2ddswVOsxmF5zpEbEhc4K8",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x48767F9F868a4A7b86A90736632F6E44C2df7fa9#code",
          "description": "InvestmentPoolFactory"
        },
        {
          "id": "48jzoWq9iYQL9skj5gTufa",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x0F3e0c4218b7b0108a3643cFe9D3ec0d4F57c54e#code",
          "description": "NoProtocolFeeLiquidityBootstrappingPoolFactory"
        },
        {
          "id": "4N8dhWpXgjUT9r8hui9fsh",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x41B953164995c11C81DA73D212ED8Af25741b7Ac#code",
          "description": "BatchRelayerLibrary"
        },
        {
          "id": "8vFO2nzi7N68n6dQlhPIT",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xAc9f49eF3ab0BbC929f7b1bb0A17E1Fca5786251#code",
          "description": "BalancerRelayer"
        },
        {
          "id": "4p26Mezxwfq6EhCgbDOtXp",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xD7FAD3bd59D6477cbe1BE7f646F7f1BA25b230f8#code",
          "description": "AaveLinearPoolFactory"
        },
        {
          "id": "2GrLUPoQyZjEeM2R8eWIuF",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xb08E16cFc07C684dAA2f93C70323BAdb2A6CBFd2#code",
          "description": "StablePhantomPoolFactory"
        },
        {
          "id": "4K4BlEKq5RtuObzkBEjGr3",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x8F42aDBbA1B16EaAE3BB5754915E0D06059aDd75#code",
          "description": "AuthorizerAdaptor"
        },
        {
          "id": "4C8ZojKcMrMR3i9mYV9Xwa",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xB848f50141F3D4255b37aC288C25C109104F2158#code",
          "description": "BALTokenHolderFactory"
        },
        {
          "id": "5H6X04FiqVx6Ffu0StT7sj",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xf302f9F50958c5593770FDf4d4812309fF77414f#code",
          "description": "BalancerTokenAdmin"
        },
        {
          "id": "311ZIUmYkJMhawfdIt73zu",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xEd5ba579bB5D516263ff6E1C10fcAc1040075Fe2#code",
          "description": "GaugeAdder"
        },
        {
          "id": "1DUaton7qSvY9JLTSKgtBA",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xC128a9954e6c874eA3d62ce62B468bA073093F25#code",
          "description": "VotingEscrow"
        },
        {
          "id": "67ShrCo1COSezyzDhHpKFP",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xC128468b7Ce63eA702C1f104D55A2566b13D3ABD#code",
          "description": "GaugeController"
        },
        {
          "id": "64lClnvo0nsUvEw4bvhIE3",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x239e55F427D44C3cc793f49bFB507ebe76638a2b#code",
          "description": "BalancerMinter"
        },
        {
          "id": "49k5mZABKu3bKVsfd90p27",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x3b8cA519122CdD8efb272b0D3085453404B25bD0#code",
          "description": "LiquidityGaugeV5"
        },
        {
          "id": "3SDJ61MOcJeA0tj518drX9",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x4e7bbd911cf1efa442bc1b2e9ea01ffe785412ec#code",
          "description": "LiquidityGaugeFactory"
        },
        {
          "id": "yQ9sKncSrGWUbJO1aip3U",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x94f68b54191F62f781Fe8298A8A5Fa3ed772d227#code",
          "description": "SingleRecipientGaugeFactory"
        },
        {
          "id": "5dzo81ouGbDr3kT9Xgum9y",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x2e96068b3d5b5bae3d7515da4a1d2e52d08a2647#code",
          "description": "VotingEscrowDelegation"
        },
        {
          "id": "6hwgj1zLpVsnymoah8JWeJ",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x6f5a2eE11E7a772AeB5114A20d0D7c0ff61EB8A0#code",
          "description": "VotingEscrowDelegationProxy"
        },
        {
          "id": "5tXZeU6Z17Esn1s7fO8ExA",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xad901309d9e9DbC5Df19c84f729f429F0189a633#code",
          "description": "ArbitrumRootGaugeFactory"
        },
        {
          "id": "1ahrvDbTyF2AhAuOk8iwLF",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x4C4287b07d293E361281bCeEe8715c8CDeB64E34#code",
          "description": "PolygonRootGaugeFactory"
        },
        {
          "id": "1lZPxTcK2D1fXocfiPEqcj",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x26743984e3357eFC59f2fd6C1aFDC310335a61c9#code",
          "description": "FeeDistributor"
        },
        {
          "id": "6DMJJR4BLeHmXU0iCcrA3f",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x7869296Efd0a76872fEE62A058C8fBca5c1c826C#code",
          "description": "SmartWalletChecker"
        },
        {
          "id": "5tnNL0Rahx7M7iZY3aSuFm",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xbfD9769b061E57e478690299011A028194D66e3C#code",
          "description": "DistributionScheduler"
        },
        {
          "id": "5Ux6WsgRAirDhh4kbsInZO",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x2E96068b3D5B5BAE3D7515da4A1D2E52d08A2647#code",
          "description": "RewardsOnlyGauge"
        },
        {
          "id": "1AxDW7lJkeq2jkrKbF8umj",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x6f5a2eE11E7a772AeB5114A20d0D7c0ff61EB8A0#code",
          "description": "ChildChainStreamer"
        },
        {
          "id": "63KSmYjc71QHFZpXNCP2Bb",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x3b8cA519122CdD8efb272b0D3085453404B25bD0#code",
          "description": "ChildChainLiquidityGaugeFactory"
        }
      ],
      "impacts": [
        {
          "id": "3FnWbeMc9QYx8XkYpq2XY9",
          "title": "Theft of >1% of total funds in the Vault",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3CtDCLHY2ilntYFU5QJ2Ke",
          "title": "Permanent freezing of >1% of total funds in the Vault",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3XBxPopDoIBJ2TGvt7BfmF",
          "title": "Theft of funds in excess of gas costs or swap fees",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "2vHEYbO9RzR9kCXPfxstSf",
          "title": "Permanent freezing of funds in excess of gas costs or swap fees",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "1Lkz4w6KGQ2MsKtYMW5btJ",
          "title": "Temporary freezing of funds in excess of gas costs or swap fees",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "7CZ6ipVOWGmRArgehafQLj",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "SnOajAIRIPGkubdM3enx2",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "medium"
        }
      ],
      "programOverview": "Balancer is a community-driven protocol, liquidity provider, and price sensor that empowers decentralized exchange and the automated portfolio management of tokens on the Ethereum blockchain and other EVM compatible systems.\n\nBalancer Pools contain two or more tokens that traders can swap between. Liquidity Providers put their tokens in the pools in order to collect swap fees. \n\nBalancer adopts powerful features to slash gas costs, super-charge capital efficiency, unlock arbitrage with zero-token starting capital, and open the door to custom AMMs.\n\nFor more information about Balancer, please visit [https://balancer.fi/](https://balancer.fi/).",
      "prioritizedVulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\nCritical \n  - Theft of >1% of total funds in the Vault\n  - Permanent freezing of >1% of total funds in the Vault\n\nHigh\n  - Theft of funds in excess of gas costs or swap fees\n  - Permanent freezing of funds in excess of gas costs or swap fees\n\nMedium\n  - Temporary freezing of funds in excess of gas costs or swap fees\n  - Theft of unclaimed yield\n  - Permanent freezing of unclaimed yield",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\n\nAll Critical/High severity bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nCritical smart contract vulnerabilities are further capped at __10%__ of economic damage, taking into account the funds at risk at the moment of the bug report submission. However, there is a minimum reward of __USD 250 000__. Additionally, the maximum reward is capped at __USD 1 000 000__, even if __10%__ of the damage in USD equivalent is greater than __USD 1 000 000__.\n\nHigh severity smart contract vulnerabilities are also further capped at __10%__ of economic damage, taking into account the funds at risk at the moment of the bug report submission. However, there is a minimum reward of __50 000 USD__. Additionally, the maximum reward is capped at __USD 250 000__, even if __10%__ of the damage is greater than __USD 250 000__.\n\nVulnerabilities involving non-standard ERC20 tokens are considered out of scope, as it would be trivial to insert an exploit into a token for the sake of applying to this bug bounty. A standard, Balancer-compatible ERC20 token is one that conforms to all [EIP-20 interfaces](https://eips.ethereum.org/EIPS/eip-20) and exhibits expected behavior in implementation; i.e., transfers move exactly N tokens from sender to recipient, and balances do not change by any means other than transfers. Notably, tokens with transfer fees, rebasing supplies, streaming mechanics or multiple entrypoints are not compatible with Balancer, but that list is not exhaustive.\n\nKnown issues such as those previously highlighted in the following audit report are considered out of scope (list is not exhaustive): \n  - [https://github.com/balancer-labs/balancer-v2-monorepo/tree/master/audits](https://github.com/balancer-labs/balancer-v2-monorepo/tree/master/audits) \n\nPayouts are handled by the __Balancer__ team directly and are denominated in __USD__. However, payouts are done in __ETH__ or __USDC__, at the discretion of the team.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "All smart contracts of Balancer can be found at [https://github.com/balancer-labs/balancer-v2-monorepo](https://github.com/balancer-labs/balancer-v2-monorepo). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\nIf a Critical impact can be caused to any other asset managed by Balancer that isn’t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project.",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "AMM",
          "Asset Management",
          "DEX"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $1,000,000"
          },
          {
            "level": "High",
            "payout": "Up to USD $250,000"
          },
          {
            "level": "Medium",
            "payout": "Up to USD $25,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Balancer is a community-driven protocol, liquidity provider, and price sensor that empowers decentralized exchange and the automated portfolio management of tokens on the Ethereum blockchain and other EVM compatible systems.\"), mdx(\"p\", null, \"Balancer Pools contain two or more tokens that traders can swap between. Liquidity Providers put their tokens in the pools in order to collect swap fees. \"), mdx(\"p\", null, \"Balancer adopts powerful features to slash gas costs, super-charge capital efficiency, unlock arbitrage with zero-token starting capital, and open the door to custom AMMs.\"), mdx(\"p\", null, \"For more information about Balancer, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://balancer.fi/\"\n  }, \"https://balancer.fi/\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Balancer is a community-driven protocol, liquidity provider, and price sensor that empowers decentralized exchange and the automated portfolio management of tokens on the Ethereum blockchain and other EVM compatible systems.</p><p>Balancer Pools contain two or more tokens that traders can swap between. Liquidity Providers put their tokens in the pools in order to collect swap fees. </p><p>Balancer adopts powerful features to slash gas costs, super-charge capital efficiency, unlock arbitrage with zero-token starting capital, and open the door to custom AMMs.</p><p>For more information about Balancer, please visit <a href=\"https://balancer.fi/\">https://balancer.fi/</a>.</p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Impacts in Scope\")), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts\")), mdx(\"p\", null, \"Critical \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of >1% of total funds in the Vault\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of >1% of total funds in the Vault\")), mdx(\"p\", null, \"High\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of funds in excess of gas costs or swap fees\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of funds in excess of gas costs or swap fees\")), mdx(\"p\", null, \"Medium\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Temporary freezing of funds in excess of gas costs or swap fees\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of unclaimed yield\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p><strong>Impacts in Scope</strong></p><p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p><p><strong>Smart Contracts</strong></p><p>Critical </p><ul><li>Theft of &gt;1% of total funds in the Vault</li><li>Permanent freezing of &gt;1% of total funds in the Vault</li></ul><p>High</p><ul><li>Theft of funds in excess of gas costs or swap fees</li><li>Permanent freezing of funds in excess of gas costs or swap fees</li></ul><p>Medium</p><ul><li>Temporary freezing of funds in excess of gas costs or swap fees</li><li>Theft of unclaimed yield</li><li>Permanent freezing of unclaimed yield</li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\"), mdx(\"p\", null, \"All Critical/High severity bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\"), mdx(\"p\", null, \"Critical smart contract vulnerabilities are further capped at \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"10%\"), \" of economic damage, taking into account the funds at risk at the moment of the bug report submission. However, there is a minimum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 250 000\"), \". Additionally, the maximum reward is capped at \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 1 000 000\"), \", even if \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"10%\"), \" of the damage in USD equivalent is greater than \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 1 000 000\"), \".\"), mdx(\"p\", null, \"High severity smart contract vulnerabilities are also further capped at \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"10%\"), \" of economic damage, taking into account the funds at risk at the moment of the bug report submission. However, there is a minimum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"50 000 USD\"), \". Additionally, the maximum reward is capped at \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 250 000\"), \", even if \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"10%\"), \" of the damage is greater than \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 250 000\"), \".\"), mdx(\"p\", null, \"Vulnerabilities involving non-standard ERC20 tokens are considered out of scope, as it would be trivial to insert an exploit into a token for the sake of applying to this bug bounty. A standard, Balancer-compatible ERC20 token is one that conforms to all \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://eips.ethereum.org/EIPS/eip-20\"\n  }, \"EIP-20 interfaces\"), \" and exhibits expected behavior in implementation; i.e., transfers move exactly N tokens from sender to recipient, and balances do not change by any means other than transfers. Notably, tokens with transfer fees, rebasing supplies, streaming mechanics or multiple entrypoints are not compatible with Balancer, but that list is not exhaustive.\"), mdx(\"p\", null, \"Known issues such as those previously highlighted in the following audit report are considered out of scope (list is not exhaustive): \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/balancer-labs/balancer-v2-monorepo/tree/master/audits\"\n  }, \"https://github.com/balancer-labs/balancer-v2-monorepo/tree/master/audits\"), \" \")), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Balancer\"), \" team directly and are denominated in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD\"), \". However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ETH\"), \" or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \", at the discretion of the team.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.</p><p>All Critical/High severity bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.</p><p>Critical smart contract vulnerabilities are further capped at <strong>10%</strong> of economic damage, taking into account the funds at risk at the moment of the bug report submission. However, there is a minimum reward of <strong>USD 250 000</strong>. Additionally, the maximum reward is capped at <strong>USD 1 000 000</strong>, even if <strong>10%</strong> of the damage in USD equivalent is greater than <strong>USD 1 000 000</strong>.</p><p>High severity smart contract vulnerabilities are also further capped at <strong>10%</strong> of economic damage, taking into account the funds at risk at the moment of the bug report submission. However, there is a minimum reward of <strong>50 000 USD</strong>. Additionally, the maximum reward is capped at <strong>USD 250 000</strong>, even if <strong>10%</strong> of the damage is greater than <strong>USD 250 000</strong>.</p><p>Vulnerabilities involving non-standard ERC20 tokens are considered out of scope, as it would be trivial to insert an exploit into a token for the sake of applying to this bug bounty. A standard, Balancer-compatible ERC20 token is one that conforms to all <a href=\"https://eips.ethereum.org/EIPS/eip-20\">EIP-20 interfaces</a> and exhibits expected behavior in implementation; i.e., transfers move exactly N tokens from sender to recipient, and balances do not change by any means other than transfers. Notably, tokens with transfer fees, rebasing supplies, streaming mechanics or multiple entrypoints are not compatible with Balancer, but that list is not exhaustive.</p><p>Known issues such as those previously highlighted in the following audit report are considered out of scope (list is not exhaustive): </p><ul><li><a href=\"https://github.com/balancer-labs/balancer-v2-monorepo/tree/master/audits\">https://github.com/balancer-labs/balancer-v2-monorepo/tree/master/audits</a> </li></ul><p>Payouts are handled by the <strong>Balancer</strong> team directly and are denominated in <strong>USD</strong>. However, payouts are done in <strong>ETH</strong> or <strong>USDC</strong>, at the discretion of the team.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of Balancer can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/balancer-labs/balancer-v2-monorepo\"\n  }, \"https://github.com/balancer-labs/balancer-v2-monorepo\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\"), mdx(\"p\", null, \"If a Critical impact can be caused to any other asset managed by Balancer that isn\\u2019t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of Balancer can be found at <a href=\"https://github.com/balancer-labs/balancer-v2-monorepo\">https://github.com/balancer-labs/balancer-v2-monorepo</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.</p><p>If a Critical impact can be caused to any other asset managed by Balancer that isn’t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}

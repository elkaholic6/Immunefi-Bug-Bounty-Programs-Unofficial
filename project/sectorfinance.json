{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "sectorfinance",
      "slug": "sectorfinance",
      "project": "Sector Finance",
      "maxBounty": 25000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7dVrw3BxzBhUqx2Sjxx9bR/9241082817e84f0b5796bd5b2e6513d6/logo_small.svg",
      "launchDate": "2023-05-11T14:00+03:00",
      "updatedDate": "2023-05-11T19:20:01.054Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $5,000 to USD $25,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "4E4biFstmZ39Yn6Ao3uAIf",
          "type": "smart_contract",
          "url": "https://moonriver.moonscan.io/address/0x40375Db8A4e733c2d2f515473cebE56970D1192b",
          "description": "USDC-Aggregator-r2-v0"
        },
        {
          "id": "gronQgi4Sq10FYuN9zJEj",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0xc2b37a776b8B98C5AD656b4F3C3B239F7dBE6459",
          "description": "USDC-Aggregator-r2-v0"
        },
        {
          "id": "73npgcREPxuDvxKP5hWBKu",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x10A1b6019ac090892530A2E89A0512e8bB437DdF",
          "description": "USDC-Aggregator-r0-v0"
        },
        {
          "id": "3yez2CzSreprPvL52zuu1B",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x7e5B4E4b06AE5beeD13056c402b8630239Bd2eea",
          "description": "ETH-Aggregator-r2-v0"
        },
        {
          "id": "7F8GGS24d93yRB8xvxPlFC",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x55829702477998369D5b001cA0f0E8cB4917e365",
          "description": "ETH-Aggregator-r0-v0"
        },
        {
          "id": "6yQAo8Wki9uxp2yBESYq1H",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x09e677692a17dA303A868D46C53aC53B1901D90E",
          "description": "USDC-Aggregator-r2-v0"
        },
        {
          "id": "nSIpVjeNLDbVgyqnqHlgW",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xbe2Be6a2DAcf9dCC76903756ee8e085B1C5a2c30",
          "description": "USDC-Aggregator-r0-v0"
        },
        {
          "id": "52ZRPA7B2PgeUSWnyikwzp",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x4c457498fde2E44582cd669f5ad1035bD23Ad376",
          "description": "ETH-Aggregator-r2-v0"
        },
        {
          "id": "7xh0aid0cnXT2iNFON7562",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x6dC873656fCde76dFAe75146D9B2B4b6697a0594",
          "description": "ETH-Aggregator-r0-v0"
        },
        {
          "id": "3ThosR0tijMzPlWdoif7SQ",
          "type": "smart_contract",
          "url": "https://moonriver.moonscan.io/address/0x7acE71f029fe98E2ABdb49aA5a9f86D916088e7A",
          "description": "HLP_USDC-MOVR_Solar-Well_moonriver_v0_0_Vault"
        },
        {
          "id": "5ZLDkw4NTKRfTXfxZQcwap",
          "type": "smart_contract",
          "url": "https://moonriver.moonscan.io/address/0x32884BaADfC211309D9A6Baa2BB46Fe4B2434D05",
          "description": "HLP_USDC-MOVR_Solar-Well_moonriver_v0_1_Vault"
        },
        {
          "id": "20F0VPEsxts9tGu9cLFKiK",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0xe793Fe8eaF4980ec385f879aAb3877284Fc38661",
          "description": "LLP_USDC-ETH_Tarot-Velo_optimism_v0_0_Vault"
        },
        {
          "id": "46iGlYDmOIoHnnPdBJpdyW",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0xdb569C898E0aa691c047B4836672058D29690730",
          "description": "LLP_ETH-USDC_Tarot-Velo_optimism_v0_0_Vault"
        },
        {
          "id": "6wQaVJCJQJmNej5EJgFiUI",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x8f878DE65E681bb701f014a4fbF77418c225f4Cb",
          "description": "LLP_USDC-ETH_Tarot-Xcal_arbitrum_v0_0_Vault"
        },
        {
          "id": "3iq2u49GRvRY0senCBB4Al",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xBA23f815E15242C366d78dA15A0355C242048F86",
          "description": "LLP_ETH-USDC_Tarot-Xcal_arbitrum_v0_0_Vault"
        },
        {
          "id": "4sJmk90D9cHuyU8JHGjIMD",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x6c29834a5E7359055B7F637A5EC1B29047c8E8Da",
          "description": "LND_ETH-USDC_Tarot_optimism_v0_0_Vault"
        },
        {
          "id": "1lNh4JAvjOCyUN7GhdpAOe",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x3eD6c8424089A88aae2e963F4592ea4101Bb5846",
          "description": "LND_USDC-ETH_Tarot_optimism_v0_0_Vault"
        },
        {
          "id": "16YnMIHSUY5iEuRpsXzx8l",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x22914d115E5E9B9a88C4101a1f2E1090c2fA7913",
          "description": "LND_ETH-USDC_Tarot_arbitrum_v0_0_Vault"
        },
        {
          "id": "4fQTUOlZLWLKQ2ZJwiqOJL",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xA6F224428a168a0F6eCFCB070D6a36e2291a6719",
          "description": "LND_USDC-ETH_Tarot_arbitrum_v0_0_Vault"
        },
        {
          "id": "2XiB42A2zBkJgBAenZd0nN",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x4202b73de0e3893F6cB183a085b15AdA2Ed11B91",
          "description": "LND_USDC_Stargate_optimism_v0_0_Vault"
        },
        {
          "id": "iTHwJ7OqhwdF3QYqaxK17",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x2Fb6EbbEd6bB744Cd6aFCDA674CE0De38d1f987F",
          "description": "LND_USDC_Stargate_arbitrum_v0_0_Vault"
        },
        {
          "id": "40eRteDRWXBlbSZh7Kp7oV",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xDBF024FF5b9DF294ccF637E663e2BF86e507d6d5",
          "description": "LND_USDC_Synapse_arbitrum_v0_0_Vault"
        },
        {
          "id": "oyk3HrsMV2aOYu1lDx06a",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x5FEcb965C834101FD26d6D7D392dA69746b87585",
          "description": "LND_ETH_Synapse_arbitrum_v0_0_Vault"
        },
        {
          "id": "5NzRQrN7ePHv7olt5JumbY",
          "type": "smart_contract",
          "url": "https://moonriver.moonscan.io/address/0x689C5E52Ea6104B9632905D58A5fcF63E2Ae3A4D",
          "description": "MasterChefCompMulti.sol"
        },
        {
          "id": "4omVc6zNppFFCgr45gaYa7",
          "type": "smart_contract",
          "url": "https://moonriver.moonscan.io/address/0x09Fce40f017e0Ac7551B49a372760eE474F5f1BC",
          "description": "MasterChefCompMulti.sol"
        },
        {
          "id": "t5hZG3VcJdBgwQ0ZBzW1b",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x1BFb4C5d84aA3e6564491659706B09a25a6819E4",
          "description": "IMX.sol"
        },
        {
          "id": "3kpYssdcQ1LJb7yOgldmqp",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x70E9D7dBDb6e276E5e298488F7dA913509239EDb",
          "description": "IMX.sol"
        },
        {
          "id": "2q3A8XQg4vBDrOTw8dgFeI",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xc5A80FADbAd866D41C4C4eb2E7eb62b4d5cBD976",
          "description": "IMX.sol"
        },
        {
          "id": "2Oh27FIvCsgh29946KUXDS",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xd79a593b9bbC2C325d7e9cdc6d55C534a3E2Ac2F",
          "description": "IMX.sol"
        },
        {
          "id": "4Ir7ZezPiENMbVHIuDDEzp",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x8544B4c89f2D90Adb1184dF4a3Bc3E9d67118867",
          "description": "IMXLendStrategy.sol"
        },
        {
          "id": "5nkXdqA1a2fHfFLL7qDhm6",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x141639034301d5E66dfe6961e8fe173D4D48Ef3B",
          "description": "IMXLendStrategy.sol"
        },
        {
          "id": "6mgnKZwi0RgQOf6OL69blm",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xbfa0108861A1d95B1c4BA62E98B3f084026F5196",
          "description": "IMXLendStrategy.sol"
        },
        {
          "id": "6fsRqpDduyeTQD1UAY7FMV",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xa701d16ee79AB65C929C2918343f28d6450b5056",
          "description": "IMXLendStrategy.sol"
        },
        {
          "id": "7fwU9zZNUCSJwGgAEOy6BM",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x79Fe2Ec964E8A361188f4020D3Def3bdd023d152",
          "description": "StargateStrategy.sol"
        },
        {
          "id": "1WSHfclHok8eqda4hzBGOl",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x36EeAe644B247Cb285f4C299c72e6a56bb50F2D6",
          "description": "StargateStrategy.sol"
        },
        {
          "id": "5j1BZOPBSYYYKsxbu53Ayg",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xb7aA4Bf9362a66b98D138BFaCabF0ae7bf316599",
          "description": "SynapseStrategy.sol"
        },
        {
          "id": "yQTsov2eCwaKYbV2gh8PM",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xD9E1AF0a23150E0Dd53E9D36311Cd31311961Eef",
          "description": "SynapseStrategy.sol"
        },
        {
          "id": "6Jr441cEi7gfQvYC4of4zT",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x84c002286cfa125fcc5e9a39e6564f5c5afbc43f",
          "description": "veSect.sol"
        },
        {
          "id": "6ncd9Q3ubZeBs0k0Kd2yPV",
          "type": "smart_contract",
          "url": "https://arbiscan.io/token/0x84c002286cfa125fcc5e9a39e6564f5c5afbc43f",
          "description": "VotingEscrow.sol"
        },
        {
          "id": "63SVmbYE2Wk6AcpBlMLLRQ",
          "type": "smart_contract",
          "url": "https://arbiscan.io/token/0x02F60921f07024a5b44b6e299Ae23749090dbCfc",
          "description": "bSect.sol"
        },
        {
          "id": "1uTLTDfrAZc6mCgyD0eFHr",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xD7aF644b6747b0cDF84443416c38102B3CE45DA6",
          "description": "RewardDistributor.sol"
        }
      ],
      "impacts": [
        {
          "id": "3T0OUEzfXgO2iuQ03sViUO",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6vybORZNgmkxFiKLwTmwxd",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "7GidjzjHEAVZ3Ek9jv5Yp4",
          "title": "Protocol insolvency",
          "type": "smart_contract",
          "severity": "critical"
        }
      ],
      "programOverview": "Transparent Risk, Real Yield. Earn yield based on your own risk preference.\n\nSector Finance consists of three  core products:  1. The risk engine, 2. Single-strategy investments vaults and 3. Aggregator vaults. The risk engine evaluates and organizes the crypto-risk of our single-strategy investment vaults. The platform then creates structured product vaults that aggregate investment strategies to match the exact risk profile of a user. \n\nWhile risk is an inherent aspect of investing, it is important that both individual and institutional investors are not subjected to the risks associated with poorly constructed products and obscure risk assessment methods. Sector Finance aims to promote the widespread adoption of digital assets by developing innovative financial products and providing investors with information regarding their risk exposures.\n\nFor more information about Sector Finance, please visit [https://sector.finance/ ](https://sector.finance/) \n\n__For Whitehats:__ It is highly recommended that you review the details of this program in full. Although many Bug Bounty programs have standard terms and conditions, each also has their own unique details that are critical to your success.  \n\nPrior to submitting a report please review the [Immunefi Bug Report Template and Best Practices. ](https://immunefisupport.zendesk.com/hc/en-us/articles/12435277406481-Bug-Report-Template)\n\n__Responsible Publication__\n\nSector Finance adheres to category 3. This Policy determines what information whitehats are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our [Responsible Publication ](https://immunefi.com/responsible-publication/)page.\n",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are considered out-of-scope and ineligible for payout.",
      "rewardsBody": "Please review how rewards are distributed based on the [Immunefi Vulnerability Severity Classification System V2.2.](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/) This is a simplified 5-level scale system with separate scales for Smart Contracts and Websites/Apps.\n\nRewards for critical smart contract bug reports will be further capped at 10% of direct funds at risk if the bug discovered is exploited.  However, there is a minimum reward of USD 5 000.\n\n__Payouts and Payout Requirements__\n\nPayouts are handled by the Sector Finance team directly and are denominated in USD. However, payouts are done in USDC. Sector Finance commits to honoring payouts according to the terms set out in this program at the time of report submission, and to treat this program as the agreement and source of truth concerning bug reports and responsible disclosures. \n\nFor the purposes of determining report validity, this is a Primacy of Rules program. \n\nLearn more about report validity best practices here: [Best Practice - Primacy of Impact vs Primacy of Rules.](https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact) \n\n__KYC Requirements__\n\nSector Finance __does not__ have a Know Your Customer (KYC) requirement for bug bounty payouts. \n\n__Audit Discoveries and Known Issues__\n\nBug reports covering previously-discovered bugs are not eligible for any reward through the bug bounty program. If a bug report covers a known issue, it may be rejected together with proof of the issue being known before escalation of the bug report via Immunefi. \n\nPrevious audits and known issues:\n- Sandwich attacks targeting harvests or other deposits that result in griefing or failed transactions (DDOS).\n- Depositing into Aggregator vaults when the share price is temporarily deflated and thus getting a better entry price.\n- Front-running Aggregator vault harvests by depositing immediately before a profitable harvest and withdrawing funds immediately after.\n",
      "outOfScopeAndRules": "The following impacts and attack vectors are excluded from rewards by default for all Immunefi bug bounty programs: \n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist), except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\n- Broken link hijacking is out of scope\n\n__Smart Contracts and Blockchain/DLT__\n\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n- Centralization risks\n\n__Prohibited Activities__\n\nThe following activities are prohibited by this bug bounty program. Violation of these rules can result in a temporary suspension or permanent ban from the Immunefi platform at the sole discretion of the Immunefi team, which may also result in: 1) the forfeiture and loss of access to all bug submissions, and 2) zero payout. \n\nPlease note that Immunefi has no tolerance for spam/low-quality/incomplete bug reports, “beg bounty” behavior, and misrepresentation of assets and severity. Immunefi exists to protect the global crypto community, not facilitate grift.\n\nProhibited: \n- Any testing with mainnet or public testnet deployed code; all testing should be done on private testnets\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- [Any other actions prohibited by the Immunefi Rules](https://immunefi.com/rules/). These rules are subject to change at any time.  \n",
      "assetsBodyV2": "Only those listed in the Assets in Scope table are considered to be in-scope of the bug bounty program. \n\nVulnerabilities found in code used by multiple contracts (ex: proxy contracts or multi-chain deployments) will count as a single submission. In other words, if one vulnerability can be executed on the same identical code over multiple contracts, this would count as a single report. When submitting such a report select one of the affected contracts and add links to others in the body of the report.\n\n__Smart Contracts__ \n\n- __Smart Contracts - PoC__, Smart Contract bug reports are to include a runnable Proof of Concept (PoC) in order to prove impact.  \n- For more information on PoCs please visit: [Proof of Concept (PoC) Guidelines and Rules](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules)\n- Smart contracts of Sector Finance strategies and vaults can be found at:\n[https://github.com/sector-fi/sector-contracts/tree/main](https://github.com/sector-fi/sector-contracts/tree/main) \n- All smart contracts of Sector Finance tokens can be found at: [https://github.com/sector-fi/sector-token/tree/main/src](https://github.com/sector-fi/sector-token/tree/main/src)\n- Only the main branch is in-scope for all repositories.\n\nWhitehats are highly encouraged to review any potential subdomains and what specific port(s) are in scope. Even though the domain may be the same, different ports may point to different assets.  \n\n__Dev Environment and Documentation__\n\nSector Finance has included dev documentation and/or instructions to help in reviewing code and exploring for bugs:\n- [https://github.com/sector-fi/sector-contracts ](https://github.com/sector-fi/sector-contracts)(see README)\n\n__Impacts in Scope__\n\n(For Blockchain/DLT and Smart Contracts Only) This program is considered to be governed by Primacy of Rules. For more information on what this means visit: [Best Practice - Primacy of Impact vs Primacy of Rules.](https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact) \n\nImpacts are based on the [Immunefi Vulnerability Severity Classification System V2.2.](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/)\n\nAt Immunefi, we classify bugs on a simplified 5-level scale:\n- Critical\n- High\n- Medium\n- Low\n- None\n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Asset Management",
          "Yield Aggregator",
          "Staking"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "Optimism",
          "Arbitrum"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $5,000 to USD $25,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Transparent Risk, Real Yield. Earn yield based on your own risk preference.\"), mdx(\"p\", null, \"Sector Finance consists of three  core products:  1. The risk engine, 2. Single-strategy investments vaults and 3. Aggregator vaults. The risk engine evaluates and organizes the crypto-risk of our single-strategy investment vaults. The platform then creates structured product vaults that aggregate investment strategies to match the exact risk profile of a user. \"), mdx(\"p\", null, \"While risk is an inherent aspect of investing, it is important that both individual and institutional investors are not subjected to the risks associated with poorly constructed products and obscure risk assessment methods. Sector Finance aims to promote the widespread adoption of digital assets by developing innovative financial products and providing investors with information regarding their risk exposures.\"), mdx(\"p\", null, \"For more information about Sector Finance, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://sector.finance/\"\n  }, \"https://sector.finance/ \"), \" \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"For Whitehats:\"), \" It is highly recommended that you review the details of this program in full. Although many Bug Bounty programs have standard terms and conditions, each also has their own unique details that are critical to your success.  \"), mdx(\"p\", null, \"Prior to submitting a report please review the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/12435277406481-Bug-Report-Template\"\n  }, \"Immunefi Bug Report Template and Best Practices. \")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Responsible Publication\")), mdx(\"p\", null, \"Sector Finance adheres to category 3. This Policy determines what information whitehats are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/responsible-publication/\"\n  }, \"Responsible Publication \"), \"page.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Transparent Risk, Real Yield. Earn yield based on your own risk preference.</p><p>Sector Finance consists of three  core products:  1. The risk engine, 2. Single-strategy investments vaults and 3. Aggregator vaults. The risk engine evaluates and organizes the crypto-risk of our single-strategy investment vaults. The platform then creates structured product vaults that aggregate investment strategies to match the exact risk profile of a user. </p><p>While risk is an inherent aspect of investing, it is important that both individual and institutional investors are not subjected to the risks associated with poorly constructed products and obscure risk assessment methods. Sector Finance aims to promote the widespread adoption of digital assets by developing innovative financial products and providing investors with information regarding their risk exposures.</p><p>For more information about Sector Finance, please visit <a href=\"https://sector.finance/\">https://sector.finance/ </a> </p><p><strong>For Whitehats:</strong> It is highly recommended that you review the details of this program in full. Although many Bug Bounty programs have standard terms and conditions, each also has their own unique details that are critical to your success.  </p><p>Prior to submitting a report please review the <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/12435277406481-Bug-Report-Template\">Immunefi Bug Report Template and Best Practices. </a></p><p><strong>Responsible Publication</strong></p><p>Sector Finance adheres to category 3. This Policy determines what information whitehats are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our <a href=\"https://immunefi.com/responsible-publication/\">Responsible Publication </a>page.</p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are considered out-of-scope and ineligible for payout.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are considered out-of-scope and ineligible for payout.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Please review how rewards are distributed based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2.\"), \" This is a simplified 5-level scale system with separate scales for Smart Contracts and Websites/Apps.\"), mdx(\"p\", null, \"Rewards for critical smart contract bug reports will be further capped at 10% of direct funds at risk if the bug discovered is exploited.  However, there is a minimum reward of USD 5 000.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Payouts and Payout Requirements\")), mdx(\"p\", null, \"Payouts are handled by the Sector Finance team directly and are denominated in USD. However, payouts are done in USDC. Sector Finance commits to honoring payouts according to the terms set out in this program at the time of report submission, and to treat this program as the agreement and source of truth concerning bug reports and responsible disclosures. \"), mdx(\"p\", null, \"For the purposes of determining report validity, this is a Primacy of Rules program. \"), mdx(\"p\", null, \"Learn more about report validity best practices here: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact\"\n  }, \"Best Practice - Primacy of Impact vs Primacy of Rules.\"), \" \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"KYC Requirements\")), mdx(\"p\", null, \"Sector Finance \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"does not\"), \" have a Know Your Customer (KYC) requirement for bug bounty payouts. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Audit Discoveries and Known Issues\")), mdx(\"p\", null, \"Bug reports covering previously-discovered bugs are not eligible for any reward through the bug bounty program. If a bug report covers a known issue, it may be rejected together with proof of the issue being known before escalation of the bug report via Immunefi. \"), mdx(\"p\", null, \"Previous audits and known issues:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sandwich attacks targeting harvests or other deposits that result in griefing or failed transactions (DDOS).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Depositing into Aggregator vaults when the share price is temporarily deflated and thus getting a better entry price.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Front-running Aggregator vault harvests by depositing immediately before a profitable harvest and withdrawing funds immediately after.\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Please review how rewards are distributed based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/\">Immunefi Vulnerability Severity Classification System V2.2.</a> This is a simplified 5-level scale system with separate scales for Smart Contracts and Websites/Apps.</p><p>Rewards for critical smart contract bug reports will be further capped at 10% of direct funds at risk if the bug discovered is exploited.  However, there is a minimum reward of USD 5 000.</p><p><strong>Payouts and Payout Requirements</strong></p><p>Payouts are handled by the Sector Finance team directly and are denominated in USD. However, payouts are done in USDC. Sector Finance commits to honoring payouts according to the terms set out in this program at the time of report submission, and to treat this program as the agreement and source of truth concerning bug reports and responsible disclosures. </p><p>For the purposes of determining report validity, this is a Primacy of Rules program. </p><p>Learn more about report validity best practices here: <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact\">Best Practice - Primacy of Impact vs Primacy of Rules.</a> </p><p><strong>KYC Requirements</strong></p><p>Sector Finance <strong>does not</strong> have a Know Your Customer (KYC) requirement for bug bounty payouts. </p><p><strong>Audit Discoveries and Known Issues</strong></p><p>Bug reports covering previously-discovered bugs are not eligible for any reward through the bug bounty program. If a bug report covers a known issue, it may be rejected together with proof of the issue being known before escalation of the bug report via Immunefi. </p><p>Previous audits and known issues:</p><ul><li>Sandwich attacks targeting harvests or other deposits that result in griefing or failed transactions (DDOS).</li><li>Depositing into Aggregator vaults when the share price is temporarily deflated and thus getting a better entry price.</li><li>Front-running Aggregator vault harvests by depositing immediately before a profitable harvest and withdrawing funds immediately after.</li></ul>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following impacts and attack vectors are excluded from rewards by default for all Immunefi bug bounty programs: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist), except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Broken link hijacking is out of scope\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain/DLT\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Prohibited Activities\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program. Violation of these rules can result in a temporary suspension or permanent ban from the Immunefi platform at the sole discretion of the Immunefi team, which may also result in: 1) the forfeiture and loss of access to all bug submissions, and 2) zero payout. \"), mdx(\"p\", null, \"Please note that Immunefi has no tolerance for spam/low-quality/incomplete bug reports, \\u201Cbeg bounty\\u201D behavior, and misrepresentation of assets and severity. Immunefi exists to protect the global crypto community, not facilitate grift.\"), mdx(\"p\", null, \"Prohibited: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet deployed code; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://immunefi.com/rules/\"\n  }, \"Any other actions prohibited by the Immunefi Rules\"), \". These rules are subject to change at any time.  \")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following impacts and attack vectors are excluded from rewards by default for all Immunefi bug bounty programs: </p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist), except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible</li><li>Broken link hijacking is out of scope</li></ul><p><strong>Smart Contracts and Blockchain/DLT</strong></p><ul><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p><strong>Prohibited Activities</strong></p><p>The following activities are prohibited by this bug bounty program. Violation of these rules can result in a temporary suspension or permanent ban from the Immunefi platform at the sole discretion of the Immunefi team, which may also result in: 1) the forfeiture and loss of access to all bug submissions, and 2) zero payout. </p><p>Please note that Immunefi has no tolerance for spam/low-quality/incomplete bug reports, “beg bounty” behavior, and misrepresentation of assets and severity. Immunefi exists to protect the global crypto community, not facilitate grift.</p><p>Prohibited: </p><ul><li>Any testing with mainnet or public testnet deployed code; all testing should be done on private testnets</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li><li><a href=\"https://immunefi.com/rules/\">Any other actions prohibited by the Immunefi Rules</a>. These rules are subject to change at any time.  </li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only those listed in the Assets in Scope table are considered to be in-scope of the bug bounty program. \"), mdx(\"p\", null, \"Vulnerabilities found in code used by multiple contracts (ex: proxy contracts or multi-chain deployments) will count as a single submission. In other words, if one vulnerability can be executed on the same identical code over multiple contracts, this would count as a single report. When submitting such a report select one of the affected contracts and add links to others in the body of the report.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts\"), \" \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Smart Contracts - PoC\"), \", Smart Contract bug reports are to include a runnable Proof of Concept (PoC) in order to prove impact.  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For more information on PoCs please visit: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\"\n  }, \"Proof of Concept (PoC) Guidelines and Rules\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contracts of Sector Finance strategies and vaults can be found at:\\n\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/sector-fi/sector-contracts/tree/main\"\n  }, \"https://github.com/sector-fi/sector-contracts/tree/main\"), \" \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All smart contracts of Sector Finance tokens can be found at: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/sector-fi/sector-token/tree/main/src\"\n  }, \"https://github.com/sector-fi/sector-token/tree/main/src\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Only the main branch is in-scope for all repositories.\")), mdx(\"p\", null, \"Whitehats are highly encouraged to review any potential subdomains and what specific port(s) are in scope. Even though the domain may be the same, different ports may point to different assets.  \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Dev Environment and Documentation\")), mdx(\"p\", null, \"Sector Finance has included dev documentation and/or instructions to help in reviewing code and exploring for bugs:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/sector-fi/sector-contracts\"\n  }, \"https://github.com/sector-fi/sector-contracts \"), \"(see README)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Impacts in Scope\")), mdx(\"p\", null, \"(For Blockchain/DLT and Smart Contracts Only) This program is considered to be governed by Primacy of Rules. For more information on what this means visit: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact\"\n  }, \"Best Practice - Primacy of Impact vs Primacy of Rules.\"), \" \"), mdx(\"p\", null, \"Impacts are based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2.\")), mdx(\"p\", null, \"At Immunefi, we classify bugs on a simplified 5-level scale:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Critical\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"High\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Medium\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Low\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"None\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only those listed in the Assets in Scope table are considered to be in-scope of the bug bounty program. </p><p>Vulnerabilities found in code used by multiple contracts (ex: proxy contracts or multi-chain deployments) will count as a single submission. In other words, if one vulnerability can be executed on the same identical code over multiple contracts, this would count as a single report. When submitting such a report select one of the affected contracts and add links to others in the body of the report.</p><p><strong>Smart Contracts</strong> </p><ul><li><strong>Smart Contracts - PoC</strong>, Smart Contract bug reports are to include a runnable Proof of Concept (PoC) in order to prove impact.  </li><li>For more information on PoCs please visit: <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\">Proof of Concept (PoC) Guidelines and Rules</a></li><li>Smart contracts of Sector Finance strategies and vaults can be found at:\n<a href=\"https://github.com/sector-fi/sector-contracts/tree/main\">https://github.com/sector-fi/sector-contracts/tree/main</a> </li><li>All smart contracts of Sector Finance tokens can be found at: <a href=\"https://github.com/sector-fi/sector-token/tree/main/src\">https://github.com/sector-fi/sector-token/tree/main/src</a></li><li>Only the main branch is in-scope for all repositories.</li></ul><p>Whitehats are highly encouraged to review any potential subdomains and what specific port(s) are in scope. Even though the domain may be the same, different ports may point to different assets.  </p><p><strong>Dev Environment and Documentation</strong></p><p>Sector Finance has included dev documentation and/or instructions to help in reviewing code and exploring for bugs:</p><ul><li><a href=\"https://github.com/sector-fi/sector-contracts\">https://github.com/sector-fi/sector-contracts </a>(see README)</li></ul><p><strong>Impacts in Scope</strong></p><p>(For Blockchain/DLT and Smart Contracts Only) This program is considered to be governed by Primacy of Rules. For more information on what this means visit: <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact\">Best Practice - Primacy of Impact vs Primacy of Rules.</a> </p><p>Impacts are based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/\">Immunefi Vulnerability Severity Classification System V2.2.</a></p><p>At Immunefi, we classify bugs on a simplified 5-level scale:</p><ul><li>Critical</li><li>High</li><li>Medium</li><li>Low</li><li>None</li></ul>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}
